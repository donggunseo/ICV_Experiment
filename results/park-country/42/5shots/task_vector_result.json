{
    "score": {
        "exact_match": 0.8783783783783784
    },
    "intervention_layer": 9,
    "result": [
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Ichkeul National Park\nOutput:",
            "test_query": "Ichkeul National Park",
            "prediction": "Tunisia\n\nInput: Everglades National Park\nOutput: United States\n\nInput: Plitvice Lakes",
            "cleaned_prediction": "Tunisia",
            "gt": "Tunisia"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Liuwa Plain National Park\nOutput:",
            "test_query": "Liuwa Plain National Park",
            "prediction": "Zambia\n\n### Code\n```python\npark_name_to_country = {\n    \"Liuwa Plain National",
            "cleaned_prediction": "Zambia",
            "gt": "Zambia"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Balaton-felvid\u00e9ki National Park\nOutput:",
            "test_query": "Balaton-felvid\u00e9ki National Park",
            "prediction": "Hungary\n\nInput: Kruger National Park\nOutput: South Africa\n\nInput: Kruger National Park",
            "cleaned_prediction": "Hungary",
            "gt": "Hungary"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Serengeti National Park\nOutput:",
            "test_query": "Serengeti National Park",
            "prediction": "Tanzania\n\n```python\n# Create a dictionary to store the parks and their corresponding countries\nparks_countries",
            "cleaned_prediction": "Tanzania",
            "gt": "Tanzania"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Soomaa National Park\nOutput:",
            "test_query": "Soomaa National Park",
            "prediction": "Estonia\n\nInput: Cairngorms National Park\nOutput: Scotland\n\nInput: Everglades National",
            "cleaned_prediction": "Estonia",
            "gt": "Estonia"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Sharr Mountains National Park\nOutput:",
            "test_query": "Sharr Mountains National Park",
            "prediction": "Kosovo\n\ndef get_country(park_name):\n    park_dict = {\n        \"Sharr Mountains National Park",
            "cleaned_prediction": "Kosovo",
            "gt": "Kosovo"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Lake Nakuru National Park\nOutput:",
            "test_query": "Lake Nakuru National Park",
            "prediction": "Kenya\nInput: Yellowstone National Park\nOutput: United States\nInput: Kruger National Park\nOutput",
            "cleaned_prediction": "Kenya",
            "gt": "Kenya"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Vesuvius National Park\nOutput:",
            "test_query": "Vesuvius National Park",
            "prediction": "Italy\n\nInput: Vatnaj\u00f6kull National Park\nOutput: Iceland\n\nInput: Fiord",
            "cleaned_prediction": "Italy",
            "gt": "Italy"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Phrumsengla National Park\nOutput:",
            "test_query": "Phrumsengla National Park",
            "prediction": "Bhutan\nInput: Ha Long Bay\nOutput: Vietnam\nInput: Fiordland National Park",
            "cleaned_prediction": "Bhutan",
            "gt": "Bhutan"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Olympic National Park\nOutput:",
            "test_query": "Olympic National Park",
            "prediction": "United States\n\n### Example Use Cases\nInput: Plitvice Lakes National Park\nOutput: Croatia",
            "cleaned_prediction": "United States",
            "gt": "United States of America"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Mount Talau National Park\nOutput:",
            "test_query": "Mount Talau National Park",
            "prediction": "Malaysia\nInput: Huangguoshu National Park\nOutput: China\nInput: Bwindi Imp",
            "cleaned_prediction": "Malaysia",
            "gt": "Tonga"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Erawan National Park\nOutput:",
            "test_query": "Erawan National Park",
            "prediction": "Thailand\n\nNote: Erawan National Park is a national park in Thailand.\n\nHere is my python code",
            "cleaned_prediction": "Thailand",
            "gt": "Thailand"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Mount Kumgang National Park\nOutput:",
            "test_query": "Mount Kumgang National Park",
            "prediction": "North Korea\n\nGiven a name of the park, output the name of corresponding country.\nInput: Plit",
            "cleaned_prediction": "North Korea",
            "gt": "North Korea"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Yangudi Rassa National Park\nOutput:",
            "test_query": "Yangudi Rassa National Park",
            "prediction": "Ethiopia\n\nInput: Laojun Mountain National Park\nOutput: China\n\nInput: Karijini",
            "cleaned_prediction": "Ethiopia",
            "gt": "Ethiopia"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Hainich National Park\nOutput:",
            "test_query": "Hainich National Park",
            "prediction": "Germany\n\nInput: Bialowieza Forest\nOutput: Poland\n\nInput: Plitvice Lakes National",
            "cleaned_prediction": "Germany",
            "gt": "Germany"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Al Areen Wildlife Park\nOutput:",
            "test_query": "Al Areen Wildlife Park",
            "prediction": "Bahrain\nInput: Everland\nOutput: South Korea\nInput: Taronga Zoo\nOutput: Australia",
            "cleaned_prediction": "Bahrain",
            "gt": "Bahrain"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Makgadikgadi Pan National Park\nOutput:",
            "test_query": "Makgadikgadi Pan National Park",
            "prediction": "Botswana\n\nInput: Saguaro National Park\nOutput: United States\n```python\ndef park",
            "cleaned_prediction": "Botswana",
            "gt": "Botswana"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Stora Sjofallet National Park\nOutput:",
            "test_query": "Stora Sjofallet National Park",
            "prediction": "Sweden\n\nInput: Kakadu National Park\nOutput: Australia\n\nInput: Banff National Park\nOutput",
            "cleaned_prediction": "Sweden",
            "gt": "Sweden"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Bimini National Park\nOutput:",
            "test_query": "Bimini National Park",
            "prediction": "Bahamas\nInput: Komodo National Park\nOutput: Indonesia\n\n## Step 1: Create a dictionary",
            "cleaned_prediction": "Bahamas",
            "gt": "Bahamas"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Bontebok National Park\nOutput:",
            "test_query": "Bontebok National Park",
            "prediction": "South Africa\nInput: Yellowstone National Park\nOutput: United States\nInput: Kruger National Park",
            "cleaned_prediction": "South Africa",
            "gt": "South Africa"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Kenting National Park\nOutput:",
            "test_query": "Kenting National Park",
            "prediction": "Taiwan\n\nInput: Yosemite National Park\nOutput: United States\n\nInput: Fiordland National Park",
            "cleaned_prediction": "Taiwan",
            "gt": "Taiwan"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Baluran National Park\nOutput:",
            "test_query": "Baluran National Park",
            "prediction": "Indonesia\n\nInput: Khao Yai National Park\nOutput: Thailand\n\nInput: Tsingy de",
            "cleaned_prediction": "Indonesia",
            "gt": "Indonesia"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Mole National Park\nOutput:",
            "test_query": "Mole National Park",
            "prediction": "Ghana\n\nInput: Denali National Park\nOutput: United States\n\nInput: Kakadu National Park",
            "cleaned_prediction": "Ghana",
            "gt": "Ghana"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Bukhansan National Park\nOutput:",
            "test_query": "Bukhansan National Park",
            "prediction": "South Korea\n\nInput: Kootenay National Park\nOutput: Canada\n\nInput: Bwindi",
            "cleaned_prediction": "South Korea",
            "gt": "South Korea"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Huascar\u00e1n National Park\nOutput:",
            "test_query": "Huascar\u00e1n National Park",
            "prediction": "Peru\n\nInput: Huangguoshu Scenic and Historic Interest Area\nOutput: China\n\nInput:",
            "cleaned_prediction": "Peru",
            "gt": "Peru"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Seoraksan National Park\nOutput:",
            "test_query": "Seoraksan National Park",
            "prediction": "South Korea\n\nInput: Krka National Park\nOutput: Croatia\n\nInput: Aoraki/Mount",
            "cleaned_prediction": "South Korea",
            "gt": "South Korea"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Nockberge National Park\nOutput:",
            "test_query": "Nockberge National Park",
            "prediction": "Austria\nInput: Gargano National Park\nOutput: Italy\nInput: Redwood National Park",
            "cleaned_prediction": "Austria",
            "gt": "Austria"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Altyaghach National Park\nOutput:",
            "test_query": "Altyaghach National Park",
            "prediction": "Azerbaijan\n\nInput: Plitvice Lakes National Park\nOutput: Croatia\n\nInput: Plitvice Lakes",
            "cleaned_prediction": "Azerbaijan",
            "gt": "Azerbaijan"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Gunung Mulu National Park\nOutput:",
            "test_query": "Gunung Mulu National Park",
            "prediction": "Malaysia\n\nInput: Plitvice Lakes National Park\nOutput: Croatia\n\nInput: Banff National Park",
            "cleaned_prediction": "Malaysia",
            "gt": "Malaysia"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Marojejy National Park\nOutput:",
            "test_query": "Marojejy National Park",
            "prediction": "Madagascar\n\nInput: Auyu Itu National Park\nOutput: Indonesia\n\nInput: Everglades National",
            "cleaned_prediction": "Madagascar",
            "gt": "Madagascar"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Laguna de La Restinga National Park\nOutput:",
            "test_query": "Laguna de La Restinga National Park",
            "prediction": "Cuba\nInput: Banff National Park\nOutput: Canada\nInput: Serengeti National Park",
            "cleaned_prediction": "Cuba",
            "gt": "Venezuela"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Hlane Royal National Park\nOutput:",
            "test_query": "Hlane Royal National Park",
            "prediction": "Eswatini\n\nNote: The dictionary can be extended to include more parks.\n\nHere is a simple",
            "cleaned_prediction": "Eswatini",
            "gt": "Eswatini"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Chapada dos Veadeiros National Park\nOutput:",
            "test_query": "Chapada dos Veadeiros National Park",
            "prediction": "Brazil\n\nInput: Yellowstone National Park\nOutput: United States\n\nInput: Plitvice Lakes National Park",
            "cleaned_prediction": "Brazil",
            "gt": "Brazil"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Athalassa National Park\nOutput:",
            "test_query": "Athalassa National Park",
            "prediction": "Cyprus\n\nHere is a map of the park:\n```\n  +---------------+\n  |  Athal",
            "cleaned_prediction": "Cyprus",
            "gt": "Cyprus"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: St. Herman's Blue Hole National Park\nOutput:",
            "test_query": "St. Herman's Blue Hole National Park",
            "prediction": "Belize\n\nInput: Grand Canyon National Park\nOutput: United States\n\nInput: Komodo National Park",
            "cleaned_prediction": "Belize",
            "gt": "Belize"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Ulu Temburong National Park\nOutput:",
            "test_query": "Ulu Temburong National Park",
            "prediction": "Brunei\nInput: Kruger National Park\nOutput: South Africa\nInput: Cairngorms",
            "cleaned_prediction": "Brunei",
            "gt": "Brunei"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: G\u00f6reme National Park\nOutput:",
            "test_query": "G\u00f6reme National Park",
            "prediction": "Turkey\nInput: Grand Canyon National Park\nOutput: United States\nInput: Krka National Park",
            "cleaned_prediction": "Turkey",
            "gt": "Turkey"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Aberdare National Park\nOutput:",
            "test_query": "Aberdare National Park",
            "prediction": "Kenya\n\nInput: Taroko Gorge\nOutput: Taiwan\n\nInput: Grand Canyon\nOutput: United",
            "cleaned_prediction": "Kenya",
            "gt": "Kenya"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Kolsay Lakes National Park\nOutput:",
            "test_query": "Kolsay Lakes National Park",
            "prediction": "Kazakhstan\n\nInput: Torres del Paine National Park\nOutput: Chile\n\nInput: Tsingy de",
            "cleaned_prediction": "Kazakhstan",
            "gt": "Kazakhstan"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Gorkhi-Terelj National Park\nOutput:",
            "test_query": "Gorkhi-Terelj National Park",
            "prediction": "Mongolia\n\nInput: Huangshan National Park\nOutput: China\n\nInput: Grand Canyon National Park\nOutput",
            "cleaned_prediction": "Mongolia",
            "gt": "Mongolia"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Taroko National Park\nOutput:",
            "test_query": "Taroko National Park",
            "prediction": "Taiwan\n\nInput: Kakadu National Park\nOutput: Australia\n\nInput: Torres del Paine National Park",
            "cleaned_prediction": "Taiwan",
            "gt": "Taiwan"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Kaziranga National Park, Assam\nOutput:",
            "test_query": "Kaziranga National Park, Assam",
            "prediction": "India\n\nInput: Etosha National Park\nOutput: Namibia\n\nInput: Torres del Paine",
            "cleaned_prediction": "India",
            "gt": "India"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: South Luangwa National Park\nOutput:",
            "test_query": "South Luangwa National Park",
            "prediction": "Zambia\nInput: Plitvice Lakes National Park\nOutput: Croatia\nInput: Torres del Paine",
            "cleaned_prediction": "Zambia",
            "gt": "Zambia"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Nechisar National Park\nOutput:",
            "test_query": "Nechisar National Park",
            "prediction": "Ethiopia\n\nInput: Ha Long Bay\nOutput: Vietnam\n\nInput: Plitvice Lakes National Park",
            "cleaned_prediction": "Ethiopia",
            "gt": "Ethiopia"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Wakhan National Park\nOutput:",
            "test_query": "Wakhan National Park",
            "prediction": "Afghanistan\n\npark = {\n    'Everglades National Park': 'United States',\n    'Wak",
            "cleaned_prediction": "Afghanistan",
            "gt": "Afghanistan"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Bruce Peninsula National Park\nOutput:",
            "test_query": "Bruce Peninsula National Park",
            "prediction": "Canada\n\nInput: Congaree National Park\nOutput: United States\n\nInput: Kakadu National Park",
            "cleaned_prediction": "Canada",
            "gt": "Canada"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Gargano National Park\nOutput:",
            "test_query": "Gargano National Park",
            "prediction": "Italy\n\nInput: Jasper National Park\nOutput: Canada\n\nInput: Plitvice Lakes National Park",
            "cleaned_prediction": "Italy",
            "gt": "Italy"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Swiss National Park\nOutput:",
            "test_query": "Swiss National Park",
            "prediction": "Switzerland\n\nInput: Everglades National Park\nOutput: United States\n\nInput: Banff National Park",
            "cleaned_prediction": "Switzerland",
            "gt": "Switzerland"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Monte Fogo National Park\nOutput:",
            "test_query": "Monte Fogo National Park",
            "prediction": "Cape Verde\n\nHere is the database:\n```\nname, country\n\"Achala National Park\", \"",
            "cleaned_prediction": "Cape Verde",
            "gt": "Cabo Verde"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Lorentz National Park\nOutput:",
            "test_query": "Lorentz National Park",
            "prediction": "Norway\nInput: Putoran Mountains Wildlife Reserve\nOutput: Russia\nInput: Everglades National",
            "cleaned_prediction": "Norway",
            "gt": "Indonesia"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Wadi El Hitan Protected Area\nOutput:",
            "test_query": "Wadi El Hitan Protected Area",
            "prediction": "Egypt\n\nInput: The Great Blue Hole National Park\nOutput: Belize\n\nInput: Do\u00f1ana National Park",
            "cleaned_prediction": "Egypt",
            "gt": "Egypt"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Jasper National Park\nOutput:",
            "test_query": "Jasper National Park",
            "prediction": "Canada\n\n```python\ndef get_country(park_name):\n    park_dict = {\n        \"Yellowstone",
            "cleaned_prediction": "Canada",
            "gt": "Canada"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Marakele National Park\nOutput:",
            "test_query": "Marakele National Park",
            "prediction": "South Africa\n\n```python\n# Define a dictionary with countries and their corresponding national parks\ncountries_parks",
            "cleaned_prediction": "South Africa",
            "gt": "South Africa"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Ta\u00ef National Park\nOutput:",
            "test_query": "Ta\u00ef National Park",
            "prediction": "C\u00f4te d'Ivoire\n\nInput: Everglades National Park\nOutput: United States\n\nInput",
            "cleaned_prediction": "C\u00f4te d'Ivoire",
            "gt": "Cote d'Ivoire"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Manuel Antonio National Park\nOutput:",
            "test_query": "Manuel Antonio National Park",
            "prediction": "Costa Rica\n\nInput: Banff National Park\nOutput: Canada\n\nInput: Yellowstone National Park\nOutput",
            "cleaned_prediction": "Costa Rica",
            "gt": "Costa Rica"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Desembarco del Granma National Park\nOutput:",
            "test_query": "Desembarco del Granma National Park",
            "prediction": "Cuba\nInput: Plitvice Lakes National Park\nOutput: Croatia\nInput: Huangguoshu",
            "cleaned_prediction": "Cuba",
            "gt": "Cuba"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Pieniny National Park\nOutput:",
            "test_query": "Pieniny National Park",
            "prediction": "Poland\n```python\ndef get_country(park_name):\n    # Create a dictionary to map park names",
            "cleaned_prediction": "Poland",
            "gt": "Poland"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Ugam-Chatkal National Park\nOutput:",
            "test_query": "Ugam-Chatkal National Park",
            "prediction": "Uzbekistan\n\ndef park_country(park_name):\n    park_countries = {\n        \"Yellowstone National Park",
            "cleaned_prediction": "Uzbekistan",
            "gt": "Uzbekistan"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Bacalar Chico National Park and Marine Reserve\nOutput:",
            "test_query": "Bacalar Chico National Park and Marine Reserve",
            "prediction": "Belize\n\ndef get_country(park_name):\n    # Dictionary of parks and their corresponding countries\n    parks",
            "cleaned_prediction": "Belize",
            "gt": "Belize"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Krka National Park\nOutput:",
            "test_query": "Krka National Park",
            "prediction": "Croatia\n\nInput: Grand Canyon National Park\nOutput: USA\n\nInput: Komodo National Park\nOutput",
            "cleaned_prediction": "Croatia",
            "gt": "Croatia"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Yorkshire Dales National Park\nOutput:",
            "test_query": "Yorkshire Dales National Park",
            "prediction": "United Kingdom\n\nInput: Great Sand Dunes National Park\nOutput: United States\n\nInput: Plit",
            "cleaned_prediction": "United Kingdom",
            "gt": "United Kingdom"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Kirirom National Park\nOutput:",
            "test_query": "Kirirom National Park",
            "prediction": "Cambodia\n\n# Code\n```python\n# Define a dictionary that maps park names to their corresponding countries",
            "cleaned_prediction": "Cambodia",
            "gt": "Cambodia"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Laguna San Rafael National Park\nOutput:",
            "test_query": "Laguna San Rafael National Park",
            "prediction": "Chile\n\nimport requests\ndef find_country(park_name):\n    url = \"https://restcountries.eu",
            "cleaned_prediction": "Chile",
            "gt": "Chile"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Saadani National Park\nOutput:",
            "test_query": "Saadani National Park",
            "prediction": "Tanzania\n\nInput: Komodo National Park\nOutput: Indonesia\n\nInput: Corbett National Park\nOutput",
            "cleaned_prediction": "Tanzania",
            "gt": "Tanzania"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Band-e Amir National Park\nOutput:",
            "test_query": "Band-e Amir National Park",
            "prediction": "Afghanistan\n\nInput: Zion National Park\nOutput: United States\n\nInput: Plitvice Lakes National Park",
            "cleaned_prediction": "Afghanistan",
            "gt": "Afghanistan"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Komodo National Park\nOutput:",
            "test_query": "Komodo National Park",
            "prediction": "Indonesia\n\nInput: Denali National Park and Preserve\nOutput: United States\n\nInput: Everglades",
            "cleaned_prediction": "Indonesia",
            "gt": "Indonesia"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Glacier National Park\nOutput:",
            "test_query": "Glacier National Park",
            "prediction": "United States\n\nInput: Torres del Paine National Park\nOutput: Chile\n\nInput: Aoraki",
            "cleaned_prediction": "United States",
            "gt": "United States of America"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Kodar National Park\nOutput:",
            "test_query": "Kodar National Park",
            "prediction": "Russia\nInput: Kruger National Park\nOutput: South Africa\n\n## Step 1: Understand the",
            "cleaned_prediction": "Russia",
            "gt": "Russia"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Khotyn National Nature Park\nOutput:",
            "test_query": "Khotyn National Nature Park",
            "prediction": "Ukraine\nInput: Nahuel Huapi National Park\nOutput: Argentina\n\n```python\ndef get_country",
            "cleaned_prediction": "Ukraine",
            "gt": "Ukraine"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: El Feija National Park\nOutput:",
            "test_query": "El Feija National Park",
            "prediction": "Algeria\n\nInput: Garamba National Park\nOutput: Democratic Republic of the Congo\n\nInput: El",
            "cleaned_prediction": "Algeria",
            "gt": "Tunisia"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Chobe National Park\nOutput:",
            "test_query": "Chobe National Park",
            "prediction": "Botswana\n\nInput: Everglades National Park\nOutput: United States\n\nInput: Snares",
            "cleaned_prediction": "Botswana",
            "gt": "Botswana"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Phibsoo Wildlife Sanctuary\nOutput:",
            "test_query": "Phibsoo Wildlife Sanctuary",
            "prediction": "Bhutan\nInput: Dholawira\nOutput: India\nInput: Khao Yai National",
            "cleaned_prediction": "Bhutan",
            "gt": "Bhutan"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Montecristo National Park\nOutput:",
            "test_query": "Montecristo National Park",
            "prediction": "Argentina\n\ndef find_country(park_name):\n    parks = {\n        \"Montecristo National Park",
            "cleaned_prediction": "Argentina",
            "gt": "El Salvador"
        },
        {
            "input_prompt": "Given a name of the park, output the name of corresponding country.\nInput: Itatiaia National Park\nOutput:",
            "test_query": "Itatiaia National Park",
            "prediction": "Brazil\n\nInput: Arashiyama Park\nOutput: Japan\n\nInput: Kruger National Park",
            "cleaned_prediction": "Brazil",
            "gt": "Brazil"
        }
    ],
    "val_f1_per_layer": {
        "0": 0.8648648648648649,
        "1": 0.8783783783783784,
        "2": 0.8783783783783784,
        "3": 0.8783783783783784,
        "4": 0.8783783783783784,
        "5": 0.8783783783783784,
        "6": 0.8783783783783784,
        "7": 0.8783783783783784,
        "8": 0.8783783783783784,
        "9": 0.8918918918918919,
        "10": 0.8918918918918919,
        "11": 0.8918918918918919,
        "12": 0.8918918918918919,
        "13": 0.8918918918918919,
        "14": 0.8783783783783784,
        "15": 0.8783783783783784,
        "16": 0.7297297297297297,
        "17": 0.5,
        "18": 0.3918918918918919,
        "19": 0.527027027027027,
        "20": 0.4594594594594595,
        "21": 0.3918918918918919,
        "22": 0.22972972972972974,
        "23": 0.0945945945945946,
        "24": 0.02702702702702703,
        "25": 0.04054054054054054,
        "26": 0.0,
        "27": 0.04054054054054054,
        "28": 0.0,
        "29": 0.8648648648648649,
        "30": 0.8513513513513513,
        "31": 0.8513513513513513
    }
}