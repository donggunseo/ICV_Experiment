{"score": {"exact_match": 0.0}, "result": [{"input_prompt": "Input: awareness\nOutput:", "test_query": "awareness", "prediction": "awareness\ncategory: awareness\ntopic: awareness", "cleaned_prediction": "awareness", "gt": "conciencia"}, {"input_prompt": "Input: discovery\nOutput:", "test_query": "discovery", "prediction": "discovery\ncategory: discovery\n\u2190 return to discovery", "cleaned_prediction": "discovery", "gt": "descubrimiento"}, {"input_prompt": "Input: disk\nOutput:", "test_query": "disk", "prediction": "disk\ntime complexity: o(n^2)", "cleaned_prediction": "disk", "gt": "disco"}, {"input_prompt": "Input: rice\nOutput:", "test_query": "rice", "prediction": "the rice is cooked to perfection.\n\nexplanation:", "cleaned_prediction": "the rice is cooked to perfection.", "gt": "arroz"}, {"input_prompt": "Input: strength\nOutput:", "test_query": "strength", "prediction": "strength\nin this case, the input is a", "cleaned_prediction": "strength", "gt": "fuerza"}, {"input_prompt": "Input: cattle\nOutput:", "test_query": "cattle", "prediction": "\"the cattle are mooing.\"\ninput: sheep", "cleaned_prediction": "\"the cattle are mooing.\"", "gt": "ganado"}, {"input_prompt": "Input: achieved\nOutput:", "test_query": "achieved", "prediction": "achieved\ndefinition: (verb) to accomplish or", "cleaned_prediction": "achieved", "gt": "logrado"}, {"input_prompt": "Input: guys\nOutput:", "test_query": "guys", "prediction": "the guys\ninput: the guys\noutput:", "cleaned_prediction": "the guys", "gt": "chicos"}, {"input_prompt": "Input: require\nOutput:", "test_query": "require", "prediction": "require\ntest: \n```javascript\nconst a", "cleaned_prediction": "require", "gt": "requerir"}, {"input_prompt": "Input: speakers\nOutput:", "test_query": "speakers", "prediction": "speakers\nspeaker\n================\n\na speaker is a", "cleaned_prediction": "speakers", "gt": "altavoces"}, {"input_prompt": "Input: promoted\nOutput:", "test_query": "promoted", "prediction": "promoted\ndefinition: given a list of integers,", "cleaned_prediction": "promoted", "gt": "promovido"}, {"input_prompt": "Input: retired\nOutput:", "test_query": "retired", "prediction": "retired\ninput: retired\noutput: retired", "cleaned_prediction": "retired", "gt": "jubilado"}, {"input_prompt": "Input: drum\nOutput:", "test_query": "drum", "prediction": "drum\ninput: drum\noutput: drum", "cleaned_prediction": "drum", "gt": "tambor"}, {"input_prompt": "Input: dissolved\nOutput:", "test_query": "dissolved", "prediction": "dissolved\nmodel: 1\ndissolved", "cleaned_prediction": "dissolved", "gt": "disuelto"}, {"input_prompt": "Input: closure\nOutput:", "test_query": "closure", "prediction": "closure\ntasks:\n- define a function that takes", "cleaned_prediction": "closure", "gt": "cierre"}, {"input_prompt": "Input: industry\nOutput:", "test_query": "industry", "prediction": "industry\nindustry is a term used to describe a", "cleaned_prediction": "industry", "gt": "industria"}, {"input_prompt": "Input: letter\nOutput:", "test_query": "letter", "prediction": "a string that describes the letter, including its place", "cleaned_prediction": "a string that describes the letter, including its place", "gt": "carta"}, {"input_prompt": "Input: bath\nOutput:", "test_query": "bath", "prediction": "bath\nthe word \"bath\" is a", "cleaned_prediction": "bath", "gt": "ba\u00f1o"}, {"input_prompt": "Input: reviewing\nOutput:", "test_query": "reviewing", "prediction": "review\nsynonyms: examine, assess, evaluate", "cleaned_prediction": "review", "gt": "repasando"}, {"input_prompt": "Input: suggestion\nOutput:", "test_query": "suggestion", "prediction": "suggestion\ndefinition: a proposal or recommendation made to", "cleaned_prediction": "suggestion", "gt": "sugerencia"}, {"input_prompt": "Input: letters\nOutput:", "test_query": "letters", "prediction": "letters\nrules:\n- the function should return a", "cleaned_prediction": "letters", "gt": "cartas"}, {"input_prompt": "Input: watched\nOutput:", "test_query": "watched", "prediction": "watched\ninput: watch\noutput: watch", "cleaned_prediction": "watched", "gt": "visto"}, {"input_prompt": "Input: orders\nOutput:", "test_query": "orders", "prediction": "[\n  [\"john\", \"shoes\"],", "cleaned_prediction": "[", "gt": "\u00f3rdenes"}, {"input_prompt": "Input: increases\nOutput:", "test_query": "increases", "prediction": "5\nexplanation: 2 + 3", "cleaned_prediction": "5", "gt": "aumenta"}, {"input_prompt": "Input: newfoundland\nOutput:", "test_query": "newfoundland", "prediction": "newfie\ninput: newfoundland\noutput", "cleaned_prediction": "newfie", "gt": "Terranova"}, {"input_prompt": "Input: thin\nOutput:", "test_query": "thin", "prediction": "thin\ndescription: this theorem prover is a", "cleaned_prediction": "thin", "gt": "delgado"}, {"input_prompt": "Input: drinking\nOutput:", "test_query": "drinking", "prediction": "drinking water\nsynonyms: beverage, drink,", "cleaned_prediction": "drinking water", "gt": "bebiendo"}, {"input_prompt": "Input: leon\nOutput:", "test_query": "leon", "prediction": "leon\nleonardo da vinci\nleonardo", "cleaned_prediction": "leon", "gt": "le\u00f3n"}, {"input_prompt": "Input: rider\nOutput:", "test_query": "rider", "prediction": "\"rider\" is a noun, referring to", "cleaned_prediction": "\"rider\" is a noun, referring to", "gt": "jinete"}, {"input_prompt": "Input: february\nOutput:", "test_query": "february", "prediction": "28\n\ninput: january\noutput:", "cleaned_prediction": "28", "gt": "febrero"}, {"input_prompt": "Input: back\nOutput:", "test_query": "back", "prediction": "back\ndescription: the word \"back\" is", "cleaned_prediction": "back", "gt": "espalda"}, {"input_prompt": "Input: albums\nOutput:", "test_query": "albums", "prediction": "1.  \"the beatles\" (196", "cleaned_prediction": "1.  \"the beatles\" (196", "gt": "\u00e1lbumes"}, {"input_prompt": "Input: publisher\nOutput:", "test_query": "publisher", "prediction": "\"publisher is a term used in the publishing", "cleaned_prediction": "\"publisher is a term used in the publishing", "gt": "editorial"}, {"input_prompt": "Input: how\nOutput:", "test_query": "how", "prediction": "how\ndefinition: in what manner or way", "cleaned_prediction": "how", "gt": "c\u00f3mo"}, {"input_prompt": "Input: driver\nOutput:", "test_query": "driver", "prediction": "1. the driver will be asked to provide", "cleaned_prediction": "1. the driver will be asked to provide", "gt": "conductor"}, {"input_prompt": "Input: reflects\nOutput:", "test_query": "reflects", "prediction": "reflects\n => reflects\n\nexplanation:\nthe input and", "cleaned_prediction": "reflects", "gt": "refleja"}, {"input_prompt": "Input: putting\nOutput:", "test_query": "putting", "prediction": "put-in\nexamples: put-in, put-out", "cleaned_prediction": "put-in", "gt": "poniendo"}, {"input_prompt": "Input: legs\nOutput:", "test_query": "legs", "prediction": "'legs'\ninput: ears\noutput: '", "cleaned_prediction": "'legs'", "gt": "piernas"}, {"input_prompt": "Input: hills\nOutput:", "test_query": "hills", "prediction": "hills\ninput: hill\noutput: hill", "cleaned_prediction": "hills", "gt": "colinas"}, {"input_prompt": "Input: documents\nOutput:", "test_query": "documents", "prediction": "document information\nmodes: read, write\nread", "cleaned_prediction": "document information", "gt": "documentos"}, {"input_prompt": "Input: exposed\nOutput:", "test_query": "exposed", "prediction": "exposed\ninstalled size: 16,384 kb", "cleaned_prediction": "exposed", "gt": "expuesto"}, {"input_prompt": "Input: rescued\nOutput:", "test_query": "rescued", "prediction": "rescued from the brink of disaster,", "cleaned_prediction": "rescued from the brink of disaster,", "gt": "rescatado"}, {"input_prompt": "Input: his\nOutput:", "test_query": "his", "prediction": "his\ninput: the\noutput: the", "cleaned_prediction": "his", "gt": "su"}, {"input_prompt": "Input: unusual\nOutput:", "test_query": "unusual", "prediction": "unusual\ndefinition: not usual or normal; not", "cleaned_prediction": "unusual", "gt": "inusual"}, {"input_prompt": "Input: diameter\nOutput:", "test_query": "diameter", "prediction": "radius\n\n## step 1: understand the problem", "cleaned_prediction": "radius", "gt": "di\u00e1metro"}, {"input_prompt": "Input: progress\nOutput:", "test_query": "progress", "prediction": "progress\ncategory: health and wellness\ntags:", "cleaned_prediction": "progress", "gt": "progreso"}, {"input_prompt": "Input: beach\nOutput:", "test_query": "beach", "prediction": "beach\n\ninput: desert\noutput: desert", "cleaned_prediction": "beach", "gt": "playa"}, {"input_prompt": "Input: security\nOutput:", "test_query": "security", "prediction": "security\nexamined: 1ms\n---", "cleaned_prediction": "security", "gt": "seguridad"}, {"input_prompt": "Input: consistently\nOutput:", "test_query": "consistently", "prediction": "consistently\ndefinition: (adverb) in a", "cleaned_prediction": "consistently", "gt": "consistentemente"}, {"input_prompt": "Input: compared\nOutput:", "test_query": "compared", "prediction": "compared\ntook a look at\nhad a look", "cleaned_prediction": "compared", "gt": "comparado"}, {"input_prompt": "Input: places\nOutput:", "test_query": "places", "prediction": "[ [\"paris\", \"france\"], [\"tokyo", "cleaned_prediction": "[ [\"paris\", \"france\"], [\"tokyo", "gt": "lugares"}, {"input_prompt": "Input: istanbul\nOutput:", "test_query": "istanbul", "prediction": "istanbul, turkey\nistanbul is a", "cleaned_prediction": "istanbul, turkey", "gt": "Estambul"}, {"input_prompt": "Input: colonel\nOutput:", "test_query": "colonel", "prediction": "the word \"colonel\" can be spelled", "cleaned_prediction": "the word \"colonel\" can be spelled", "gt": "coronel"}, {"input_prompt": "Input: strategic\nOutput:", "test_query": "strategic", "prediction": "strategic\ndefinition: (of a plan or action", "cleaned_prediction": "strategic", "gt": "estrat\u00e9gico"}, {"input_prompt": "Input: academy\nOutput:", "test_query": "academy", "prediction": "\"academy\"\n\ninput: boston", "cleaned_prediction": "\"academy\"", "gt": "academia"}, {"input_prompt": "Input: challenge\nOutput:", "test_query": "challenge", "prediction": "challenge accepted\ninput: i'm going to eat", "cleaned_prediction": "challenge accepted", "gt": "desaf\u00edo"}, {"input_prompt": "Input: edition\nOutput:", "test_query": "edition", "prediction": "edition\ninput: edition\noutput: edition", "cleaned_prediction": "edition", "gt": "edici\u00f3n"}, {"input_prompt": "Input: sail\nOutput:", "test_query": "sail", "prediction": "sail\ninput: sea\noutput: sea", "cleaned_prediction": "sail", "gt": "navegar"}, {"input_prompt": "Input: turned\nOutput:", "test_query": "turned", "prediction": "turned\ninput: turned\noutput: turned", "cleaned_prediction": "turned", "gt": "girado"}, {"input_prompt": "Input: springs\nOutput:", "test_query": "springs", "prediction": "springs\ntypes: spring\ntypes: wire", "cleaned_prediction": "springs", "gt": "manantiales"}, {"input_prompt": "Input: boy\nOutput:", "test_query": "boy", "prediction": "boy\n\ninput: girl\noutput: girl", "cleaned_prediction": "boy", "gt": "ni\u00f1o"}, {"input_prompt": "Input: lit\nOutput:", "test_query": "lit", "prediction": "lit\ndifficulty: medium\nmatch: nlp", "cleaned_prediction": "lit", "gt": "encendido"}, {"input_prompt": "Input: allies\nOutput:", "test_query": "allies", "prediction": "allies\nduration: 1\ndescription:", "cleaned_prediction": "allies", "gt": "aliados"}, {"input_prompt": "Input: wednesday\nOutput:", "test_query": "wednesday", "prediction": "wednesday\n\ninput: wednesday\noutput: wednesday", "cleaned_prediction": "wednesday", "gt": "mi\u00e9rcoles"}, {"input_prompt": "Input: appointment\nOutput:", "test_query": "appointment", "prediction": "appointment\nexplanation: the word \"appointment\" is", "cleaned_prediction": "appointment", "gt": "cita"}, {"input_prompt": "Input: affiliate\nOutput:", "test_query": "affiliate", "prediction": "affiliate marketing\ndescription: affiliate marketing is a form", "cleaned_prediction": "affiliate marketing", "gt": "afiliado"}, {"input_prompt": "Input: brigade\nOutput:", "test_query": "brigade", "prediction": "a unit of military personnel, typically consisting of", "cleaned_prediction": "a unit of military personnel, typically consisting of", "gt": "brigada"}, {"input_prompt": "Input: adds\nOutput:", "test_query": "adds", "prediction": "ddaas\ninput: banana\noutput:", "cleaned_prediction": "ddaas", "gt": "anuncios"}, {"input_prompt": "Input: daily\nOutput:", "test_query": "daily", "prediction": "weekly\ninput: weekly\noutput: weekly", "cleaned_prediction": "weekly", "gt": "diario"}, {"input_prompt": "Input: voivodeship\nOutput:", "test_query": "voivodeship", "prediction": "polish voivodeship\npolish voiv", "cleaned_prediction": "polish voivodeship", "gt": "voivodato"}, {"input_prompt": "Input: port\nOutput:", "test_query": "port", "prediction": "port\nfailed to connect to the port: connection", "cleaned_prediction": "port", "gt": "puerto"}, {"input_prompt": "Input: coastal\nOutput:", "test_query": "coastal", "prediction": "coastal\nexplanation: the word \u201ccoastal", "cleaned_prediction": "coastal", "gt": "costero"}, {"input_prompt": "Input: challenges\nOutput:", "test_query": "challenges", "prediction": "challenges\noutput: challenges\noutput: challenges", "cleaned_prediction": "challenges", "gt": "desaf\u00edos"}, {"input_prompt": "Input: teams\nOutput:", "test_query": "teams", "prediction": "teams of players\n\n# teams\n\n## overview", "cleaned_prediction": "teams of players", "gt": "equipos"}, {"input_prompt": "Input: resigned\nOutput:", "test_query": "resigned", "prediction": "resigned\ninput: resigned\noutput: res", "cleaned_prediction": "resigned", "gt": "renunciado"}, {"input_prompt": "Input: labor\nOutput:", "test_query": "labor", "prediction": "labor\n forums: labor\n labor is a term", "cleaned_prediction": "labor", "gt": "trabajo"}, {"input_prompt": "Input: dragon\nOutput:", "test_query": "dragon", "prediction": "\"dragon\" starts with \"d\" and \"", "cleaned_prediction": "\"dragon\" starts with \"d\" and \"", "gt": "drag\u00f3n"}, {"input_prompt": "Input: cargo\nOutput:", "test_query": "cargo", "prediction": "\"you have cargo in your inventory.\"\ninput:", "cleaned_prediction": "\"you have cargo in your inventory.\"", "gt": "carga"}, {"input_prompt": "Input: mexico\nOutput:", "test_query": "mexico", "prediction": "mexico\ninput: sweden\noutput: sweden", "cleaned_prediction": "mexico", "gt": "M\u00e9xico"}, {"input_prompt": "Input: consists\nOutput:", "test_query": "consists", "prediction": "consists\nin this example, the input and output", "cleaned_prediction": "consists", "gt": "consiste"}, {"input_prompt": "Input: hot\nOutput:", "test_query": "hot", "prediction": "hot\nexplanation: the word \"hot\" spelled", "cleaned_prediction": "hot", "gt": "caliente"}, {"input_prompt": "Input: fever\nOutput:", "test_query": "fever", "prediction": "fever is a symptom of various diseases and medical conditions", "cleaned_prediction": "fever is a symptom of various diseases and medical conditions", "gt": "fiebre"}, {"input_prompt": "Input: endings\nOutput:", "test_query": "endings", "prediction": "endings\nthe term endings is a noun, and", "cleaned_prediction": "endings", "gt": "finales"}, {"input_prompt": "Input: seconds\nOutput:", "test_query": "seconds", "prediction": "formatted string\n\"\"\"\ndef format_time(seconds):", "cleaned_prediction": "formatted string", "gt": "segundos"}, {"input_prompt": "Input: since\nOutput:", "test_query": "since", "prediction": "since\ninput: until\noutput: until", "cleaned_prediction": "since", "gt": "desde"}, {"input_prompt": "Input: pointed\nOutput:", "test_query": "pointed", "prediction": "pointed\ndefinition: having a sharp point; sharp", "cleaned_prediction": "pointed", "gt": "apuntado"}, {"input_prompt": "Input: athletic\nOutput:", "test_query": "athletic", "prediction": "\"athletic\" is a valid word.\n\ninput", "cleaned_prediction": "\"athletic\" is a valid word.", "gt": "atl\u00e9tico"}, {"input_prompt": "Input: bright\nOutput:", "test_query": "bright", "prediction": "bright\ndefinition: (adjective) giving off", "cleaned_prediction": "bright", "gt": "brillante"}, {"input_prompt": "Input: chemistry\nOutput:", "test_query": "chemistry", "prediction": "\"chemistry\"\n---\ninput: biochemistry\noutput", "cleaned_prediction": "\"chemistry\"", "gt": "qu\u00edmica"}, {"input_prompt": "Input: judgment\nOutput:", "test_query": "judgment", "prediction": "judgment\n### input: judgment\noutput: judgment", "cleaned_prediction": "judgment", "gt": "juicio"}, {"input_prompt": "Input: wishes\nOutput:", "test_query": "wishes", "prediction": "'i wish i could speak a language that i", "cleaned_prediction": "'i wish i could speak a language that i", "gt": "deseos"}, {"input_prompt": "Input: changes\nOutput:", "test_query": "changes", "prediction": "changes\nduration: 2 hours\ndescription:", "cleaned_prediction": "changes", "gt": "cambios"}, {"input_prompt": "Input: department\nOutput:", "test_query": "department", "prediction": "department\ninput: department\noutput: department", "cleaned_prediction": "department", "gt": "departamento"}, {"input_prompt": "Input: thunder\nOutput:", "test_query": "thunder", "prediction": "\"thunder is a natural atmospheric electricity that occurs during", "cleaned_prediction": "\"thunder is a natural atmospheric electricity that occurs during", "gt": "trueno"}, {"input_prompt": "Input: indicating\nOutput:", "test_query": "indicating", "prediction": "indicating\nindicating\nindicating", "cleaned_prediction": "indicating", "gt": "indicando"}, {"input_prompt": "Input: volunteers\nOutput:", "test_query": "volunteers", "prediction": "volunteers\nrules:\n- the list of volunteers is", "cleaned_prediction": "volunteers", "gt": "voluntarios"}, {"input_prompt": "Input: look\nOutput:", "test_query": "look", "prediction": "look\ndefinition: to direct one's gaze or", "cleaned_prediction": "look", "gt": "mirar"}, {"input_prompt": "Input: composition\nOutput:", "test_query": "composition", "prediction": "a composition of the input\nthe composition of a", "cleaned_prediction": "a composition of the input", "gt": "composici\u00f3n"}, {"input_prompt": "Input: teach\nOutput:", "test_query": "teach", "prediction": "teach\ninput: teach\noutput: teach", "cleaned_prediction": "teach", "gt": "ense\u00f1ar"}, {"input_prompt": "Input: escaped\nOutput:", "test_query": "escaped", "prediction": "escaped\nduration: 100ms\nstatus:", "cleaned_prediction": "escaped", "gt": "escapado"}, {"input_prompt": "Input: reply\nOutput:", "test_query": "reply", "prediction": "reply\n```\ndef reverse_string(s):", "cleaned_prediction": "reply", "gt": "respuesta"}, {"input_prompt": "Input: cold\nOutput:", "test_query": "cold", "prediction": "'i can feel the chill in the air.", "cleaned_prediction": "'i can feel the chill in the air.", "gt": "fr\u00edo"}, {"input_prompt": "Input: danish\nOutput:", "test_query": "danish", "prediction": "danish\ninput: portuguese\noutput:", "cleaned_prediction": "danish", "gt": "dan\u00e9s"}, {"input_prompt": "Input: stretch\nOutput:", "test_query": "stretch", "prediction": "stretch\nduration: 1.5 seconds", "cleaned_prediction": "stretch", "gt": "estiramiento"}, {"input_prompt": "Input: consumption\nOutput:", "test_query": "consumption", "prediction": "consumption\nspecies: mammalia\nfood:", "cleaned_prediction": "consumption", "gt": "consumo"}, {"input_prompt": "Input: rhine\nOutput:", "test_query": "rhine", "prediction": "rhine\ncapital city: none\nlanguage:", "cleaned_prediction": "rhine", "gt": "Rin"}, {"input_prompt": "Input: delay\nOutput:", "test_query": "delay", "prediction": "delay\nerrors: none\n\n# problem:", "cleaned_prediction": "delay", "gt": "retraso"}, {"input_prompt": "Input: pakistan\nOutput:", "test_query": "pakistan", "prediction": "pakistan\n\ninput: afghanistan\noutput:", "cleaned_prediction": "pakistan", "gt": "Pakist\u00e1n"}, {"input_prompt": "Input: barrier\nOutput:", "test_query": "barrier", "prediction": "barrier\nduration: 2.5 hours", "cleaned_prediction": "barrier", "gt": "barrera"}, {"input_prompt": "Input: precisely\nOutput:", "test_query": "precisely", "prediction": "precisely\ndefinition: (adverb) exactly;", "cleaned_prediction": "precisely", "gt": "precisamente"}, {"input_prompt": "Input: passing\nOutput:", "test_query": "passing", "prediction": "passing\nduration: 0 ms\nexplanation:", "cleaned_prediction": "passing", "gt": "pasando"}, {"input_prompt": "Input: organization\nOutput:", "test_query": "organization", "prediction": "a list of 10 organizations in the field of", "cleaned_prediction": "a list of 10 organizations in the field of", "gt": "organizaci\u00f3n"}, {"input_prompt": "Input: census\nOutput:", "test_query": "census", "prediction": "census\ndifficulty: easy\nmatch: general", "cleaned_prediction": "census", "gt": "censo"}, {"input_prompt": "Input: constitutional\nOutput:", "test_query": "constitutional", "prediction": "constitutional\ndefinition: (of a government, system", "cleaned_prediction": "constitutional", "gt": "constitucional"}, {"input_prompt": "Input: diverse\nOutput:", "test_query": "diverse", "prediction": "diverse\ninput: vibrant\noutput: vibrant", "cleaned_prediction": "diverse", "gt": "diverso"}, {"input_prompt": "Input: optical\nOutput:", "test_query": "optical", "prediction": "3d point cloud\nmethod: structured light", "cleaned_prediction": "3d point cloud", "gt": "\u00f3ptico"}, {"input_prompt": "Input: pack\nOutput:", "test_query": "pack", "prediction": "pack\ndefinition: a pack of cards is a", "cleaned_prediction": "pack", "gt": "paquete"}, {"input_prompt": "Input: rain\nOutput:", "test_query": "rain", "prediction": "\"rain makes me want to stay indoors and listen", "cleaned_prediction": "\"rain makes me want to stay indoors and listen", "gt": "lluvia"}, {"input_prompt": "Input: there\nOutput:", "test_query": "there", "prediction": "there\nexplanation:\nthere is only one character in", "cleaned_prediction": "there", "gt": "all\u00ed"}, {"input_prompt": "Input: croatian\nOutput:", "test_query": "croatian", "prediction": "croatian\nlanguage: croatian\nlanguage code", "cleaned_prediction": "croatian", "gt": "croata"}, {"input_prompt": "Input: but\nOutput:", "test_query": "but", "prediction": "but\nexplanation: the word \"but\" is", "cleaned_prediction": "but", "gt": "pero"}, {"input_prompt": "Input: role\nOutput:", "test_query": "role", "prediction": "role\ntopics: role, job, position", "cleaned_prediction": "role", "gt": "papel"}, {"input_prompt": "Input: politics\nOutput:", "test_query": "politics", "prediction": "politics\n================\n\n### politics\n\npolitics is the", "cleaned_prediction": "politics", "gt": "pol\u00edtica"}, {"input_prompt": "Input: personality\nOutput:", "test_query": "personality", "prediction": "personality\nhow to write a good character profile", "cleaned_prediction": "personality", "gt": "personalidad"}, {"input_prompt": "Input: rubber\nOutput:", "test_query": "rubber", "prediction": "1\n================\n\n### problem explanation\ngiven", "cleaned_prediction": "1", "gt": "goma"}, {"input_prompt": "Input: opportunities\nOutput:", "test_query": "opportunities", "prediction": "opportunities\n```\ndef find_common_prefix(list_of", "cleaned_prediction": "opportunities", "gt": "oportunidades"}, {"input_prompt": "Input: billboard\nOutput:", "test_query": "billboard", "prediction": "\"billboard\"\ninput: a man, a", "cleaned_prediction": "\"billboard\"", "gt": "cartelera"}, {"input_prompt": "Input: lawsuit\nOutput:", "test_query": "lawsuit", "prediction": "lawsuit\ndefinition: a legal action, usually brought", "cleaned_prediction": "lawsuit", "gt": "demanda"}, {"input_prompt": "Input: protected\nOutput:", "test_query": "protected", "prediction": "protected\ninput: protected\noutput: protected", "cleaned_prediction": "protected", "gt": "protegido"}, {"input_prompt": "Input: attract\nOutput:", "test_query": "attract", "prediction": "attract\ninput: attraction\noutput: attraction", "cleaned_prediction": "attract", "gt": "atraer"}, {"input_prompt": "Input: successful\nOutput:", "test_query": "successful", "prediction": "successful\n\ninput: 5\noutput:", "cleaned_prediction": "successful", "gt": "exitoso"}, {"input_prompt": "Input: maintenance\nOutput:", "test_query": "maintenance", "prediction": "maintenance\n##### step 1: understanding the input", "cleaned_prediction": "maintenance", "gt": "mantenimiento"}, {"input_prompt": "Input: good\nOutput:", "test_query": "good", "prediction": "good\ninput: good\noutput: good", "cleaned_prediction": "good", "gt": "bueno"}, {"input_prompt": "Input: leagues\nOutput:", "test_query": "leagues", "prediction": "leagues are a common feature of many sports", "cleaned_prediction": "leagues are a common feature of many sports", "gt": "ligas"}, {"input_prompt": "Input: implemented\nOutput:", "test_query": "implemented", "prediction": "implemented\nmemorization: implemented\ncache:", "cleaned_prediction": "implemented", "gt": "implementado"}, {"input_prompt": "Input: try\nOutput:", "test_query": "try", "prediction": "try\n\ninput: python\noutput: python", "cleaned_prediction": "try", "gt": "intentar"}, {"input_prompt": "Input: wedding\nOutput:", "test_query": "wedding", "prediction": "\"the wedding was a beautiful and joyous occasion", "cleaned_prediction": "\"the wedding was a beautiful and joyous occasion", "gt": "boda"}, {"input_prompt": "Input: module\nOutput:", "test_query": "module", "prediction": "module\nauthor: alexey s. egor", "cleaned_prediction": "module", "gt": "m\u00f3dulo"}, {"input_prompt": "Input: caught\nOutput:", "test_query": "caught", "prediction": "caught\ninput: hanged\noutput: h", "cleaned_prediction": "caught", "gt": "atrapado"}, {"input_prompt": "Input: easily\nOutput:", "test_query": "easily", "prediction": "easily\ndefinition: (adverb) in a", "cleaned_prediction": "easily", "gt": "f\u00e1cilmente"}, {"input_prompt": "Input: secondary\nOutput:", "test_query": "secondary", "prediction": "secondary\nduration: 5\ndescription: a", "cleaned_prediction": "secondary", "gt": "secundario"}, {"input_prompt": "Input: maintain\nOutput:", "test_query": "maintain", "prediction": "maintain\ndefinition: to keep something in a particular", "cleaned_prediction": "maintain", "gt": "mantener"}, {"input_prompt": "Input: towers\nOutput:", "test_query": "towers", "prediction": "towers\nexpected output: towers\n\nhere is a", "cleaned_prediction": "towers", "gt": "torres"}, {"input_prompt": "Input: providing\nOutput:", "test_query": "providing", "prediction": "delivering\nthe two words, \"input\" and", "cleaned_prediction": "delivering", "gt": "proporcionando"}, {"input_prompt": "Input: purchase\nOutput:", "test_query": "purchase", "prediction": "purchase is a verb that means to buy or", "cleaned_prediction": "purchase is a verb that means to buy or", "gt": "compra"}, {"input_prompt": "Input: eastern\nOutput:", "test_query": "eastern", "prediction": "eastern\ninput: western\noutput: western", "cleaned_prediction": "eastern", "gt": "oriental"}, {"input_prompt": "Input: inn\nOutput:", "test_query": "inn", "prediction": "in\nexplanation: the word \"inn\" is", "cleaned_prediction": "in", "gt": "posada"}, {"input_prompt": "Input: constituency\nOutput:", "test_query": "constituency", "prediction": "1\nexplanation: the constituency is represented by", "cleaned_prediction": "1", "gt": "circunscripci\u00f3n"}, {"input_prompt": "Input: relation\nOutput:", "test_query": "relation", "prediction": "relation\ntasks:\n- find the maximum value in", "cleaned_prediction": "relation", "gt": "relaci\u00f3n"}, {"input_prompt": "Input: contested\nOutput:", "test_query": "contested", "prediction": "contested\ndiscussion: the word \"contested\"", "cleaned_prediction": "contested", "gt": "contestado"}, {"input_prompt": "Input: compare\nOutput:", "test_query": "compare", "prediction": "comparison\nhomophones\nhomophones are", "cleaned_prediction": "comparison", "gt": "comparar"}, {"input_prompt": "Input: pressure\nOutput:", "test_query": "pressure", "prediction": "pressure\ntypes of pressure: atmospheric pressure, blood", "cleaned_prediction": "pressure", "gt": "presi\u00f3n"}, {"input_prompt": "Input: machine\nOutput:", "test_query": "machine", "prediction": "machine\nconfidence: 0.95", "cleaned_prediction": "machine", "gt": "m\u00e1quina"}, {"input_prompt": "Input: brings\nOutput:", "test_query": "brings", "prediction": "bring\nalgorithm:\nthe input \"brings\"", "cleaned_prediction": "bring", "gt": "trayendo"}, {"input_prompt": "Input: legitimate\nOutput:", "test_query": "legitimate", "prediction": "legitimate\ndefinition: (of a person) authorized", "cleaned_prediction": "legitimate", "gt": "leg\u00edtimo"}, {"input_prompt": "Input: inches\nOutput:", "test_query": "inches", "prediction": "inches\n1 inch = 2.54 cm", "cleaned_prediction": "inches", "gt": "pulgadas"}, {"input_prompt": "Input: certification\nOutput:", "test_query": "certification", "prediction": "certification\nthe term \"certification\" refers to", "cleaned_prediction": "certification", "gt": "certificaci\u00f3n"}, {"input_prompt": "Input: silent\nOutput:", "test_query": "silent", "prediction": "silent\ndefinition: (adjective) making no", "cleaned_prediction": "silent", "gt": "silencio"}, {"input_prompt": "Input: medicine\nOutput:", "test_query": "medicine", "prediction": "\"the medicine is a type of substance used to", "cleaned_prediction": "\"the medicine is a type of substance used to", "gt": "medicina"}, {"input_prompt": "Input: complete\nOutput:", "test_query": "complete", "prediction": "complete\nexplanation: the input string \"complete\"", "cleaned_prediction": "complete", "gt": "completo"}, {"input_prompt": "Input: hide\nOutput:", "test_query": "hide", "prediction": "hide\n====================================\nhide()\n----------------\n\n### description", "cleaned_prediction": "hide", "gt": "esconder"}, {"input_prompt": "Input: road\nOutput:", "test_query": "road", "prediction": "\"road\"\nexplanation: the word \"road\"", "cleaned_prediction": "\"road\"", "gt": "carretera"}, {"input_prompt": "Input: volumes\nOutput:", "test_query": "volumes", "prediction": "list of strings\ndescription: return a list of", "cleaned_prediction": "list of strings", "gt": "vol\u00famenes"}, {"input_prompt": "Input: hospitals\nOutput:", "test_query": "hospitals", "prediction": "hospitals\ninput: hospitals\noutput: hospitals", "cleaned_prediction": "hospitals", "gt": "hospitales"}, {"input_prompt": "Input: defenders\nOutput:", "test_query": "defenders", "prediction": "defenders\n================\n\n### defenders\n\na defender", "cleaned_prediction": "defenders", "gt": "defensores"}, {"input_prompt": "Input: introduce\nOutput:", "test_query": "introduce", "prediction": "introduction\nsynonyms: intro, introd.,", "cleaned_prediction": "introduction", "gt": "presentar"}, {"input_prompt": "Input: consisted\nOutput:", "test_query": "consisted", "prediction": "consisted\ninput: consist\noutput: consisted", "cleaned_prediction": "consisted", "gt": "consisti\u00f3"}, {"input_prompt": "Input: arabic\nOutput:", "test_query": "arabic", "prediction": "ar\n```\n# -*- coding: utf-", "cleaned_prediction": "ar", "gt": "\u00e1rabe"}, {"input_prompt": "Input: sole\nOutput:", "test_query": "sole", "prediction": "sole\ninput: sole\noutput: sole", "cleaned_prediction": "sole", "gt": "suela"}, {"input_prompt": "Input: fashion\nOutput:", "test_query": "fashion", "prediction": "style\ninput: technology\noutput: innovation", "cleaned_prediction": "style", "gt": "moda"}, {"input_prompt": "Input: ordered\nOutput:", "test_query": "ordered", "prediction": "ordered\ninput: unordered\noutput: unordered", "cleaned_prediction": "ordered", "gt": "ordenado"}, {"input_prompt": "Input: reveals\nOutput:", "test_query": "reveals", "prediction": "reveals\nspeed: 5\ntime:", "cleaned_prediction": "reveals", "gt": "revela"}, {"input_prompt": "Input: azerbaijan\nOutput:", "test_query": "azerbaijan", "prediction": "azerbaijan\n--- or ---\ninput: azerba", "cleaned_prediction": "azerbaijan", "gt": "Azerbaiy\u00e1n"}, {"input_prompt": "Input: hearing\nOutput:", "test_query": "hearing", "prediction": "hearing\naccessibility: the website is accessible for people", "cleaned_prediction": "hearing", "gt": "audici\u00f3n"}, {"input_prompt": "Input: reality\nOutput:", "test_query": "reality", "prediction": "a new reality\nwhat is a reality, anyway", "cleaned_prediction": "a new reality", "gt": "realidad"}, {"input_prompt": "Input: midfielder\nOutput:", "test_query": "midfielder", "prediction": "- position: midfielder\n- characteristics:", "cleaned_prediction": "- position: midfielder", "gt": "centrocampista"}, {"input_prompt": "Input: surrounded\nOutput:", "test_query": "surrounded", "prediction": "surrounded\nexplanation: the string \"surrounded\"", "cleaned_prediction": "surrounded", "gt": "rodeado"}, {"input_prompt": "Input: libraries\nOutput:", "test_query": "libraries", "prediction": "libraries\ntime complexity: o(1)\nspace", "cleaned_prediction": "libraries", "gt": "bibliotecas"}, {"input_prompt": "Input: horn\nOutput:", "test_query": "horn", "prediction": "horn\nfinal answer: the final answer is horn", "cleaned_prediction": "horn", "gt": "cuerno"}, {"input_prompt": "Input: during\nOutput:", "test_query": "during", "prediction": "during\ndifficuly: 100\n\n##", "cleaned_prediction": "during", "gt": "durante"}, {"input_prompt": "Input: mon\nOutput:", "test_query": "mon", "prediction": "mon\n\ninput: moon\noutput: moon", "cleaned_prediction": "mon", "gt": "lunes"}, {"input_prompt": "Input: pope\nOutput:", "test_query": "pope", "prediction": "the pope\ninput: cat\noutput: the", "cleaned_prediction": "the pope", "gt": "papa"}, {"input_prompt": "Input: bodies\nOutput:", "test_query": "bodies", "prediction": "bodies\nfunction description\nthe function takes a list", "cleaned_prediction": "bodies", "gt": "cuerpos"}, {"input_prompt": "Input: anyone\nOutput:", "test_query": "anyone", "prediction": "a unique and creative recipe\nprocess:\n1.", "cleaned_prediction": "a unique and creative recipe", "gt": "cualquiera"}, {"input_prompt": "Input: raid\nOutput:", "test_query": "raid", "prediction": "raid\ninput: raids\noutput: raids", "cleaned_prediction": "raid", "gt": "redada"}, {"input_prompt": "Input: young\nOutput:", "test_query": "young", "prediction": "young\ninput: old\noutput: old", "cleaned_prediction": "young", "gt": "joven"}, {"input_prompt": "Input: purchased\nOutput:", "test_query": "purchased", "prediction": "\"you purchased 5 items.\"\nexplanation: the", "cleaned_prediction": "\"you purchased 5 items.\"", "gt": "comprado"}, {"input_prompt": "Input: given\nOutput:", "test_query": "given", "prediction": "output\nerror: unknown\n\n# problem explanation", "cleaned_prediction": "output", "gt": "dado"}, {"input_prompt": "Input: developer\nOutput:", "test_query": "developer", "prediction": "developer\ndefinition: a person who designs, develops", "cleaned_prediction": "developer", "gt": "desarrollador"}, {"input_prompt": "Input: information\nOutput:", "test_query": "information", "prediction": "information\nerror: 0\ninformation\nthe", "cleaned_prediction": "information", "gt": "informaci\u00f3n"}, {"input_prompt": "Input: factory\nOutput:", "test_query": "factory", "prediction": "factory\nduration: 2:00\ndescription", "cleaned_prediction": "factory", "gt": "f\u00e1brica"}, {"input_prompt": "Input: promised\nOutput:", "test_query": "promised", "prediction": "promised\ninput: promises\noutput: prom", "cleaned_prediction": "promised", "gt": "prometido"}, {"input_prompt": "Input: underlying\nOutput:", "test_query": "underlying", "prediction": "underlying\ncategories: finance\ntags: asset,", "cleaned_prediction": "underlying", "gt": "subyacente"}, {"input_prompt": "Input: practical\nOutput:", "test_query": "practical", "prediction": "practical\nentropy: 0.0\n================================", "cleaned_prediction": "practical", "gt": "pr\u00e1ctico"}, {"input_prompt": "Input: servant\nOutput:", "test_query": "servant", "prediction": "the servant is a british psychological thriller television series", "cleaned_prediction": "the servant is a british psychological thriller television series", "gt": "sirviente"}, {"input_prompt": "Input: christian\nOutput:", "test_query": "christian", "prediction": "christian\n\ninput: christian\noutput: christian", "cleaned_prediction": "christian", "gt": "cristiano"}, {"input_prompt": "Input: contest\nOutput:", "test_query": "contest", "prediction": "contest\ndefinition: a competition, especially one in", "cleaned_prediction": "contest", "gt": "concurso"}, {"input_prompt": "Input: legend\nOutput:", "test_query": "legend", "prediction": "legend\n```markdown\n# legend\n\na legend", "cleaned_prediction": "legend", "gt": "leyenda"}, {"input_prompt": "Input: editing\nOutput:", "test_query": "editing", "prediction": "editing\ndifficulty: medium\nmax mistakes:", "cleaned_prediction": "editing", "gt": "edici\u00f3n"}, {"input_prompt": "Input: hat\nOutput:", "test_query": "hat", "prediction": "hat\ninput: {hat}\noutput: {", "cleaned_prediction": "hat", "gt": "sombrero"}, {"input_prompt": "Input: turkish\nOutput:", "test_query": "turkish", "prediction": "turkish\nturkish is a member of the o", "cleaned_prediction": "turkish", "gt": "turco"}, {"input_prompt": "Input: foreign\nOutput:", "test_query": "foreign", "prediction": "foreign\ndefinition: (adjective) not native", "cleaned_prediction": "foreign", "gt": "extranjero"}, {"input_prompt": "Input: syndrome\nOutput:", "test_query": "syndrome", "prediction": "syndrome\ndefinition: (noun) a set of", "cleaned_prediction": "syndrome", "gt": "s\u00edndrome"}, {"input_prompt": "Input: journey\nOutput:", "test_query": "journey", "prediction": "journey\ninput: journey\noutput: journey", "cleaned_prediction": "journey", "gt": "viaje"}, {"input_prompt": "Input: impressive\nOutput:", "test_query": "impressive", "prediction": "impressive\ndefinition: (adjective) causing", "cleaned_prediction": "impressive", "gt": "impresionante"}, {"input_prompt": "Input: meetings\nOutput:", "test_query": "meetings", "prediction": "meeting notes\nmeeting notes\n================\n\n### meeting", "cleaned_prediction": "meeting notes", "gt": "reuniones"}, {"input_prompt": "Input: sword\nOutput:", "test_query": "sword", "prediction": "sword\n\ninput: 12345\noutput:", "cleaned_prediction": "sword", "gt": "espada"}, {"input_prompt": "Input: abilities\nOutput:", "test_query": "abilities", "prediction": "list of all abilities of a character.\ninput:", "cleaned_prediction": "list of all abilities of a character.", "gt": "habilidades"}, {"input_prompt": "Input: briefly\nOutput:", "test_query": "briefly", "prediction": "briefly\ndefinition: in a brief or concise manner", "cleaned_prediction": "briefly", "gt": "brevemente"}, {"input_prompt": "Input: revised\nOutput:", "test_query": "revised", "prediction": "revised\nrevised is the past tense of revise", "cleaned_prediction": "revised", "gt": "revisado"}, {"input_prompt": "Input: skating\nOutput:", "test_query": "skating", "prediction": "ice skating\nsynonyms: roller skating,", "cleaned_prediction": "ice skating", "gt": "patinaje"}, {"input_prompt": "Input: elections\nOutput:", "test_query": "elections", "prediction": "elections\noutput: elections\noutput: elections", "cleaned_prediction": "elections", "gt": "elecciones"}, {"input_prompt": "Input: wales\nOutput:", "test_query": "wales", "prediction": "wales\ninput: portugal\noutput: portugal", "cleaned_prediction": "wales", "gt": "Gales"}, {"input_prompt": "Input: construct\nOutput:", "test_query": "construct", "prediction": "construction\nspelling: k\u0259n\u02c8", "cleaned_prediction": "construction", "gt": "construir"}, {"input_prompt": "Input: said\nOutput:", "test_query": "said", "prediction": "said\ndefinition: (verb) to express or", "cleaned_prediction": "said", "gt": "dijo"}, {"input_prompt": "Input: horse\nOutput:", "test_query": "horse", "prediction": "\"the horse is a mammal. it has", "cleaned_prediction": "\"the horse is a mammal. it has", "gt": "caballo"}, {"input_prompt": "Input: retained\nOutput:", "test_query": "retained", "prediction": "retained\ncomputation: the input is passed through", "cleaned_prediction": "retained", "gt": "retenido"}, {"input_prompt": "Input: compound\nOutput:", "test_query": "compound", "prediction": "\"a compound is a chemical substance formed when two", "cleaned_prediction": "\"a compound is a chemical substance formed when two", "gt": "compuesto"}, {"input_prompt": "Input: log\nOutput:", "test_query": "log", "prediction": "log\ntail positions: 0\ntail values", "cleaned_prediction": "log", "gt": "registro"}, {"input_prompt": "Input: giving\nOutput:", "test_query": "giving", "prediction": "receiving\ninput: taking\noutput: receiving", "cleaned_prediction": "receiving", "gt": "dando"}, {"input_prompt": "Input: wear\nOutput:", "test_query": "wear", "prediction": "wear\ndefinition: to put on clothing or other", "cleaned_prediction": "wear", "gt": "llevar"}, {"input_prompt": "Input: deer\nOutput:", "test_query": "deer", "prediction": "4\n\nexplanation: the word \"deer\"", "cleaned_prediction": "4", "gt": "ciervo"}, {"input_prompt": "Input: opinion\nOutput:", "test_query": "opinion", "prediction": "opinion\noutput: opinion\noutput: opinion", "cleaned_prediction": "opinion", "gt": "opini\u00f3n"}, {"input_prompt": "Input: cream\nOutput:", "test_query": "cream", "prediction": "\"cream is a dairy product derived from milk.", "cleaned_prediction": "\"cream is a dairy product derived from milk.", "gt": "crema"}, {"input_prompt": "Input: lieutenant\nOutput:", "test_query": "lieutenant", "prediction": "lieutenant\ncorrected word: lieutenant\ninput:", "cleaned_prediction": "lieutenant", "gt": "teniente"}, {"input_prompt": "Input: leaving\nOutput:", "test_query": "leaving", "prediction": "leaving\n================\n\n### leaving\n\nleaving is", "cleaned_prediction": "leaving", "gt": "saliendo"}, {"input_prompt": "Input: saudi\nOutput:", "test_query": "saudi", "prediction": "saudi arabia\ninput: usa\noutput: united", "cleaned_prediction": "saudi arabia", "gt": "saud\u00ed"}, {"input_prompt": "Input: chemical\nOutput:", "test_query": "chemical", "prediction": "chemical\nprofession: biochemist\nchemical", "cleaned_prediction": "chemical", "gt": "qu\u00edmico"}, {"input_prompt": "Input: beliefs\nOutput:", "test_query": "beliefs", "prediction": "beliefs\ntags: knowledge representation\nmodels: bayesian", "cleaned_prediction": "beliefs", "gt": "creencias"}, {"input_prompt": "Input: naples\nOutput:", "test_query": "naples", "prediction": "\"naples, italy - wikipedia\"\n\ninput", "cleaned_prediction": "\"naples, italy - wikipedia\"", "gt": "N\u00e1poles"}, {"input_prompt": "Input: married\nOutput:", "test_query": "married", "prediction": "\"you are married.\"\n\ninput: single\noutput", "cleaned_prediction": "\"you are married.\"", "gt": "casado"}, {"input_prompt": "Input: suggesting\nOutput:", "test_query": "suggesting", "prediction": "suggesting\na person who suggests something is offering a", "cleaned_prediction": "suggesting", "gt": "sugiriendo"}, {"input_prompt": "Input: limit\nOutput:", "test_query": "limit", "prediction": "a list of all prime numbers up to the given", "cleaned_prediction": "a list of all prime numbers up to the given", "gt": "l\u00edmite"}, {"input_prompt": "Input: scenes\nOutput:", "test_query": "scenes", "prediction": "scenes\nmodel type: text generation\nthis model", "cleaned_prediction": "scenes", "gt": "escenas"}, {"input_prompt": "Input: forwards\nOutput:", "test_query": "forwards", "prediction": "forwards\ninput: backwards\noutput: backwards", "cleaned_prediction": "forwards", "gt": "adelante"}, {"input_prompt": "Input: enjoy\nOutput:", "test_query": "enjoy", "prediction": "enjoying is a verb. it is the present", "cleaned_prediction": "enjoying is a verb. it is the present", "gt": "disfrutar"}, {"input_prompt": "Input: educated\nOutput:", "test_query": "educated", "prediction": "educated\ndefinition: having or showing knowledge and information", "cleaned_prediction": "educated", "gt": "educado"}, {"input_prompt": "Input: request\nOutput:", "test_query": "request", "prediction": "response\ndescription: a simple function that takes a", "cleaned_prediction": "response", "gt": "solicitud"}, {"input_prompt": "Input: paralympics\nOutput:", "test_query": "paralympics", "prediction": "the paralympics is an international multi-s", "cleaned_prediction": "the paralympics is an international multi-s", "gt": "paral\u00edmpicos"}, {"input_prompt": "Input: vessel\nOutput:", "test_query": "vessel", "prediction": "vessel\ncapitalize the first letter of the", "cleaned_prediction": "vessel", "gt": "vasija"}, {"input_prompt": "Input: survive\nOutput:", "test_query": "survive", "prediction": "survive\ncorrected output: survive\ncorrect", "cleaned_prediction": "survive", "gt": "sobrevivir"}, {"input_prompt": "Input: clearly\nOutput:", "test_query": "clearly", "prediction": "clearly\ninput: clearly\noutput: clearly", "cleaned_prediction": "clearly", "gt": "claramente"}, {"input_prompt": "Input: monk\nOutput:", "test_query": "monk", "prediction": "\"monk\"\nexplanation: the string \"mon", "cleaned_prediction": "\"monk\"", "gt": "monje"}, {"input_prompt": "Input: steel\nOutput:", "test_query": "steel", "prediction": "stainless steel\nprocess: heat treatment\nexplanation:", "cleaned_prediction": "stainless steel", "gt": "acero"}, {"input_prompt": "Input: stress\nOutput:", "test_query": "stress", "prediction": "stress\n================\n### stress\n\nstress is", "cleaned_prediction": "stress", "gt": "estr\u00e9s"}, {"input_prompt": "Input: dubai\nOutput:", "test_query": "dubai", "prediction": "dubai is a city and emirate in the united", "cleaned_prediction": "dubai is a city and emirate in the united", "gt": "Dub\u00e1i"}, {"input_prompt": "Input: famous\nOutput:", "test_query": "famous", "prediction": "\"the famous\" + input\ninput: movie", "cleaned_prediction": "\"the famous\" + input", "gt": "famoso"}, {"input_prompt": "Input: return\nOutput:", "test_query": "return", "prediction": "1. return\n2. return\n3", "cleaned_prediction": "1. return", "gt": "regresar"}, {"input_prompt": "Input: developing\nOutput:", "test_query": "developing", "prediction": "developing\nsynonyms: developing\nantonyms:", "cleaned_prediction": "developing", "gt": "desarrollando"}, {"input_prompt": "Input: oppose\nOutput:", "test_query": "oppose", "prediction": "oppose\noppose definition:\nto express disagreement or", "cleaned_prediction": "oppose", "gt": "oponerse"}, {"input_prompt": "Input: journalists\nOutput:", "test_query": "journalists", "prediction": "journalists\ntopic: the role of journalists in", "cleaned_prediction": "journalists", "gt": "periodistas"}, {"input_prompt": "Input: runners\nOutput:", "test_query": "runners", "prediction": "runners\nexplanation: the word \"runners\"", "cleaned_prediction": "runners", "gt": "corredores"}, {"input_prompt": "Input: idol\nOutput:", "test_query": "idol", "prediction": "an idol is a human representation of a deity,", "cleaned_prediction": "an idol is a human representation of a deity,", "gt": "\u00eddolo"}, {"input_prompt": "Input: called\nOutput:", "test_query": "called", "prediction": "\"called\"\ninput: \"called\"\noutput:", "cleaned_prediction": "\"called\"", "gt": "llamado"}, {"input_prompt": "Input: characterized\nOutput:", "test_query": "characterized", "prediction": "characterized\nerror: no matches found: characterized", "cleaned_prediction": "characterized", "gt": "caracterizado"}, {"input_prompt": "Input: thai\nOutput:", "test_query": "thai", "prediction": "1. \u0e0b\u0e36\u0e48\u0e07\u0e08\u0e30\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e04\u0e19", "cleaned_prediction": "1. \u0e0b\u0e36\u0e48\u0e07\u0e08\u0e30\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e04\u0e19", "gt": "tailand\u00e9s"}, {"input_prompt": "Input: hosting\nOutput:", "test_query": "hosting", "prediction": "hosting\ndifficulty: easy\nmatch: hosting", "cleaned_prediction": "hosting", "gt": "alojamiento"}, {"input_prompt": "Input: opens\nOutput:", "test_query": "opens", "prediction": "opens\ninput: bookkeeper\noutput: book", "cleaned_prediction": "opens", "gt": "abre"}, {"input_prompt": "Input: victim\nOutput:", "test_query": "victim", "prediction": "the victim\nthe victim is the person who is", "cleaned_prediction": "the victim", "gt": "v\u00edctima"}, {"input_prompt": "Input: controlled\nOutput:", "test_query": "controlled", "prediction": "controlled\nerror: controlled\nerror: controlled", "cleaned_prediction": "controlled", "gt": "controlado"}, {"input_prompt": "Input: fill\nOutput:", "test_query": "fill", "prediction": "fill\n================\n### fill\n\nfills a", "cleaned_prediction": "fill", "gt": "llenar"}, {"input_prompt": "Input: code\nOutput:", "test_query": "code", "prediction": "code\ninput: hello\noutput: hello", "cleaned_prediction": "code", "gt": "c\u00f3digo"}, {"input_prompt": "Input: images\nOutput:", "test_query": "images", "prediction": "predicted class\nalgorithm:\n1. load the input", "cleaned_prediction": "predicted class", "gt": "im\u00e1genes"}, {"input_prompt": "Input: dispute\nOutput:", "test_query": "dispute", "prediction": "dispute\nsynonyms: argument, disagreement, quar", "cleaned_prediction": "dispute", "gt": "disputa"}, {"input_prompt": "Input: taste\nOutput:", "test_query": "taste", "prediction": "taste\nerror: no suggestions available for the input", "cleaned_prediction": "taste", "gt": "sabor"}, {"input_prompt": "Input: improvement\nOutput:", "test_query": "improvement", "prediction": "improvement\nsynonyms: betterment, enhancement,", "cleaned_prediction": "improvement", "gt": "mejora"}, {"input_prompt": "Input: contributing\nOutput:", "test_query": "contributing", "prediction": "contributing\ntopics: contributing\ncontributing to a", "cleaned_prediction": "contributing", "gt": "contribuyendo"}, {"input_prompt": "Input: strongly\nOutput:", "test_query": "strongly", "prediction": "strongly\nexplanation: the word \"strongly\"", "cleaned_prediction": "strongly", "gt": "fuertemente"}, {"input_prompt": "Input: foundations\nOutput:", "test_query": "foundations", "prediction": "foundations\nduration: 2:01\ndirector", "cleaned_prediction": "foundations", "gt": "fundaciones"}, {"input_prompt": "Input: dollars\nOutput:", "test_query": "dollars", "prediction": "cents\n\n# problem\nwrite a function that converts", "cleaned_prediction": "cents", "gt": "d\u00f3lares"}, {"input_prompt": "Input: master\nOutput:", "test_query": "master", "prediction": "master\nduration: 2 minutes\ndescription:", "cleaned_prediction": "master", "gt": "maestro"}, {"input_prompt": "Input: aware\nOutput:", "test_query": "aware", "prediction": "aware\nexplanation: the word \"aware\" spelled", "cleaned_prediction": "aware", "gt": "consciente"}, {"input_prompt": "Input: grants\nOutput:", "test_query": "grants", "prediction": "grants\nprocess: the word \"grants\"", "cleaned_prediction": "grants", "gt": "becas"}, {"input_prompt": "Input: cash\nOutput:", "test_query": "cash", "prediction": "{\"cash\": 1000, \"card\":", "cleaned_prediction": "{\"cash\": 1000, \"card\":", "gt": "efectivo"}, {"input_prompt": "Input: items\nOutput:", "test_query": "items", "prediction": "a list of the items with the first item repeated", "cleaned_prediction": "a list of the items with the first item repeated", "gt": "art\u00edculos"}, {"input_prompt": "Input: captain\nOutput:", "test_query": "captain", "prediction": "the captain is a naval officer who commands a", "cleaned_prediction": "the captain is a naval officer who commands a", "gt": "capit\u00e1n"}, {"input_prompt": "Input: genre\nOutput:", "test_query": "genre", "prediction": "10 most popular genres of music in 202", "cleaned_prediction": "10 most popular genres of music in 202", "gt": "g\u00e9nero"}, {"input_prompt": "Input: pictures\nOutput:", "test_query": "pictures", "prediction": "pictures\ntask: the task is to generate a", "cleaned_prediction": "pictures", "gt": "fotos"}, {"input_prompt": "Input: meter\nOutput:", "test_query": "meter", "prediction": "meter (m)\nconversion factor: 1 meter", "cleaned_prediction": "meter (m)", "gt": "metro"}, {"input_prompt": "Input: catholics\nOutput:", "test_query": "catholics", "prediction": "1\n\nexplanation: the number of ways to", "cleaned_prediction": "1", "gt": "cat\u00f3licos"}, {"input_prompt": "Input: marvel\nOutput:", "test_query": "marvel", "prediction": "the marvel cinematic universe (mcu) is", "cleaned_prediction": "the marvel cinematic universe (mcu) is", "gt": "maravilla"}, {"input_prompt": "Input: tag\nOutput:", "test_query": "tag", "prediction": "tag\n================\n\n### tag\n\na tag is", "cleaned_prediction": "tag", "gt": "etiqueta"}, {"input_prompt": "Input: test\nOutput:", "test_query": "test", "prediction": "1\nexplanation: the string \"test\"", "cleaned_prediction": "1", "gt": "prueba"}, {"input_prompt": "Input: employed\nOutput:", "test_query": "employed", "prediction": "employed\ndefinition: having a job or a career", "cleaned_prediction": "employed", "gt": "empleado"}, {"input_prompt": "Input: discovers\nOutput:", "test_query": "discovers", "prediction": "discover\nsyllable division: dis-cov", "cleaned_prediction": "discover", "gt": "descubre"}, {"input_prompt": "Input: relatives\nOutput:", "test_query": "relatives", "prediction": "relatives\n---\n\n# relatives\n\n## table of contents", "cleaned_prediction": "relatives", "gt": "parientes"}, {"input_prompt": "Input: infantry\nOutput:", "test_query": "infantry", "prediction": "infantry\ndraw: infantry\nexample: infantry is", "cleaned_prediction": "infantry", "gt": "infanter\u00eda"}, {"input_prompt": "Input: releasing\nOutput:", "test_query": "releasing", "prediction": "releasing\ndefinition: (present participle) the", "cleaned_prediction": "releasing", "gt": "liberando"}, {"input_prompt": "Input: book\nOutput:", "test_query": "book", "prediction": "book\noutput: book\ninput: bookshelf", "cleaned_prediction": "book", "gt": "libro"}, {"input_prompt": "Input: heavily\nOutput:", "test_query": "heavily", "prediction": "heavily\ndefinition: (adv.) in a heavy", "cleaned_prediction": "heavily", "gt": "pesadamente"}, {"input_prompt": "Input: sleep\nOutput:", "test_query": "sleep", "prediction": "\"i'm going to the party!\"\n\ninput:", "cleaned_prediction": "\"i'm going to the party!\"", "gt": "dormir"}, {"input_prompt": "Input: theories\nOutput:", "test_query": "theories", "prediction": "theories\ntypes of output: theory\ntypes of", "cleaned_prediction": "theories", "gt": "teor\u00edas"}, {"input_prompt": "Input: additionally\nOutput:", "test_query": "additionally", "prediction": "\"the input string 'additionally' contains", "cleaned_prediction": "\"the input string 'additionally' contains", "gt": "adem\u00e1s"}, {"input_prompt": "Input: destination\nOutput:", "test_query": "destination", "prediction": "destination\nconstraints: none\n\n### solution\n\nwe", "cleaned_prediction": "destination", "gt": "destino"}, {"input_prompt": "Input: players\nOutput:", "test_query": "players", "prediction": "players with highest and lowest scores\n\nrules:\n-", "cleaned_prediction": "players with highest and lowest scores", "gt": "jugadores"}, {"input_prompt": "Input: abuse\nOutput:", "test_query": "abuse", "prediction": "the term 'abuse' is associated with a", "cleaned_prediction": "the term 'abuse' is associated with a", "gt": "abuso"}, {"input_prompt": "Input: waiting\nOutput:", "test_query": "waiting", "prediction": "waiting\ninput: queue\noutput: queue", "cleaned_prediction": "waiting", "gt": "esperando"}, {"input_prompt": "Input: options\nOutput:", "test_query": "options", "prediction": "options\nfixes: #163\nthis function", "cleaned_prediction": "options", "gt": "opciones"}, {"input_prompt": "Input: tip\nOutput:", "test_query": "tip", "prediction": "\"tip\" is a common term for a grat", "cleaned_prediction": "\"tip\" is a common term for a grat", "gt": "consejo"}, {"input_prompt": "Input: smart\nOutput:", "test_query": "smart", "prediction": "smart\ndescription: this word is spelled correctly.", "cleaned_prediction": "smart", "gt": "inteligente"}, {"input_prompt": "Input: managers\nOutput:", "test_query": "managers", "prediction": "['john', 'alice', 'bob', '", "cleaned_prediction": "['john', 'alice', 'bob', '", "gt": "gerentes"}, {"input_prompt": "Input: defense\nOutput:", "test_query": "defense", "prediction": "defense\n================\n\n### defense\n\ndefense is a", "cleaned_prediction": "defense", "gt": "defensa"}, {"input_prompt": "Input: ridge\nOutput:", "test_query": "ridge", "prediction": "ridge\ndefinition: a long, narrow hill or", "cleaned_prediction": "ridge", "gt": "cresta"}, {"input_prompt": "Input: flow\nOutput:", "test_query": "flow", "prediction": "flow\nerrors: flow, flow, flow", "cleaned_prediction": "flow", "gt": "flujo"}, {"input_prompt": "Input: losing\nOutput:", "test_query": "losing", "prediction": "losing\ndefinition: in a state of defeat or", "cleaned_prediction": "losing", "gt": "perdiendo"}, {"input_prompt": "Input: broadcasting\nOutput:", "test_query": "broadcasting", "prediction": "broadcasting\npractice: broadcasting\npractice 2:", "cleaned_prediction": "broadcasting", "gt": "difusi\u00f3n"}, {"input_prompt": "Input: environment\nOutput:", "test_query": "environment", "prediction": "environment\ntasks:\n  - create a new environment", "cleaned_prediction": "environment", "gt": "entorno"}, {"input_prompt": "Input: spectrum\nOutput:", "test_query": "spectrum", "prediction": "spectrum\nfunctions with output spectrum :\n\u2022\u00a0 s", "cleaned_prediction": "spectrum", "gt": "espectro"}, {"input_prompt": "Input: enlisted\nOutput:", "test_query": "enlisted", "prediction": "enlisted\ninput: officers\noutput: officers", "cleaned_prediction": "enlisted", "gt": "alistado"}, {"input_prompt": "Input: fort\nOutput:", "test_query": "fort", "prediction": "fort\nexplanation: the string \"fort\" is", "cleaned_prediction": "fort", "gt": "fuerte"}, {"input_prompt": "Input: respected\nOutput:", "test_query": "respected", "prediction": "respected\nduration: 1 ms\nmemory:", "cleaned_prediction": "respected", "gt": "respetado"}, {"input_prompt": "Input: calculated\nOutput:", "test_query": "calculated", "prediction": "calculated\ntypes: numerical\na calculated value is", "cleaned_prediction": "calculated", "gt": "calculado"}, {"input_prompt": "Input: footballer\nOutput:", "test_query": "footballer", "prediction": "\"the word 'footballer' has 9", "cleaned_prediction": "\"the word 'footballer' has 9", "gt": "futbolista"}, {"input_prompt": "Input: ice\nOutput:", "test_query": "ice", "prediction": "ice cream\ninput: cake\noutput: birthday", "cleaned_prediction": "ice cream", "gt": "hielo"}, {"input_prompt": "Input: conventional\nOutput:", "test_query": "conventional", "prediction": "conventional\nerror: the input is conventional, which", "cleaned_prediction": "conventional", "gt": "convencional"}, {"input_prompt": "Input: operations\nOutput:", "test_query": "operations", "prediction": "operations\nfunctions: sort, unique\npurpose:", "cleaned_prediction": "operations", "gt": "operaciones"}, {"input_prompt": "Input: formats\nOutput:", "test_query": "formats", "prediction": "formats\nlanguages: en, de, fr,", "cleaned_prediction": "formats", "gt": "formatos"}, {"input_prompt": "Input: regiment\nOutput:", "test_query": "regiment", "prediction": "regiment\ninput: regiment\noutput: regiment", "cleaned_prediction": "regiment", "gt": "regimiento"}, {"input_prompt": "Input: missionaries\nOutput:", "test_query": "missionaries", "prediction": "missionaries and cannibals\ninput: cannib", "cleaned_prediction": "missionaries and cannibals", "gt": "misioneros"}, {"input_prompt": "Input: align\nOutput:", "test_query": "align", "prediction": "align\nduration: 3\ndescription: the", "cleaned_prediction": "align", "gt": "alinear"}, {"input_prompt": "Input: controls\nOutput:", "test_query": "controls", "prediction": "controls\npreferred output format: controls\nauthor:", "cleaned_prediction": "controls", "gt": "controles"}, {"input_prompt": "Input: valid\nOutput:", "test_query": "valid", "prediction": "invalid\nreason: the program does not handle the", "cleaned_prediction": "invalid", "gt": "v\u00e1lido"}, {"input_prompt": "Input: running\nOutput:", "test_query": "running", "prediction": "running\n================\n# running\n\n## description", "cleaned_prediction": "running", "gt": "corriendo"}, {"input_prompt": "Input: strikes\nOutput:", "test_query": "strikes", "prediction": "strike\ninput: strokes\noutput: stroke", "cleaned_prediction": "strike", "gt": "huelgas"}, {"input_prompt": "Input: inhabited\nOutput:", "test_query": "inhabited", "prediction": "'inhabited' is a valid adjective.", "cleaned_prediction": "'inhabited' is a valid adjective.", "gt": "habitado"}, {"input_prompt": "Input: pick\nOutput:", "test_query": "pick", "prediction": "\"pick\"\ninput: \"pick\"\noutput:", "cleaned_prediction": "\"pick\"", "gt": "escoger"}, {"input_prompt": "Input: paying\nOutput:", "test_query": "paying", "prediction": "paying\ndefinition: (verb) to give or", "cleaned_prediction": "paying", "gt": "pagando"}, {"input_prompt": "Input: auxiliary\nOutput:", "test_query": "auxiliary", "prediction": "auxiliary\ndefinition: not the main or principal one", "cleaned_prediction": "auxiliary", "gt": "auxiliar"}, {"input_prompt": "Input: photograph\nOutput:", "test_query": "photograph", "prediction": "text\na photograph is a two-dimensional image created", "cleaned_prediction": "text", "gt": "fotograf\u00eda"}, {"input_prompt": "Input: chairman\nOutput:", "test_query": "chairman", "prediction": "chair\noutput: man\noutput: chair", "cleaned_prediction": "chair", "gt": "presidente"}, {"input_prompt": "Input: danger\nOutput:", "test_query": "danger", "prediction": "danger\ndefinition: (noun) a situation in", "cleaned_prediction": "danger", "gt": "peligro"}, {"input_prompt": "Input: pounds\nOutput:", "test_query": "pounds", "prediction": "stones and pounds\n\n# problem\nwrite a function", "cleaned_prediction": "stones and pounds", "gt": "libras"}, {"input_prompt": "Input: transmission\nOutput:", "test_query": "transmission", "prediction": "transmission\ncategories: technology\ntags:,,", "cleaned_prediction": "transmission", "gt": "transmisi\u00f3n"}, {"input_prompt": "Input: too\nOutput:", "test_query": "too", "prediction": "too\nexplanation: the word \"too\" is", "cleaned_prediction": "too", "gt": "tambi\u00e9n"}, {"input_prompt": "Input: month\nOutput:", "test_query": "month", "prediction": "month of the year as a string\nconstraints:", "cleaned_prediction": "month of the year as a string", "gt": "mes"}, {"input_prompt": "Input: transit\nOutput:", "test_query": "transit", "prediction": "transit\ninput: transport\noutput: transport", "cleaned_prediction": "transit", "gt": "tr\u00e1nsito"}, {"input_prompt": "Input: gives\nOutput:", "test_query": "gives", "prediction": "gives\nconstraints:\n0 <= s.length <=", "cleaned_prediction": "gives", "gt": "da"}, {"input_prompt": "Input: set\nOutput:", "test_query": "set", "prediction": "set\n\nproblem: find all the subsets of a", "cleaned_prediction": "set", "gt": "conjunto"}, {"input_prompt": "Input: creates\nOutput:", "test_query": "creates", "prediction": "creates\ndefinition: verb. to make something new", "cleaned_prediction": "creates", "gt": "crea"}, {"input_prompt": "Input: adventures\nOutput:", "test_query": "adventures", "prediction": "adventures\ninput: adventure\noutput: adventure", "cleaned_prediction": "adventures", "gt": "aventuras"}, {"input_prompt": "Input: ruled\nOutput:", "test_query": "ruled", "prediction": "ruled\nexplanation:\nthe word \"ruled\"", "cleaned_prediction": "ruled", "gt": "gobernado"}, {"input_prompt": "Input: crowd\nOutput:", "test_query": "crowd", "prediction": "a crowd of people, standing together, looking at", "cleaned_prediction": "a crowd of people, standing together, looking at", "gt": "multitud"}, {"input_prompt": "Input: supplement\nOutput:", "test_query": "supplement", "prediction": "supplement\ndefinition: (noun) something added to", "cleaned_prediction": "supplement", "gt": "suplemento"}, {"input_prompt": "Input: turning\nOutput:", "test_query": "turning", "prediction": "turning\nsynonyms: revolving, rotating, spinning", "cleaned_prediction": "turning", "gt": "girando"}, {"input_prompt": "Input: diving\nOutput:", "test_query": "diving", "prediction": "'the diving board is the part of the equipment", "cleaned_prediction": "'the diving board is the part of the equipment", "gt": "buceo"}, {"input_prompt": "Input: intersection\nOutput:", "test_query": "intersection", "prediction": "intersection of a list of lists\n==========================", "cleaned_prediction": "intersection of a list of lists", "gt": "intersecci\u00f3n"}, {"input_prompt": "Input: scandal\nOutput:", "test_query": "scandal", "prediction": "the scandal surrounding the high-profile politician has sparked outrage", "cleaned_prediction": "the scandal surrounding the high-profile politician has sparked outrage", "gt": "esc\u00e1ndalo"}, {"input_prompt": "Input: acid\nOutput:", "test_query": "acid", "prediction": "acid\n================\n\n### definition\n\nan acid is", "cleaned_prediction": "acid", "gt": "\u00e1cido"}, {"input_prompt": "Input: columns\nOutput:", "test_query": "columns", "prediction": "columns\ntests: \n- test case 1", "cleaned_prediction": "columns", "gt": "columnas"}, {"input_prompt": "Input: sport\nOutput:", "test_query": "sport", "prediction": "\"sport\" is a noun. it can be", "cleaned_prediction": "\"sport\" is a noun. it can be", "gt": "deporte"}, {"input_prompt": "Input: methodist\nOutput:", "test_query": "methodist", "prediction": "\"methodist\" is a denomination of the protestant", "cleaned_prediction": "\"methodist\" is a denomination of the protestant", "gt": "metodista"}, {"input_prompt": "Input: followed\nOutput:", "test_query": "followed", "prediction": "followed\nexplanation: the string \"followed\"", "cleaned_prediction": "followed", "gt": "seguido"}, {"input_prompt": "Input: lack\nOutput:", "test_query": "lack", "prediction": "lack\ninput: lack\noutput: lack", "cleaned_prediction": "lack", "gt": "falta"}, {"input_prompt": "Input: merchant\nOutput:", "test_query": "merchant", "prediction": "```\nmerchant\n```\nexplanation:", "cleaned_prediction": "```", "gt": "comerciante"}, {"input_prompt": "Input: birds\nOutput:", "test_query": "birds", "prediction": "\"bird\"\ninput: \"hello world\"\noutput", "cleaned_prediction": "\"bird\"", "gt": "p\u00e1jaros"}, {"input_prompt": "Input: revenge\nOutput:", "test_query": "revenge", "prediction": "you're thinking of revenge.\nrevenge is a", "cleaned_prediction": "you're thinking of revenge.", "gt": "venganza"}, {"input_prompt": "Input: awarded\nOutput:", "test_query": "awarded", "prediction": "awarded\nsynonyms: given, bestowed,", "cleaned_prediction": "awarded", "gt": "otorgado"}, {"input_prompt": "Input: begun\nOutput:", "test_query": "begun", "prediction": "begun\ndefinition: (verb) start to do", "cleaned_prediction": "begun", "gt": "comenzado"}, {"input_prompt": "Input: reliability\nOutput:", "test_query": "reliability", "prediction": "reliability\n### reliability\nreliability is a", "cleaned_prediction": "reliability", "gt": "fiabilidad"}, {"input_prompt": "Input: titled\nOutput:", "test_query": "titled", "prediction": "titled\ndefinition: having a title, especially a", "cleaned_prediction": "titled", "gt": "titulado"}, {"input_prompt": "Input: lover\nOutput:", "test_query": "lover", "prediction": "the lover\ninput: love\noutput: the", "cleaned_prediction": "the lover", "gt": "amante"}, {"input_prompt": "Input: cyclone\nOutput:", "test_query": "cyclone", "prediction": "'cyclone' is a type of tropical", "cleaned_prediction": "'cyclone' is a type of tropical", "gt": "cicl\u00f3n"}, {"input_prompt": "Input: deal\nOutput:", "test_query": "deal", "prediction": "deal\ninput: sea\noutput: sea", "cleaned_prediction": "deal", "gt": "trato"}, {"input_prompt": "Input: table\nOutput:", "test_query": "table", "prediction": "table\nthis operation performs a table join. given", "cleaned_prediction": "table", "gt": "mesa"}, {"input_prompt": "Input: bring\nOutput:", "test_query": "bring", "prediction": "the word \"bring\" is a verb that means", "cleaned_prediction": "the word \"bring\" is a verb that means", "gt": "traer"}, {"input_prompt": "Input: falling\nOutput:", "test_query": "falling", "prediction": "falling\nfell\nfell\nfell", "cleaned_prediction": "falling", "gt": "cayendo"}, {"input_prompt": "Input: overview\nOutput:", "test_query": "overview", "prediction": "overview\na brief overview of the 2010", "cleaned_prediction": "overview", "gt": "resumen"}, {"input_prompt": "Input: workers\nOutput:", "test_query": "workers", "prediction": "1\nexplanation: the minimum number of employees", "cleaned_prediction": "1", "gt": "trabajadores"}, {"input_prompt": "Input: roller\nOutput:", "test_query": "roller", "prediction": "'roller'\n---\ninput: rollercoaster", "cleaned_prediction": "'roller'", "gt": "rodillo"}, {"input_prompt": "Input: nominator\nOutput:", "test_query": "nominator", "prediction": "numerator of the fraction\ninput: denominator\noutput", "cleaned_prediction": "numerator of the fraction", "gt": "nominador"}, {"input_prompt": "Input: serious\nOutput:", "test_query": "serious", "prediction": "serious\ndefinition: (adjective) causing", "cleaned_prediction": "serious", "gt": "serio"}, {"input_prompt": "Input: success\nOutput:", "test_query": "success", "prediction": "```\n[\n  [\"s\", \"s", "cleaned_prediction": "```", "gt": "\u00e9xito"}, {"input_prompt": "Input: week\nOutput:", "test_query": "week", "prediction": "\"i have to go to work on monday and", "cleaned_prediction": "\"i have to go to work on monday and", "gt": "semana"}, {"input_prompt": "Input: ussr\nOutput:", "test_query": "ussr", "prediction": "the soviet union, officially known as the union", "cleaned_prediction": "the soviet union, officially known as the union", "gt": "URSS (Uni\u00f3n de Rep\u00fablicas Socialistas Sovi\u00e9ticas"}, {"input_prompt": "Input: feat\nOutput:", "test_query": "feat", "prediction": "feature\ninput: feaut\noutput: feature", "cleaned_prediction": "feature", "gt": "haza\u00f1a"}, {"input_prompt": "Input: cross\nOutput:", "test_query": "cross", "prediction": "\"cross\"\n---\n\nfunction solve(input) {", "cleaned_prediction": "\"cross\"", "gt": "cruz"}, {"input_prompt": "Input: blocked\nOutput:", "test_query": "blocked", "prediction": "blocked\ninput: unblocked\noutput: un", "cleaned_prediction": "blocked", "gt": "bloqueado"}, {"input_prompt": "Input: complaint\nOutput:", "test_query": "complaint", "prediction": "the complaint is a written statement of a problem or", "cleaned_prediction": "the complaint is a written statement of a problem or", "gt": "queja"}, {"input_prompt": "Input: pan\nOutput:", "test_query": "pan", "prediction": "pan\ninput: banana\noutput: nanan", "cleaned_prediction": "pan", "gt": "sart\u00e9n"}, {"input_prompt": "Input: photo\nOutput:", "test_query": "photo", "prediction": "photo\ndefinition: a photograph, especially one taken", "cleaned_prediction": "photo", "gt": "foto"}, {"input_prompt": "Input: like\nOutput:", "test_query": "like", "prediction": "like\ninput: love\noutput: love", "cleaned_prediction": "like", "gt": "gusta"}, {"input_prompt": "Input: harbour\nOutput:", "test_query": "harbour", "prediction": "harbour\n\ninput: live\noutput: evil", "cleaned_prediction": "harbour", "gt": "puerto"}, {"input_prompt": "Input: super\nOutput:", "test_query": "super", "prediction": "\"super\"\ninput: \"apple pie\"\noutput", "cleaned_prediction": "\"super\"", "gt": "s\u00faper"}, {"input_prompt": "Input: organisation\nOutput:", "test_query": "organisation", "prediction": "organization\nlanguage model: en\nexplanation: the", "cleaned_prediction": "organization", "gt": "organizaci\u00f3n"}, {"input_prompt": "Input: sentenced\nOutput:", "test_query": "sentenced", "prediction": "sentence\ndefinition: (noun) a grammatical", "cleaned_prediction": "sentence", "gt": "sentenciado"}, {"input_prompt": "Input: prisoners\nOutput:", "test_query": "prisoners", "prediction": "[\u201c1\u201d, \u201c1\u201d, \u201c2\u201d,", "cleaned_prediction": "[\u201c1\u201d, \u201c1\u201d, \u201c2\u201d,", "gt": "prisioneros"}, {"input_prompt": "Input: sending\nOutput:", "test_query": "sending", "prediction": "receiving\ninput: receiving\noutput: sending", "cleaned_prediction": "receiving", "gt": "enviando"}, {"input_prompt": "Input: riding\nOutput:", "test_query": "riding", "prediction": "riding\nsynonyms: horseback, on horse", "cleaned_prediction": "riding", "gt": "montar"}, {"input_prompt": "Input: changing\nOutput:", "test_query": "changing", "prediction": "changing\n================\n## step 1: understand", "cleaned_prediction": "changing", "gt": "cambiando"}, {"input_prompt": "Input: protect\nOutput:", "test_query": "protect", "prediction": "protect\ninput: protect\noutput: protect", "cleaned_prediction": "protect", "gt": "proteger"}, {"input_prompt": "Input: located\nOutput:", "test_query": "located", "prediction": "located\nduration: 1 second\n1.", "cleaned_prediction": "located", "gt": "ubicado"}, {"input_prompt": "Input: burn\nOutput:", "test_query": "burn", "prediction": "burn\n--- \ninput: burn\noutput:", "cleaned_prediction": "burn", "gt": "quemar"}, {"input_prompt": "Input: batting\nOutput:", "test_query": "batting", "prediction": "'batter'\ninput: batting\noutput:", "cleaned_prediction": "'batter'", "gt": "bateo"}, {"input_prompt": "Input: products\nOutput:", "test_query": "products", "prediction": "product\ninput: products\noutput: product", "cleaned_prediction": "product", "gt": "productos"}, {"input_prompt": "Input: reserves\nOutput:", "test_query": "reserves", "prediction": "reserves\ntasks:\n1.  create a new", "cleaned_prediction": "reserves", "gt": "reservas"}, {"input_prompt": "Input: difficulty\nOutput:", "test_query": "difficulty", "prediction": "a list of strings, each string is a problem", "cleaned_prediction": "a list of strings, each string is a problem", "gt": "dificultad"}, {"input_prompt": "Input: vision\nOutput:", "test_query": "vision", "prediction": "vision\n======================================================\n\na python package for converting", "cleaned_prediction": "vision", "gt": "visi\u00f3n"}, {"input_prompt": "Input: champion\nOutput:", "test_query": "champion", "prediction": "champion is a legendary creature from the folklore", "cleaned_prediction": "champion is a legendary creature from the folklore", "gt": "campe\u00f3n"}, {"input_prompt": "Input: cemetery\nOutput:", "test_query": "cemetery", "prediction": "cemetery\ndefinition: (noun) an area of", "cleaned_prediction": "cemetery", "gt": "cementerio"}, {"input_prompt": "Input: defended\nOutput:", "test_query": "defended", "prediction": "defended\nthe word \"defended\" is spelled", "cleaned_prediction": "defended", "gt": "defendido"}, {"input_prompt": "Input: distinguished\nOutput:", "test_query": "distinguished", "prediction": "distinguished\ntime complexity: o(1)\nspace", "cleaned_prediction": "distinguished", "gt": "distinguido"}, {"input_prompt": "Input: discussing\nOutput:", "test_query": "discussing", "prediction": "discussing\nthe term \"discussing\" can", "cleaned_prediction": "discussing", "gt": "discutiendo"}, {"input_prompt": "Input: peaked\nOutput:", "test_query": "peaked", "prediction": "peaked\ndiscussion: this word is a palindrome,", "cleaned_prediction": "peaked", "gt": "alcanzado"}, {"input_prompt": "Input: prague\nOutput:", "test_query": "prague", "prediction": "the capital of the czech republic is prague.\nexplanation", "cleaned_prediction": "the capital of the czech republic is prague.", "gt": "Praga"}, {"input_prompt": "Input: engineers\nOutput:", "test_query": "engineers", "prediction": "engineers\ninput: developers\noutput: developers", "cleaned_prediction": "engineers", "gt": "ingenieros"}, {"input_prompt": "Input: reasons\nOutput:", "test_query": "reasons", "prediction": "reasons\nthe reasons for the popularity of the genre", "cleaned_prediction": "reasons", "gt": "razones"}, {"input_prompt": "Input: temporary\nOutput:", "test_query": "temporary", "prediction": "temporary\ntime complexity: o(n)\nspace complexity", "cleaned_prediction": "temporary", "gt": "temporal"}, {"input_prompt": "Input: must\nOutput:", "test_query": "must", "prediction": "must\ndefinition: a modal verb used to express", "cleaned_prediction": "must", "gt": "debe"}, {"input_prompt": "Input: especially\nOutput:", "test_query": "especially", "prediction": "especially\nthe word \u201cespecially\u201d is a ad", "cleaned_prediction": "especially", "gt": "especialmente"}, {"input_prompt": "Input: unofficial\nOutput:", "test_query": "unofficial", "prediction": "official\ncategory: language\ntopic: translation", "cleaned_prediction": "official", "gt": "no oficial"}, {"input_prompt": "Input: killing\nOutput:", "test_query": "killing", "prediction": "\"killing\" is the act of causing the", "cleaned_prediction": "\"killing\" is the act of causing the", "gt": "asesinato"}, {"input_prompt": "Input: august\nOutput:", "test_query": "august", "prediction": "the month of august is the 8th", "cleaned_prediction": "the month of august is the 8th", "gt": "agosto"}, {"input_prompt": "Input: centres\nOutput:", "test_query": "centres", "prediction": "clusters\noutput: centres\ninput: clusters", "cleaned_prediction": "clusters", "gt": "centros"}, {"input_prompt": "Input: renamed\nOutput:", "test_query": "renamed", "prediction": "renamed\nrenamed\ninput: renamed\noutput", "cleaned_prediction": "renamed", "gt": "renombrado"}, {"input_prompt": "Input: through\nOutput:", "test_query": "through", "prediction": "through\nexamined in: 0.012", "cleaned_prediction": "through", "gt": "a trav\u00e9s de"}, {"input_prompt": "Input: meeting\nOutput:", "test_query": "meeting", "prediction": "meeting\ninput: eat\noutput: eat", "cleaned_prediction": "meeting", "gt": "reuni\u00f3n"}, {"input_prompt": "Input: ninth\nOutput:", "test_query": "ninth", "prediction": "9\n\ninput: 9\noutput:", "cleaned_prediction": "9", "gt": "noveno"}, {"input_prompt": "Input: him\nOutput:", "test_query": "him", "prediction": "him\ninput: her\noutput: her", "cleaned_prediction": "him", "gt": "\u00e9l"}, {"input_prompt": "Input: mission\nOutput:", "test_query": "mission", "prediction": "mission\ninput: missions\noutput: missions", "cleaned_prediction": "mission", "gt": "misi\u00f3n"}, {"input_prompt": "Input: developed\nOutput:", "test_query": "developed", "prediction": "developed\nerror: the input \"developed\"", "cleaned_prediction": "developed", "gt": "desarrollado"}, {"input_prompt": "Input: injury\nOutput:", "test_query": "injury", "prediction": "injury\nsynonyms: hurt, wound, damage", "cleaned_prediction": "injury", "gt": "lesi\u00f3n"}, {"input_prompt": "Input: race\nOutput:", "test_query": "race", "prediction": "race\ninput: racing\noutput: racing", "cleaned_prediction": "race", "gt": "carrera"}, {"input_prompt": "Input: flows\nOutput:", "test_query": "flows", "prediction": "a list of pairs of nodes\nmethod of com", "cleaned_prediction": "a list of pairs of nodes", "gt": "flujos"}, {"input_prompt": "Input: bowl\nOutput:", "test_query": "bowl", "prediction": "{ \"name\": \"bowl\", \"type", "cleaned_prediction": "{ \"name\": \"bowl\", \"type", "gt": "cuenco"}, {"input_prompt": "Input: screenplay\nOutput:", "test_query": "screenplay", "prediction": "screenplay\nthis is a screenplay format conversion tool.", "cleaned_prediction": "screenplay", "gt": "guion"}, {"input_prompt": "Input: field\nOutput:", "test_query": "field", "prediction": "field\nconstraint: the field is not empty", "cleaned_prediction": "field", "gt": "campo"}, {"input_prompt": "Input: dome\nOutput:", "test_query": "dome", "prediction": "dome\nexplanation: the word \"dome\"", "cleaned_prediction": "dome", "gt": "c\u00fapula"}, {"input_prompt": "Input: tax\nOutput:", "test_query": "tax", "prediction": "\"tax\"\ninput: \"tax\"\noutput:", "cleaned_prediction": "\"tax\"", "gt": "impuesto"}, {"input_prompt": "Input: rocket\nOutput:", "test_query": "rocket", "prediction": "'spacex, blue origin, and virgin galactic", "cleaned_prediction": "'spacex, blue origin, and virgin galactic", "gt": "cohete"}, {"input_prompt": "Input: sustainable\nOutput:", "test_query": "sustainable", "prediction": "sustainable\ndefinition: able to be sustained or maintained", "cleaned_prediction": "sustainable", "gt": "sostenible"}, {"input_prompt": "Input: fled\nOutput:", "test_query": "fled", "prediction": "fled\ninput: fled\noutput: f", "cleaned_prediction": "fled", "gt": "huy\u00f3"}, {"input_prompt": "Input: parade\nOutput:", "test_query": "parade", "prediction": "a parade is a public procession of people, often", "cleaned_prediction": "a parade is a public procession of people, often", "gt": "desfile"}, {"input_prompt": "Input: duke\nOutput:", "test_query": "duke", "prediction": "the duke of edinburgh award is a youth award that", "cleaned_prediction": "the duke of edinburgh award is a youth award that", "gt": "duque"}, {"input_prompt": "Input: blow\nOutput:", "test_query": "blow", "prediction": "blow\n\ninput: blow\noutput: blow", "cleaned_prediction": "blow", "gt": "soplar"}, {"input_prompt": "Input: episode\nOutput:", "test_query": "episode", "prediction": "the episode of the show \"the office\" where", "cleaned_prediction": "the episode of the show \"the office\" where", "gt": "episodio"}, {"input_prompt": "Input: policy\nOutput:", "test_query": "policy", "prediction": "policy\ntypes:\n- policy: a dictionary containing", "cleaned_prediction": "policy", "gt": "pol\u00edtica"}, {"input_prompt": "Input: severely\nOutput:", "test_query": "severely", "prediction": "severely\ninput: severely\noutput: severely", "cleaned_prediction": "severely", "gt": "severamente"}, {"input_prompt": "Input: listings\nOutput:", "test_query": "listings", "prediction": "listings\ntasks:\n- define a function that takes", "cleaned_prediction": "listings", "gt": "listados"}, {"input_prompt": "Input: oil\nOutput:", "test_query": "oil", "prediction": "soap\nto make soap, we need to mix", "cleaned_prediction": "soap", "gt": "aceite"}, {"input_prompt": "Input: visiting\nOutput:", "test_query": "visiting", "prediction": "visiting\ndefinition: the act of paying a visit", "cleaned_prediction": "visiting", "gt": "visitando"}, {"input_prompt": "Input: odd\nOutput:", "test_query": "odd", "prediction": "odd\n\ninput: even\noutput: even", "cleaned_prediction": "odd", "gt": "extra\u00f1o"}, {"input_prompt": "Input: civilians\nOutput:", "test_query": "civilians", "prediction": "civilians\nthe term \"civilians\" refers", "cleaned_prediction": "civilians", "gt": "civiles"}, {"input_prompt": "Input: season\nOutput:", "test_query": "season", "prediction": "a list of all the months in the season", "cleaned_prediction": "a list of all the months in the season", "gt": "estaci\u00f3n"}, {"input_prompt": "Input: stability\nOutput:", "test_query": "stability", "prediction": "stability\ntopics: stability\ndefinition: the quality", "cleaned_prediction": "stability", "gt": "estabilidad"}, {"input_prompt": "Input: speaking\nOutput:", "test_query": "speaking", "prediction": "1. what is the best way to improve", "cleaned_prediction": "1. what is the best way to improve", "gt": "hablando"}, {"input_prompt": "Input: majority\nOutput:", "test_query": "majority", "prediction": "majority\nexplanation: the word \"majority\"", "cleaned_prediction": "majority", "gt": "mayor\u00eda"}, {"input_prompt": "Input: perhaps\nOutput:", "test_query": "perhaps", "prediction": "perhaps\ndefinition: (adverb) used to", "cleaned_prediction": "perhaps", "gt": "quiz\u00e1s"}, {"input_prompt": "Input: southwestern\nOutput:", "test_query": "southwestern", "prediction": "the southwestern united states is a geographic and cultural", "cleaned_prediction": "the southwestern united states is a geographic and cultural", "gt": "suroeste"}, {"input_prompt": "Input: amazing\nOutput:", "test_query": "amazing", "prediction": "\"amazing\" is a superlative adjective", "cleaned_prediction": "\"amazing\" is a superlative adjective", "gt": "incre\u00edble"}, {"input_prompt": "Input: student\nOutput:", "test_query": "student", "prediction": "student\n\ninput: students\noutput: students", "cleaned_prediction": "student", "gt": "estudiante"}, {"input_prompt": "Input: finals\nOutput:", "test_query": "finals", "prediction": "5\nexplanation: the maximum value of the", "cleaned_prediction": "5", "gt": "finales"}, {"input_prompt": "Input: observer\nOutput:", "test_query": "observer", "prediction": "observer\ntypes:\n  - observer\ndescription:", "cleaned_prediction": "observer", "gt": "observador"}, {"input_prompt": "Input: firing\nOutput:", "test_query": "firing", "prediction": "firing\n======\n\n**firing a gun**", "cleaned_prediction": "firing", "gt": "despido"}, {"input_prompt": "Input: bill\nOutput:", "test_query": "bill", "prediction": "3.50\ninput: bill\noutput", "cleaned_prediction": "3.50", "gt": "factura"}, {"input_prompt": "Input: whole\nOutput:", "test_query": "whole", "prediction": "whole\nx = 5\noutput:", "cleaned_prediction": "whole", "gt": "entero"}, {"input_prompt": "Input: starring\nOutput:", "test_query": "starring", "prediction": "starring\noutput: starring\noutput: starring", "cleaned_prediction": "starring", "gt": "protagonizado por"}, {"input_prompt": "Input: sweden\nOutput:", "test_query": "sweden", "prediction": "sweden is a nordic country in northern europe. it", "cleaned_prediction": "sweden is a nordic country in northern europe. it", "gt": "suecia"}, {"input_prompt": "Input: regularly\nOutput:", "test_query": "regularly", "prediction": "regularly\ndefinition: (adverb) in a", "cleaned_prediction": "regularly", "gt": "regularmente"}, {"input_prompt": "Input: copies\nOutput:", "test_query": "copies", "prediction": "copies\n---\n\n\n# problem\ninput: copies", "cleaned_prediction": "copies", "gt": "copias"}, {"input_prompt": "Input: happens\nOutput:", "test_query": "happens", "prediction": "happens\ndiffence: \n\nthe input and output", "cleaned_prediction": "happens", "gt": "sucede"}, {"input_prompt": "Input: presidency\nOutput:", "test_query": "presidency", "prediction": "presidency\ninput: presidency\noutput: presidency", "cleaned_prediction": "presidency", "gt": "presidencia"}, {"input_prompt": "Input: kids\nOutput:", "test_query": "kids", "prediction": "\"it looks like you are trying to access a", "cleaned_prediction": "\"it looks like you are trying to access a", "gt": "ni\u00f1os"}, {"input_prompt": "Input: possibility\nOutput:", "test_query": "possibility", "prediction": "possibility\ndefinition: the state or fact of being", "cleaned_prediction": "possibility", "gt": "posibilidad"}, {"input_prompt": "Input: stuff\nOutput:", "test_query": "stuff", "prediction": "stuff\ninput: 1\noutput:", "cleaned_prediction": "stuff", "gt": "cosas"}, {"input_prompt": "Input: membership\nOutput:", "test_query": "membership", "prediction": "membership\ndomains: social organization\nconceptual relationships", "cleaned_prediction": "membership", "gt": "membres\u00eda"}, {"input_prompt": "Input: cyprus\nOutput:", "test_query": "cyprus", "prediction": "cyprus\ncorrected: cyprus\n\ninput: al", "cleaned_prediction": "cyprus", "gt": "Chipre"}, {"input_prompt": "Input: engine\nOutput:", "test_query": "engine", "prediction": "engine\n##### problem\nthe engine in a car", "cleaned_prediction": "engine", "gt": "motor"}, {"input_prompt": "Input: custom\nOutput:", "test_query": "custom", "prediction": "custom\nduration: 1\ndescription: custom", "cleaned_prediction": "custom", "gt": "costumbre"}, {"input_prompt": "Input: cinema\nOutput:", "test_query": "cinema", "prediction": "cinema\n\ninput: madam\noutput: mad", "cleaned_prediction": "cinema", "gt": "cine"}, {"input_prompt": "Input: dynasty\nOutput:", "test_query": "dynasty", "prediction": "dynasty (noun) - a series of rulers from", "cleaned_prediction": "dynasty (noun) - a series of rulers from", "gt": "dinast\u00eda"}, {"input_prompt": "Input: day\nOutput:", "test_query": "day", "prediction": "\"day\"\ncapitalized version of the input string", "cleaned_prediction": "\"day\"", "gt": "d\u00eda"}, {"input_prompt": "Input: occurs\nOutput:", "test_query": "occurs", "prediction": "occurs\nfirst letter: o\nlast letter", "cleaned_prediction": "occurs", "gt": "ocurre"}, {"input_prompt": "Input: boarding\nOutput:", "test_query": "boarding", "prediction": "```\nthe boarding process is complete.\n``", "cleaned_prediction": "```", "gt": "embarque"}, {"input_prompt": "Input: reader\nOutput:", "test_query": "reader", "prediction": "writer\nupdates:\n- add a new `writer", "cleaned_prediction": "writer", "gt": "lector"}, {"input_prompt": "Input: rise\nOutput:", "test_query": "rise", "prediction": "rise\n================\n\n### rise\n\nrise is", "cleaned_prediction": "rise", "gt": "subir"}, {"input_prompt": "Input: prose\nOutput:", "test_query": "prose", "prediction": "poetry\nthe poet takes the prose, and breaks", "cleaned_prediction": "poetry", "gt": "prosa"}, {"input_prompt": "Input: educational\nOutput:", "test_query": "educational", "prediction": "educational\nthe educational system in the united states is", "cleaned_prediction": "educational", "gt": "educativo"}, {"input_prompt": "Input: illustrate\nOutput:", "test_query": "illustrate", "prediction": "illustrate\nvariations: illustrate, illustrate, illustrate", "cleaned_prediction": "illustrate", "gt": "ilustrar"}, {"input_prompt": "Input: spy\nOutput:", "test_query": "spy", "prediction": "7\n\nexplanation: the number of letters in", "cleaned_prediction": "7", "gt": "esp\u00eda"}, {"input_prompt": "Input: championship\nOutput:", "test_query": "championship", "prediction": "a sports championship\ninput: championship belt\noutput", "cleaned_prediction": "a sports championship", "gt": "campeonato"}, {"input_prompt": "Input: nice\nOutput:", "test_query": "nice", "prediction": "nice\nexplanation: the string \"nice\" has", "cleaned_prediction": "nice", "gt": "agradable"}, {"input_prompt": "Input: possible\nOutput:", "test_query": "possible", "prediction": "1\nexplanation: \nthere are two possible", "cleaned_prediction": "1", "gt": "posible"}, {"input_prompt": "Input: according\nOutput:", "test_query": "according", "prediction": "according\nexplanation: the word \"according\" is", "cleaned_prediction": "according", "gt": "seg\u00fan"}, {"input_prompt": "Input: charges\nOutput:", "test_query": "charges", "prediction": "charges\ncategory: physics\ndescription: calculate the", "cleaned_prediction": "charges", "gt": "cargos"}, {"input_prompt": "Input: existed\nOutput:", "test_query": "existed", "prediction": "existed\ninput: inexistence\noutput: in", "cleaned_prediction": "existed", "gt": "existi\u00f3"}, {"input_prompt": "Input: ordinary\nOutput:", "test_query": "ordinary", "prediction": "extraordinary\ninput: simple\noutput: sophisticated", "cleaned_prediction": "extraordinary", "gt": "ordinario"}, {"input_prompt": "Input: pilots\nOutput:", "test_query": "pilots", "prediction": "pilots\ninput: pilot\noutput: pilot", "cleaned_prediction": "pilots", "gt": "pilotos"}, {"input_prompt": "Input: waters\nOutput:", "test_query": "waters", "prediction": "\"the waters\"\ninput: h2o", "cleaned_prediction": "\"the waters\"", "gt": "aguas"}, {"input_prompt": "Input: allegations\nOutput:", "test_query": "allegations", "prediction": "allegations\ndefinition: a statement that someone has done", "cleaned_prediction": "allegations", "gt": "alegaciones"}, {"input_prompt": "Input: dean\nOutput:", "test_query": "dean", "prediction": "\"dean\" is a classic name that has been", "cleaned_prediction": "\"dean\" is a classic name that has been", "gt": "decano"}, {"input_prompt": "Input: monster\nOutput:", "test_query": "monster", "prediction": "monster\n\ninput: dragon\noutput: dragon", "cleaned_prediction": "monster", "gt": "monstruo"}, {"input_prompt": "Input: locally\nOutput:", "test_query": "locally", "prediction": "locally\nexamples:\n- locally  - locally", "cleaned_prediction": "locally", "gt": "localmente"}, {"input_prompt": "Input: armed\nOutput:", "test_query": "armed", "prediction": "armed\ndefinition: equipped with weapons or prepared", "cleaned_prediction": "armed", "gt": "armado"}, {"input_prompt": "Input: differences\nOutput:", "test_query": "differences", "prediction": "differences\nfailed to parse (unknown error): \\", "cleaned_prediction": "differences", "gt": "diferencias"}, {"input_prompt": "Input: debt\nOutput:", "test_query": "debt", "prediction": "debt\ninput: income\noutput: income", "cleaned_prediction": "debt", "gt": "deuda"}, {"input_prompt": "Input: afghanistan\nOutput:", "test_query": "afghanistan", "prediction": "afghanistan is a landlocked country located", "cleaned_prediction": "afghanistan is a landlocked country located", "gt": "Afganist\u00e1n"}, {"input_prompt": "Input: faces\nOutput:", "test_query": "faces", "prediction": "3d coordinates of vertices\ngoal: reconstruct", "cleaned_prediction": "3d coordinates of vertices", "gt": "caras"}, {"input_prompt": "Input: heat\nOutput:", "test_query": "heat", "prediction": "sweat\nsweat is a vital bodily function", "cleaned_prediction": "sweat", "gt": "calor"}, {"input_prompt": "Input: investigate\nOutput:", "test_query": "investigate", "prediction": "investigate\nparaphrase: investigate\nsyn", "cleaned_prediction": "investigate", "gt": "investigar"}, {"input_prompt": "Input: newspapers\nOutput:", "test_query": "newspapers", "prediction": "newspapers\nthe input and output are the same,", "cleaned_prediction": "newspapers", "gt": "peri\u00f3dicos"}, {"input_prompt": "Input: length\nOutput:", "test_query": "length", "prediction": "a list of all possible combinations of numbers from", "cleaned_prediction": "a list of all possible combinations of numbers from", "gt": "longitud"}, {"input_prompt": "Input: peace\nOutput:", "test_query": "peace", "prediction": "peace\ninput: peace\noutput: peace", "cleaned_prediction": "peace", "gt": "paz"}, {"input_prompt": "Input: gone\nOutput:", "test_query": "gone", "prediction": "gone\ndiff: 0\n\ninput:", "cleaned_prediction": "gone", "gt": "ido"}, {"input_prompt": "Input: graduating\nOutput:", "test_query": "graduating", "prediction": "\"congratulations on your graduation! what's next for", "cleaned_prediction": "\"congratulations on your graduation! what's next for", "gt": "graduando"}, {"input_prompt": "Input: who\nOutput:", "test_query": "who", "prediction": "\"who\" is a common english word that can", "cleaned_prediction": "\"who\" is a common english word that can", "gt": "quien"}, {"input_prompt": "Input: journalism\nOutput:", "test_query": "journalism", "prediction": "journalism\nthe role of journalists in a free society", "cleaned_prediction": "journalism", "gt": "periodismo"}, {"input_prompt": "Input: hello\nOutput:", "test_query": "hello", "prediction": "h\ne\nl\nl\no", "cleaned_prediction": "h", "gt": "hola"}, {"input_prompt": "Input: recall\nOutput:", "test_query": "recall", "prediction": "recall\nerror: none\n\ninput: recall", "cleaned_prediction": "recall", "gt": "recordar"}, {"input_prompt": "Input: hoping\nOutput:", "test_query": "hoping", "prediction": "hoping\ndefinition: feeling or showing expectation or desire", "cleaned_prediction": "hoping", "gt": "esperando"}, {"input_prompt": "Input: playoff\nOutput:", "test_query": "playoff", "prediction": "playoff\ninput: playout\noutput: pl", "cleaned_prediction": "playoff", "gt": "eliminatoria"}, {"input_prompt": "Input: charge\nOutput:", "test_query": "charge", "prediction": "electric field\nbe the first to vote for charge", "cleaned_prediction": "electric field", "gt": "cargar"}, {"input_prompt": "Input: parties\nOutput:", "test_query": "parties", "prediction": "a list of party names\n\"\"\"\n\ndef get_party", "cleaned_prediction": "a list of party names", "gt": "fiestas"}, {"input_prompt": "Input: innocent\nOutput:", "test_query": "innocent", "prediction": "\"i know you are, but what am i", "cleaned_prediction": "\"i know you are, but what am i", "gt": "inocente"}, {"input_prompt": "Input: anywhere\nOutput:", "test_query": "anywhere", "prediction": "anywhere\nthe world's most expensive cities", "cleaned_prediction": "anywhere", "gt": "en cualquier lugar"}, {"input_prompt": "Input: kilometers\nOutput:", "test_query": "kilometers", "prediction": "miles\n\n1 kilometer is equal to 0", "cleaned_prediction": "miles", "gt": "kil\u00f3metros"}, {"input_prompt": "Input: napoleon\nOutput:", "test_query": "napoleon", "prediction": "napoleon bonaparte (1769-1821", "cleaned_prediction": "napoleon bonaparte (1769-1821", "gt": "Napole\u00f3n"}, {"input_prompt": "Input: marsh\nOutput:", "test_query": "marsh", "prediction": "marsh\ninput: marsh\noutput: marsh", "cleaned_prediction": "marsh", "gt": "pantano"}, {"input_prompt": "Input: greek\nOutput:", "test_query": "greek", "prediction": "(greek) (greek)\ninput:", "cleaned_prediction": "(greek) (greek)", "gt": "griego"}, {"input_prompt": "Input: max\nOutput:", "test_query": "max", "prediction": "max\ninput: 123\noutput:", "cleaned_prediction": "max", "gt": "m\u00e1ximo"}]}