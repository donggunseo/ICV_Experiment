{"score": {"exact_match": 0.0}, "result": [{"input_prompt": "Input: awareness\nOutput:", "test_query": "awareness", "prediction": "insight\nawareness is the first step in the", "cleaned_prediction": "insight", "gt": "conciencia"}, {"input_prompt": "Input: discovery\nOutput:", "test_query": "discovery", "prediction": "discovery\ncategory: wordplay\nthe word \"", "cleaned_prediction": "discovery", "gt": "descubrimiento"}, {"input_prompt": "Input: disk\nOutput:", "test_query": "disk", "prediction": "disk\n\n## step 1: understand the problem", "cleaned_prediction": "disk", "gt": "disco"}, {"input_prompt": "Input: rice\nOutput:", "test_query": "rice", "prediction": "- 1 cup of uncooked white rice", "cleaned_prediction": "- 1 cup of uncooked white rice", "gt": "arroz"}, {"input_prompt": "Input: strength\nOutput:", "test_query": "strength", "prediction": "strength\nlooking for a way to boost your physical", "cleaned_prediction": "strength", "gt": "fuerza"}, {"input_prompt": "Input: cattle\nOutput:", "test_query": "cattle", "prediction": "* 1 cow\n* 1 bull", "cleaned_prediction": "* 1 cow", "gt": "ganado"}, {"input_prompt": "Input: achieved\nOutput:", "test_query": "achieved", "prediction": "achieved\ndefinition: (verb) to bring about", "cleaned_prediction": "achieved", "gt": "logrado"}, {"input_prompt": "Input: guys\nOutput:", "test_query": "guys", "prediction": "'guy'\ninput: dog\noutput:", "cleaned_prediction": "'guy'", "gt": "chicos"}, {"input_prompt": "Input: require\nOutput:", "test_query": "require", "prediction": "require\ntest: function (require) {", "cleaned_prediction": "require", "gt": "requerir"}, {"input_prompt": "Input: speakers\nOutput:", "test_query": "speakers", "prediction": "sound\nprocess: converting electrical signals into sound waves", "cleaned_prediction": "sound", "gt": "altavoces"}, {"input_prompt": "Input: promoted\nOutput:", "test_query": "promoted", "prediction": "promoted\ndefinition: (verb) to give a", "cleaned_prediction": "promoted", "gt": "promovido"}, {"input_prompt": "Input: retired\nOutput:", "test_query": "retired", "prediction": "retired\ninput: retired\noutput: retired", "cleaned_prediction": "retired", "gt": "jubilado"}, {"input_prompt": "Input: drum\nOutput:", "test_query": "drum", "prediction": "drums\ngrammatical category: noun\npart", "cleaned_prediction": "drums", "gt": "tambor"}, {"input_prompt": "Input: dissolved\nOutput:", "test_query": "dissolved", "prediction": "solid\nprocess: crystallization\ncrystall", "cleaned_prediction": "solid", "gt": "disuelto"}, {"input_prompt": "Input: closure\nOutput:", "test_query": "closure", "prediction": "closure\ntasks: data transformation, data processing", "cleaned_prediction": "closure", "gt": "cierre"}, {"input_prompt": "Input: industry\nOutput:", "test_query": "industry", "prediction": "industry\nindustry is a sector of the economy that", "cleaned_prediction": "industry", "gt": "industria"}, {"input_prompt": "Input: letter\nOutput:", "test_query": "letter", "prediction": "letter with a heart around it\n\nexample:\ninput", "cleaned_prediction": "letter with a heart around it", "gt": "carta"}, {"input_prompt": "Input: bath\nOutput:", "test_query": "bath", "prediction": "(bath)\ninput: bath\noutput:", "cleaned_prediction": "(bath)", "gt": "ba\u00f1o"}, {"input_prompt": "Input: reviewing\nOutput:", "test_query": "reviewing", "prediction": "review\ninput: reviewers\noutput: review", "cleaned_prediction": "review", "gt": "repasando"}, {"input_prompt": "Input: suggestion\nOutput:", "test_query": "suggestion", "prediction": "suggestion\ninput: suggestions\noutput: suggestions", "cleaned_prediction": "suggestion", "gt": "sugerencia"}, {"input_prompt": "Input: letters\nOutput:", "test_query": "letters", "prediction": "list of words that can be formed by using the", "cleaned_prediction": "list of words that can be formed by using the", "gt": "cartas"}, {"input_prompt": "Input: watched\nOutput:", "test_query": "watched", "prediction": "watched\noutput for plural form: watched", "cleaned_prediction": "watched", "gt": "visto"}, {"input_prompt": "Input: orders\nOutput:", "test_query": "orders", "prediction": "orders with sorted prices\nexample: orders = [[", "cleaned_prediction": "orders with sorted prices", "gt": "\u00f3rdenes"}, {"input_prompt": "Input: increases\nOutput:", "test_query": "increases", "prediction": "- 1.0\n- 2", "cleaned_prediction": "- 1.0", "gt": "aumenta"}, {"input_prompt": "Input: newfoundland\nOutput:", "test_query": "newfoundland", "prediction": "\"newfoundland is a province of canada, located", "cleaned_prediction": "\"newfoundland is a province of canada, located", "gt": "Terranova"}, {"input_prompt": "Input: thin\nOutput:", "test_query": "thin", "prediction": "thin\ndescription: this thesaurus contains words", "cleaned_prediction": "thin", "gt": "delgado"}, {"input_prompt": "Input: drinking\nOutput:", "test_query": "drinking", "prediction": "drinking water\ninput: drink\noutput: drink", "cleaned_prediction": "drinking water", "gt": "bebiendo"}, {"input_prompt": "Input: leon\nOutput:", "test_query": "leon", "prediction": "\"the name leon is of latin origin and means", "cleaned_prediction": "\"the name leon is of latin origin and means", "gt": "le\u00f3n"}, {"input_prompt": "Input: rider\nOutput:", "test_query": "rider", "prediction": "rider\ndefinition: a person who rides a horse", "cleaned_prediction": "rider", "gt": "jinete"}, {"input_prompt": "Input: february\nOutput:", "test_query": "february", "prediction": "february\n\ninput: may\noutput:", "cleaned_prediction": "february", "gt": "febrero"}, {"input_prompt": "Input: back\nOutput:", "test_query": "back", "prediction": "back\ndefinition: a body part located at the", "cleaned_prediction": "back", "gt": "espalda"}, {"input_prompt": "Input: albums\nOutput:", "test_query": "albums", "prediction": "1. the beatles - sgt. pepper's", "cleaned_prediction": "1. the beatles - sgt. pepper's", "gt": "\u00e1lbumes"}, {"input_prompt": "Input: publisher\nOutput:", "test_query": "publisher", "prediction": "# publisher\n\na publisher is a business or", "cleaned_prediction": "# publisher", "gt": "editorial"}, {"input_prompt": "Input: how\nOutput:", "test_query": "how", "prediction": "how\nexplanation: the string \"how\" is", "cleaned_prediction": "how", "gt": "c\u00f3mo"}, {"input_prompt": "Input: driver\nOutput:", "test_query": "driver", "prediction": "driver\ninput: driver\noutput: driver", "cleaned_prediction": "driver", "gt": "conductor"}, {"input_prompt": "Input: reflects\nOutput:", "test_query": "reflects", "prediction": "reflects\n=> reflects is a reflexive verb", "cleaned_prediction": "reflects", "gt": "refleja"}, {"input_prompt": "Input: putting\nOutput:", "test_query": "putting", "prediction": "putting\ndiscussion: the word \u201cputting\u201d", "cleaned_prediction": "putting", "gt": "poniendo"}, {"input_prompt": "Input: legs\nOutput:", "test_query": "legs", "prediction": "2\ninput: wheels\noutput:", "cleaned_prediction": "2", "gt": "piernas"}, {"input_prompt": "Input: hills\nOutput:", "test_query": "hills", "prediction": "hills\nexplanation: the input string \"hills", "cleaned_prediction": "hills", "gt": "colinas"}, {"input_prompt": "Input: documents\nOutput:", "test_query": "documents", "prediction": "- a list of the most frequently occurring", "cleaned_prediction": "- a list of the most frequently occurring", "gt": "documentos"}, {"input_prompt": "Input: exposed\nOutput:", "test_query": "exposed", "prediction": "exposed\npassed: 0/1\n\ndef", "cleaned_prediction": "exposed", "gt": "expuesto"}, {"input_prompt": "Input: rescued\nOutput:", "test_query": "rescued", "prediction": "\"rescued\"\ninput: \"love\"", "cleaned_prediction": "\"rescued\"", "gt": "rescatado"}, {"input_prompt": "Input: his\nOutput:", "test_query": "his", "prediction": "his\ninput: her\noutput: her", "cleaned_prediction": "his", "gt": "su"}, {"input_prompt": "Input: unusual\nOutput:", "test_query": "unusual", "prediction": "'unusual' is not a valid input.", "cleaned_prediction": "'unusual' is not a valid input.", "gt": "inusual"}, {"input_prompt": "Input: diameter\nOutput:", "test_query": "diameter", "prediction": "radius\ninput: 10\noutput:", "cleaned_prediction": "radius", "gt": "di\u00e1metro"}, {"input_prompt": "Input: progress\nOutput:", "test_query": "progress", "prediction": "progress\ncategory: mathematics\ndescription: the progress", "cleaned_prediction": "progress", "gt": "progreso"}, {"input_prompt": "Input: beach\nOutput:", "test_query": "beach", "prediction": "beach\ntitle case: beach\n\ninput: cat", "cleaned_prediction": "beach", "gt": "playa"}, {"input_prompt": "Input: security\nOutput:", "test_query": "security", "prediction": "security\n##### step 1: define the concept", "cleaned_prediction": "security", "gt": "seguridad"}, {"input_prompt": "Input: consistently\nOutput:", "test_query": "consistently", "prediction": "consistently\ndefinition: (adverb) in a", "cleaned_prediction": "consistently", "gt": "consistentemente"}, {"input_prompt": "Input: compared\nOutput:", "test_query": "compared", "prediction": "compared\ninput: comparators\noutput: compar", "cleaned_prediction": "compared", "gt": "comparado"}, {"input_prompt": "Input: places\nOutput:", "test_query": "places", "prediction": "places\ninput: places\noutput: places", "cleaned_prediction": "places", "gt": "lugares"}, {"input_prompt": "Input: istanbul\nOutput:", "test_query": "istanbul", "prediction": "istanbul\n\ninput: istanbul", "cleaned_prediction": "istanbul", "gt": "Estambul"}, {"input_prompt": "Input: colonel\nOutput:", "test_query": "colonel", "prediction": "1. colonel\n2. colonel", "cleaned_prediction": "1. colonel", "gt": "coronel"}, {"input_prompt": "Input: strategic\nOutput:", "test_query": "strategic", "prediction": "strategic\ndefinition: (of a plan or decision", "cleaned_prediction": "strategic", "gt": "estrat\u00e9gico"}, {"input_prompt": "Input: academy\nOutput:", "test_query": "academy", "prediction": "\"the academy awards, commonly known as the oscars", "cleaned_prediction": "\"the academy awards, commonly known as the oscars", "gt": "academia"}, {"input_prompt": "Input: challenge\nOutput:", "test_query": "challenge", "prediction": "\"the answer is 42.\"\ninput: \"", "cleaned_prediction": "\"the answer is 42.\"", "gt": "desaf\u00edo"}, {"input_prompt": "Input: edition\nOutput:", "test_query": "edition", "prediction": "edition\ninput: edition\noutput: edition", "cleaned_prediction": "edition", "gt": "edici\u00f3n"}, {"input_prompt": "Input: sail\nOutput:", "test_query": "sail", "prediction": "sailboat\ninput: pines\noutput:", "cleaned_prediction": "sailboat", "gt": "navegar"}, {"input_prompt": "Input: turned\nOutput:", "test_query": "turned", "prediction": "turned\nno correction is needed.\nin this sentence", "cleaned_prediction": "turned", "gt": "girado"}, {"input_prompt": "Input: springs\nOutput:", "test_query": "springs", "prediction": "springs\ntypes: natural history\ntypes: animals", "cleaned_prediction": "springs", "gt": "manantiales"}, {"input_prompt": "Input: boy\nOutput:", "test_query": "boy", "prediction": "5\n\ninput: girl\noutput:", "cleaned_prediction": "5", "gt": "ni\u00f1o"}, {"input_prompt": "Input: lit\nOutput:", "test_query": "lit", "prediction": "lit\ndifficulty: easy\n\nthe problem is asking", "cleaned_prediction": "lit", "gt": "encendido"}, {"input_prompt": "Input: allies\nOutput:", "test_query": "allies", "prediction": "'the allies are: '\ninput: allies =", "cleaned_prediction": "'the allies are: '", "gt": "aliados"}, {"input_prompt": "Input: wednesday\nOutput:", "test_query": "wednesday", "prediction": "3\n\ninput: monday\noutput:", "cleaned_prediction": "3", "gt": "mi\u00e9rcoles"}, {"input_prompt": "Input: appointment\nOutput:", "test_query": "appointment", "prediction": "a list of appointments\ndescription: this is a", "cleaned_prediction": "a list of appointments", "gt": "cita"}, {"input_prompt": "Input: affiliate\nOutput:", "test_query": "affiliate", "prediction": "affiliate marketing\ninput: affiliate\noutput: affiliate", "cleaned_prediction": "affiliate marketing", "gt": "afiliado"}, {"input_prompt": "Input: brigade\nOutput:", "test_query": "brigade", "prediction": "1\nexplanation: the word \"brigade", "cleaned_prediction": "1", "gt": "brigada"}, {"input_prompt": "Input: adds\nOutput:", "test_query": "adds", "prediction": "adds\nexplanation: the string \"adds\" is", "cleaned_prediction": "adds", "gt": "anuncios"}, {"input_prompt": "Input: daily\nOutput:", "test_query": "daily", "prediction": "daily\nexplanation: the word \"daily\" spelled", "cleaned_prediction": "daily", "gt": "diario"}, {"input_prompt": "Input: voivodeship\nOutput:", "test_query": "voivodeship", "prediction": "16\nexplanation: the number of voiv", "cleaned_prediction": "16", "gt": "voivodato"}, {"input_prompt": "Input: port\nOutput:", "test_query": "port", "prediction": "port\nfeedback: port\n\nthe input port is", "cleaned_prediction": "port", "gt": "puerto"}, {"input_prompt": "Input: coastal\nOutput:", "test_query": "coastal", "prediction": "coastal\ndefinition: (of a location) situated", "cleaned_prediction": "coastal", "gt": "costero"}, {"input_prompt": "Input: challenges\nOutput:", "test_query": "challenges", "prediction": "challenges\noutput: challenges\noutput: challenges", "cleaned_prediction": "challenges", "gt": "desaf\u00edos"}, {"input_prompt": "Input: teams\nOutput:", "test_query": "teams", "prediction": "team name and average rating\n```python\ndef", "cleaned_prediction": "team name and average rating", "gt": "equipos"}, {"input_prompt": "Input: resigned\nOutput:", "test_query": "resigned", "prediction": "resigned\ndefinition: (verb) to give up", "cleaned_prediction": "resigned", "gt": "renunciado"}, {"input_prompt": "Input: labor\nOutput:", "test_query": "labor", "prediction": "work\ninput: labor\noutput: work", "cleaned_prediction": "work", "gt": "trabajo"}, {"input_prompt": "Input: dragon\nOutput:", "test_query": "dragon", "prediction": "\"the dragon is a mythical creature that is often", "cleaned_prediction": "\"the dragon is a mythical creature that is often", "gt": "drag\u00f3n"}, {"input_prompt": "Input: cargo\nOutput:", "test_query": "cargo", "prediction": "\"cargo\"\ninput: \"hello\"\noutput:", "cleaned_prediction": "\"cargo\"", "gt": "carga"}, {"input_prompt": "Input: mexico\nOutput:", "test_query": "mexico", "prediction": "mexico is a country located in north america. it", "cleaned_prediction": "mexico is a country located in north america. it", "gt": "M\u00e9xico"}, {"input_prompt": "Input: consists\nOutput:", "test_query": "consists", "prediction": "0.9\nexplanation: the first two", "cleaned_prediction": "0.9", "gt": "consiste"}, {"input_prompt": "Input: hot\nOutput:", "test_query": "hot", "prediction": "hot\nexplanation: the word \"hot\" spelled", "cleaned_prediction": "hot", "gt": "caliente"}, {"input_prompt": "Input: fever\nOutput:", "test_query": "fever", "prediction": "\"fever is a symptom of an underlying condition", "cleaned_prediction": "\"fever is a symptom of an underlying condition", "gt": "fiebre"}, {"input_prompt": "Input: endings\nOutput:", "test_query": "endings", "prediction": "endings\nthe word \"endings\" spelled backwards", "cleaned_prediction": "endings", "gt": "finales"}, {"input_prompt": "Input: seconds\nOutput:", "test_query": "seconds", "prediction": "formatted string\n\"\"\"\n\ndef format_time(seconds):", "cleaned_prediction": "formatted string", "gt": "segundos"}, {"input_prompt": "Input: since\nOutput:", "test_query": "since", "prediction": "since\nexplanation: the word \"since\" is", "cleaned_prediction": "since", "gt": "desde"}, {"input_prompt": "Input: pointed\nOutput:", "test_query": "pointed", "prediction": "pointed\ndefinition: (adjective) having a", "cleaned_prediction": "pointed", "gt": "apuntado"}, {"input_prompt": "Input: athletic\nOutput:", "test_query": "athletic", "prediction": "athletic\nthe word athletic has 7 letters.", "cleaned_prediction": "athletic", "gt": "atl\u00e9tico"}, {"input_prompt": "Input: bright\nOutput:", "test_query": "bright", "prediction": "bright\ndefinition: having a lot of light;", "cleaned_prediction": "bright", "gt": "brillante"}, {"input_prompt": "Input: chemistry\nOutput:", "test_query": "chemistry", "prediction": "\"chemistry is the scientific study of the composition", "cleaned_prediction": "\"chemistry is the scientific study of the composition", "gt": "qu\u00edmica"}, {"input_prompt": "Input: judgment\nOutput:", "test_query": "judgment", "prediction": "judgment\n### definition\na judgment is a statement", "cleaned_prediction": "judgment", "gt": "juicio"}, {"input_prompt": "Input: wishes\nOutput:", "test_query": "wishes", "prediction": "1. to be able to fly\n2", "cleaned_prediction": "1. to be able to fly", "gt": "deseos"}, {"input_prompt": "Input: changes\nOutput:", "test_query": "changes", "prediction": "changes\nduration: 5 minutes\ndescription:", "cleaned_prediction": "changes", "gt": "cambios"}, {"input_prompt": "Input: department\nOutput:", "test_query": "department", "prediction": "the department's name\ninput: student\noutput", "cleaned_prediction": "the department's name", "gt": "departamento"}, {"input_prompt": "Input: thunder\nOutput:", "test_query": "thunder", "prediction": "'thun-der'\ninput: thunderstorm", "cleaned_prediction": "'thun-der'", "gt": "trueno"}, {"input_prompt": "Input: indicating\nOutput:", "test_query": "indicating", "prediction": "indicating\nindicating\nindicating", "cleaned_prediction": "indicating", "gt": "indicando"}, {"input_prompt": "Input: volunteers\nOutput:", "test_query": "volunteers", "prediction": "a list of volunteers with their corresponding skills\ninput", "cleaned_prediction": "a list of volunteers with their corresponding skills", "gt": "voluntarios"}, {"input_prompt": "Input: look\nOutput:", "test_query": "look", "prediction": "look\ninput: look\noutput: look", "cleaned_prediction": "look", "gt": "mirar"}, {"input_prompt": "Input: composition\nOutput:", "test_query": "composition", "prediction": "composition\nspecies: mammal\nfamily: fel", "cleaned_prediction": "composition", "gt": "composici\u00f3n"}, {"input_prompt": "Input: teach\nOutput:", "test_query": "teach", "prediction": "teach\ninput: teach\noutput: teach", "cleaned_prediction": "teach", "gt": "ense\u00f1ar"}, {"input_prompt": "Input: escaped\nOutput:", "test_query": "escaped", "prediction": "escaped\nduration: 1 sec\nstatus:", "cleaned_prediction": "escaped", "gt": "escapado"}, {"input_prompt": "Input: reply\nOutput:", "test_query": "reply", "prediction": "reply\ndefinition: a response, often written,", "cleaned_prediction": "reply", "gt": "respuesta"}, {"input_prompt": "Input: cold\nOutput:", "test_query": "cold", "prediction": "'brrr, i hope you have a", "cleaned_prediction": "'brrr, i hope you have a", "gt": "fr\u00edo"}, {"input_prompt": "Input: danish\nOutput:", "test_query": "danish", "prediction": "danish\ninput: chinese\noutput: chinese", "cleaned_prediction": "danish", "gt": "dan\u00e9s"}, {"input_prompt": "Input: stretch\nOutput:", "test_query": "stretch", "prediction": "stretch\ndescription: this word has a length of", "cleaned_prediction": "stretch", "gt": "estiramiento"}, {"input_prompt": "Input: consumption\nOutput:", "test_query": "consumption", "prediction": "waste\nhow to calculate waste\nthe amount of", "cleaned_prediction": "waste", "gt": "consumo"}, {"input_prompt": "Input: rhine\nOutput:", "test_query": "rhine", "prediction": "rhine\ncapitalized: rhine\np", "cleaned_prediction": "rhine", "gt": "Rin"}, {"input_prompt": "Input: delay\nOutput:", "test_query": "delay", "prediction": "delay\nerror: invalid input type. expected a", "cleaned_prediction": "delay", "gt": "retraso"}, {"input_prompt": "Input: pakistan\nOutput:", "test_query": "pakistan", "prediction": "pakistan\n\ninput: egypt\noutput: egypt", "cleaned_prediction": "pakistan", "gt": "Pakist\u00e1n"}, {"input_prompt": "Input: barrier\nOutput:", "test_query": "barrier", "prediction": "barrier\nduration: 0:00:01", "cleaned_prediction": "barrier", "gt": "barrera"}, {"input_prompt": "Input: precisely\nOutput:", "test_query": "precisely", "prediction": "precisely\ndefinition: (adverb) in an", "cleaned_prediction": "precisely", "gt": "precisamente"}, {"input_prompt": "Input: passing\nOutput:", "test_query": "passing", "prediction": "passing\nduration: 0 ms\nexplanation:", "cleaned_prediction": "passing", "gt": "pasando"}, {"input_prompt": "Input: organization\nOutput:", "test_query": "organization", "prediction": "organization\n```python\ndef get_organization_name(", "cleaned_prediction": "organization", "gt": "organizaci\u00f3n"}, {"input_prompt": "Input: census\nOutput:", "test_query": "census", "prediction": "census\nfinal answer: the final answer is census", "cleaned_prediction": "census", "gt": "censo"}, {"input_prompt": "Input: constitutional\nOutput:", "test_query": "constitutional", "prediction": "constitutional\ninput: nonconstitutional\noutput: non", "cleaned_prediction": "constitutional", "gt": "constitucional"}, {"input_prompt": "Input: diverse\nOutput:", "test_query": "diverse", "prediction": "diverse\ninput: unifying\noutput: un", "cleaned_prediction": "diverse", "gt": "diverso"}, {"input_prompt": "Input: optical\nOutput:", "test_query": "optical", "prediction": "optical\noptical communication is a method of transmitting", "cleaned_prediction": "optical", "gt": "\u00f3ptico"}, {"input_prompt": "Input: pack\nOutput:", "test_query": "pack", "prediction": "pack\nexplanation: the string \"pack\" is", "cleaned_prediction": "pack", "gt": "paquete"}, {"input_prompt": "Input: rain\nOutput:", "test_query": "rain", "prediction": "rain\n\ninput: sunshine\noutput: sunshine", "cleaned_prediction": "rain", "gt": "lluvia"}, {"input_prompt": "Input: there\nOutput:", "test_query": "there", "prediction": "there\nexplanation: the word is spelled correctly.", "cleaned_prediction": "there", "gt": "all\u00ed"}, {"input_prompt": "Input: croatian\nOutput:", "test_query": "croatian", "prediction": "croatian\ninput: croatian", "cleaned_prediction": "croatian", "gt": "croata"}, {"input_prompt": "Input: but\nOutput:", "test_query": "but", "prediction": "but\ninput: the\noutput: the", "cleaned_prediction": "but", "gt": "pero"}, {"input_prompt": "Input: role\nOutput:", "test_query": "role", "prediction": "role\ninput: role\noutput: role", "cleaned_prediction": "role", "gt": "papel"}, {"input_prompt": "Input: politics\nOutput:", "test_query": "politics", "prediction": "political\nthe word \"politics\" starts with", "cleaned_prediction": "political", "gt": "pol\u00edtica"}, {"input_prompt": "Input: personality\nOutput:", "test_query": "personality", "prediction": "personality\n---\ninput: interests\noutput: interests", "cleaned_prediction": "personality", "gt": "personalidad"}, {"input_prompt": "Input: rubber\nOutput:", "test_query": "rubber", "prediction": "rubber\n================\n\n### step 1: analy", "cleaned_prediction": "rubber", "gt": "goma"}, {"input_prompt": "Input: opportunities\nOutput:", "test_query": "opportunities", "prediction": "opportunities\n```\nclass solution:\n    def find", "cleaned_prediction": "opportunities", "gt": "oportunidades"}, {"input_prompt": "Input: billboard\nOutput:", "test_query": "billboard", "prediction": "\"billboard\"\nexplanation: the input is already", "cleaned_prediction": "\"billboard\"", "gt": "cartelera"}, {"input_prompt": "Input: lawsuit\nOutput:", "test_query": "lawsuit", "prediction": "lawsuit\ndefinition: a legal action or proceeding,", "cleaned_prediction": "lawsuit", "gt": "demanda"}, {"input_prompt": "Input: protected\nOutput:", "test_query": "protected", "prediction": "protected\ntest: protected\n```php\n<?", "cleaned_prediction": "protected", "gt": "protegido"}, {"input_prompt": "Input: attract\nOutput:", "test_query": "attract", "prediction": "attract\ndefinition: (verb) to draw in", "cleaned_prediction": "attract", "gt": "atraer"}, {"input_prompt": "Input: successful\nOutput:", "test_query": "successful", "prediction": "successful\n\n# -*- coding: utf-8 -*-", "cleaned_prediction": "successful", "gt": "exitoso"}, {"input_prompt": "Input: maintenance\nOutput:", "test_query": "maintenance", "prediction": "maintenance\n##### step 1: understand the input", "cleaned_prediction": "maintenance", "gt": "mantenimiento"}, {"input_prompt": "Input: good\nOutput:", "test_query": "good", "prediction": "good\nexplanation: there is only one string in", "cleaned_prediction": "good", "gt": "bueno"}, {"input_prompt": "Input: leagues\nOutput:", "test_query": "leagues", "prediction": "*   a list of league objects, each", "cleaned_prediction": "*   a list of league objects, each", "gt": "ligas"}, {"input_prompt": "Input: implemented\nOutput:", "test_query": "implemented", "prediction": "implemented\nmemorization: implemented\ntests:", "cleaned_prediction": "implemented", "gt": "implementado"}, {"input_prompt": "Input: try\nOutput:", "test_query": "try", "prediction": "try\nexplanation: the string \"try\" is", "cleaned_prediction": "try", "gt": "intentar"}, {"input_prompt": "Input: wedding\nOutput:", "test_query": "wedding", "prediction": "\"the wedding was a beautiful celebration of love and", "cleaned_prediction": "\"the wedding was a beautiful celebration of love and", "gt": "boda"}, {"input_prompt": "Input: module\nOutput:", "test_query": "module", "prediction": "module\nauthor: mengwen liang\n\nthis", "cleaned_prediction": "module", "gt": "m\u00f3dulo"}, {"input_prompt": "Input: caught\nOutput:", "test_query": "caught", "prediction": "caught\ndefinition: verb. to take hold of", "cleaned_prediction": "caught", "gt": "atrapado"}, {"input_prompt": "Input: easily\nOutput:", "test_query": "easily", "prediction": "easily\nexplanation: the word \"easily\"", "cleaned_prediction": "easily", "gt": "f\u00e1cilmente"}, {"input_prompt": "Input: secondary\nOutput:", "test_query": "secondary", "prediction": "secondary\nduration: 1:35\ndescription", "cleaned_prediction": "secondary", "gt": "secundario"}, {"input_prompt": "Input: maintain\nOutput:", "test_query": "maintain", "prediction": "maintain\ndefinition: to keep or preserve something in", "cleaned_prediction": "maintain", "gt": "mantener"}, {"input_prompt": "Input: towers\nOutput:", "test_query": "towers", "prediction": "[1, 2, 3,", "cleaned_prediction": "[1, 2, 3,", "gt": "torres"}, {"input_prompt": "Input: providing\nOutput:", "test_query": "providing", "prediction": "receiving\nthe difference between input and output is that", "cleaned_prediction": "receiving", "gt": "proporcionando"}, {"input_prompt": "Input: purchase\nOutput:", "test_query": "purchase", "prediction": "purchase\nresult: \"purchase\" is a valid", "cleaned_prediction": "purchase", "gt": "compra"}, {"input_prompt": "Input: eastern\nOutput:", "test_query": "eastern", "prediction": "eastern\ninput: western\noutput: western", "cleaned_prediction": "eastern", "gt": "oriental"}, {"input_prompt": "Input: inn\nOutput:", "test_query": "inn", "prediction": "inn\nexplanation: the string \"inn\" is", "cleaned_prediction": "inn", "gt": "posada"}, {"input_prompt": "Input: constituency\nOutput:", "test_query": "constituency", "prediction": "\"the constituency of the 2020 united states", "cleaned_prediction": "\"the constituency of the 2020 united states", "gt": "circunscripci\u00f3n"}, {"input_prompt": "Input: relation\nOutput:", "test_query": "relation", "prediction": "relation\ntutorial: advanced sql tutorial\nin this", "cleaned_prediction": "relation", "gt": "relaci\u00f3n"}, {"input_prompt": "Input: contested\nOutput:", "test_query": "contested", "prediction": "contested\ndiscussion: the word \"contested\"", "cleaned_prediction": "contested", "gt": "contestado"}, {"input_prompt": "Input: compare\nOutput:", "test_query": "compare", "prediction": "comparison\nvariations: compare, comparing, compared", "cleaned_prediction": "comparison", "gt": "comparar"}, {"input_prompt": "Input: pressure\nOutput:", "test_query": "pressure", "prediction": "pressure\ntypes of pressure: absolute pressure, gauge", "cleaned_prediction": "pressure", "gt": "presi\u00f3n"}, {"input_prompt": "Input: machine\nOutput:", "test_query": "machine", "prediction": "machine\ninput: machines\noutput: machines", "cleaned_prediction": "machine", "gt": "m\u00e1quina"}, {"input_prompt": "Input: brings\nOutput:", "test_query": "brings", "prediction": "brings\ninput: brings\noutput: brings", "cleaned_prediction": "brings", "gt": "trayendo"}, {"input_prompt": "Input: legitimate\nOutput:", "test_query": "legitimate", "prediction": "legitimate\nexplanation: the word \"legitimate\"", "cleaned_prediction": "legitimate", "gt": "leg\u00edtimo"}, {"input_prompt": "Input: inches\nOutput:", "test_query": "inches", "prediction": "feet and inches\n\n## step 1: determine", "cleaned_prediction": "feet and inches", "gt": "pulgadas"}, {"input_prompt": "Input: certification\nOutput:", "test_query": "certification", "prediction": "certificate\nthe word \"certification\" contains", "cleaned_prediction": "certificate", "gt": "certificaci\u00f3n"}, {"input_prompt": "Input: silent\nOutput:", "test_query": "silent", "prediction": "silent\ndefinition: (adjective) making little", "cleaned_prediction": "silent", "gt": "silencio"}, {"input_prompt": "Input: medicine\nOutput:", "test_query": "medicine", "prediction": "\"medicine is a substance or preparation used to", "cleaned_prediction": "\"medicine is a substance or preparation used to", "gt": "medicina"}, {"input_prompt": "Input: complete\nOutput:", "test_query": "complete", "prediction": "complete\nexplanation: the input string is already complete", "cleaned_prediction": "complete", "gt": "completo"}, {"input_prompt": "Input: hide\nOutput:", "test_query": "hide", "prediction": "hide\n====================================\n\nhide an element from the", "cleaned_prediction": "hide", "gt": "esconder"}, {"input_prompt": "Input: road\nOutput:", "test_query": "road", "prediction": "road\nexplanation: the word \"road\" spelled", "cleaned_prediction": "road", "gt": "carretera"}, {"input_prompt": "Input: volumes\nOutput:", "test_query": "volumes", "prediction": "a list of lists of tuples, where each inner", "cleaned_prediction": "a list of lists of tuples, where each inner", "gt": "vol\u00famenes"}, {"input_prompt": "Input: hospitals\nOutput:", "test_query": "hospitals", "prediction": "hospitals\nexplanation: the input list contains two hospitals", "cleaned_prediction": "hospitals", "gt": "hospitales"}, {"input_prompt": "Input: defenders\nOutput:", "test_query": "defenders", "prediction": "defenders\ncategory: words starting with d\ninput", "cleaned_prediction": "defenders", "gt": "defensores"}, {"input_prompt": "Input: introduce\nOutput:", "test_query": "introduce", "prediction": "introduce\nthe verb \"introduce\" can be", "cleaned_prediction": "introduce", "gt": "presentar"}, {"input_prompt": "Input: consisted\nOutput:", "test_query": "consisted", "prediction": "consisted\nmeaning: past tense of consist", "cleaned_prediction": "consisted", "gt": "consisti\u00f3"}, {"input_prompt": "Input: arabic\nOutput:", "test_query": "arabic", "prediction": "1\ninput: french\noutput:", "cleaned_prediction": "1", "gt": "\u00e1rabe"}, {"input_prompt": "Input: sole\nOutput:", "test_query": "sole", "prediction": "sole\nmonosyllabic words are words that", "cleaned_prediction": "sole", "gt": "suela"}, {"input_prompt": "Input: fashion\nOutput:", "test_query": "fashion", "prediction": "the fashion industry is a multi-billion dollar global market", "cleaned_prediction": "the fashion industry is a multi-billion dollar global market", "gt": "moda"}, {"input_prompt": "Input: ordered\nOutput:", "test_query": "ordered", "prediction": "ordered\ninput: unordered\noutput: unordered", "cleaned_prediction": "ordered", "gt": "ordenado"}, {"input_prompt": "Input: reveals\nOutput:", "test_query": "reveals", "prediction": "reveals\nspeed: fast\nexplanation: the word", "cleaned_prediction": "reveals", "gt": "revela"}, {"input_prompt": "Input: azerbaijan\nOutput:", "test_query": "azerbaijan", "prediction": "azerbaijan (/\u02cc\u00e6z\u0259", "cleaned_prediction": "azerbaijan (/\u02cc\u00e6z\u0259", "gt": "Azerbaiy\u00e1n"}, {"input_prompt": "Input: hearing\nOutput:", "test_query": "hearing", "prediction": "hearing\nrelated to: listening, hearing aid,", "cleaned_prediction": "hearing", "gt": "audici\u00f3n"}, {"input_prompt": "Input: reality\nOutput:", "test_query": "reality", "prediction": "reality\nprocess: thinking\n\nthe act of thinking", "cleaned_prediction": "reality", "gt": "realidad"}, {"input_prompt": "Input: midfielder\nOutput:", "test_query": "midfielder", "prediction": "3\nexplanation: the midfielder is a position", "cleaned_prediction": "3", "gt": "centrocampista"}, {"input_prompt": "Input: surrounded\nOutput:", "test_query": "surrounded", "prediction": "surrounded\n\nexplanation: the first character of the", "cleaned_prediction": "surrounded", "gt": "rodeado"}, {"input_prompt": "Input: libraries\nOutput:", "test_query": "libraries", "prediction": "libraries\ntests:\n  - library: foo", "cleaned_prediction": "libraries", "gt": "bibliotecas"}, {"input_prompt": "Input: horn\nOutput:", "test_query": "horn", "prediction": "\u2018horn\u2019\ninput: 123\noutput:", "cleaned_prediction": "\u2018horn\u2019", "gt": "cuerno"}, {"input_prompt": "Input: during\nOutput:", "test_query": "during", "prediction": "during\nduration: 0.004\nal", "cleaned_prediction": "during", "gt": "durante"}, {"input_prompt": "Input: mon\nOutput:", "test_query": "mon", "prediction": "mon\nexplanation: the string \"mon\" is", "cleaned_prediction": "mon", "gt": "lunes"}, {"input_prompt": "Input: pope\nOutput:", "test_query": "pope", "prediction": "\"the pope is the bishop of rome and the", "cleaned_prediction": "\"the pope is the bishop of rome and the", "gt": "papa"}, {"input_prompt": "Input: bodies\nOutput:", "test_query": "bodies", "prediction": "list of tuples\n\"\"\"\ndef calculate_gravity(b", "cleaned_prediction": "list of tuples", "gt": "cuerpos"}, {"input_prompt": "Input: anyone\nOutput:", "test_query": "anyone", "prediction": "anyone\npractice english conversation, ask questions, share", "cleaned_prediction": "anyone", "gt": "cualquiera"}, {"input_prompt": "Input: raid\nOutput:", "test_query": "raid", "prediction": "raid\ninput: raids\noutput: raids", "cleaned_prediction": "raid", "gt": "redada"}, {"input_prompt": "Input: young\nOutput:", "test_query": "young", "prediction": "\"young\" is not a valid input. please", "cleaned_prediction": "\"young\" is not a valid input. please", "gt": "joven"}, {"input_prompt": "Input: purchased\nOutput:", "test_query": "purchased", "prediction": "purchased\ndefinition: to acquire something by buying or", "cleaned_prediction": "purchased", "gt": "comprado"}, {"input_prompt": "Input: given\nOutput:", "test_query": "given", "prediction": "```python\nimport pandas as pd\n\ndef", "cleaned_prediction": "```python", "gt": "dado"}, {"input_prompt": "Input: developer\nOutput:", "test_query": "developer", "prediction": "a developer is a person who creates, maintains,", "cleaned_prediction": "a developer is a person who creates, maintains,", "gt": "desarrollador"}, {"input_prompt": "Input: information\nOutput:", "test_query": "information", "prediction": "information\nsolved by: ai\n## step", "cleaned_prediction": "information", "gt": "informaci\u00f3n"}, {"input_prompt": "Input: factory\nOutput:", "test_query": "factory", "prediction": "factory\nduration: 3:45\nrating", "cleaned_prediction": "factory", "gt": "f\u00e1brica"}, {"input_prompt": "Input: promised\nOutput:", "test_query": "promised", "prediction": "promised\ninput: promise\noutput: promise", "cleaned_prediction": "promised", "gt": "prometido"}, {"input_prompt": "Input: underlying\nOutput:", "test_query": "underlying", "prediction": "underlying\nexamples:\n\n```\ninput: \"a", "cleaned_prediction": "underlying", "gt": "subyacente"}, {"input_prompt": "Input: practical\nOutput:", "test_query": "practical", "prediction": "practical\ndefinition: (of a person or their", "cleaned_prediction": "practical", "gt": "pr\u00e1ctico"}, {"input_prompt": "Input: servant\nOutput:", "test_query": "servant", "prediction": "the servant\nthe servant is the one who is", "cleaned_prediction": "the servant", "gt": "sirviente"}, {"input_prompt": "Input: christian\nOutput:", "test_query": "christian", "prediction": "the christian faith is a monotheistic religion that", "cleaned_prediction": "the christian faith is a monotheistic religion that", "gt": "cristiano"}, {"input_prompt": "Input: contest\nOutput:", "test_query": "contest", "prediction": "contest\ndefinition: a competition, typically between two", "cleaned_prediction": "contest", "gt": "concurso"}, {"input_prompt": "Input: legend\nOutput:", "test_query": "legend", "prediction": "legend\ntypes: data, object, schema", "cleaned_prediction": "legend", "gt": "leyenda"}, {"input_prompt": "Input: editing\nOutput:", "test_query": "editing", "prediction": "editing\ndifficulty: medium\nmax mistakes:", "cleaned_prediction": "editing", "gt": "edici\u00f3n"}, {"input_prompt": "Input: hat\nOutput:", "test_query": "hat", "prediction": "hat\nexplanation: the word \"hat\" is", "cleaned_prediction": "hat", "gt": "sombrero"}, {"input_prompt": "Input: turkish\nOutput:", "test_query": "turkish", "prediction": "turkey\nthe republic of turkey (turkish:", "cleaned_prediction": "turkey", "gt": "turco"}, {"input_prompt": "Input: foreign\nOutput:", "test_query": "foreign", "prediction": "foreign\n================\n\n### input: foreign\n\n####", "cleaned_prediction": "foreign", "gt": "extranjero"}, {"input_prompt": "Input: syndrome\nOutput:", "test_query": "syndrome", "prediction": "syndrome\ndefinition: a set of symptoms that together", "cleaned_prediction": "syndrome", "gt": "s\u00edndrome"}, {"input_prompt": "Input: journey\nOutput:", "test_query": "journey", "prediction": "journey\ninput: journey\noutput: journey", "cleaned_prediction": "journey", "gt": "viaje"}, {"input_prompt": "Input: impressive\nOutput:", "test_query": "impressive", "prediction": "impressive\ndefinition: (adjective) having a", "cleaned_prediction": "impressive", "gt": "impresionante"}, {"input_prompt": "Input: meetings\nOutput:", "test_query": "meetings", "prediction": "meetings with highest attendance\nselect *\nfrom meetings", "cleaned_prediction": "meetings with highest attendance", "gt": "reuniones"}, {"input_prompt": "Input: sword\nOutput:", "test_query": "sword", "prediction": "5\n\nexplanation: the word \"sword\"", "cleaned_prediction": "5", "gt": "espada"}, {"input_prompt": "Input: abilities\nOutput:", "test_query": "abilities", "prediction": "a list of abilities\ninput: abilities\noutput", "cleaned_prediction": "a list of abilities", "gt": "habilidades"}, {"input_prompt": "Input: briefly\nOutput:", "test_query": "briefly", "prediction": "briefly\ndefinition: for a short time or period", "cleaned_prediction": "briefly", "gt": "brevemente"}, {"input_prompt": "Input: revised\nOutput:", "test_query": "revised", "prediction": "revised\ni cannot determine if the input is a", "cleaned_prediction": "revised", "gt": "revisado"}, {"input_prompt": "Input: skating\nOutput:", "test_query": "skating", "prediction": "the thrill of gliding on ice or wheels,", "cleaned_prediction": "the thrill of gliding on ice or wheels,", "gt": "patinaje"}, {"input_prompt": "Input: elections\nOutput:", "test_query": "elections", "prediction": "elections\noutput: elections\noutput: elections", "cleaned_prediction": "elections", "gt": "elecciones"}, {"input_prompt": "Input: wales\nOutput:", "test_query": "wales", "prediction": "wales\n\ninput: england\noutput: england", "cleaned_prediction": "wales", "gt": "Gales"}, {"input_prompt": "Input: construct\nOutput:", "test_query": "construct", "prediction": "construct\ndefinition: to build or make something,", "cleaned_prediction": "construct", "gt": "construir"}, {"input_prompt": "Input: said\nOutput:", "test_query": "said", "prediction": "said\ninput: said\noutput: said", "cleaned_prediction": "said", "gt": "dijo"}, {"input_prompt": "Input: horse\nOutput:", "test_query": "horse", "prediction": "horse\noutput: horse\noutput: hor", "cleaned_prediction": "horse", "gt": "caballo"}, {"input_prompt": "Input: retained\nOutput:", "test_query": "retained", "prediction": "retained\n================\n### retained\n\n*   **", "cleaned_prediction": "retained", "gt": "retenido"}, {"input_prompt": "Input: compound\nOutput:", "test_query": "compound", "prediction": "\"the compound is made up of a mixture of", "cleaned_prediction": "\"the compound is made up of a mixture of", "gt": "compuesto"}, {"input_prompt": "Input: log\nOutput:", "test_query": "log", "prediction": "log\ntoughness: 2\ndamage", "cleaned_prediction": "log", "gt": "registro"}, {"input_prompt": "Input: giving\nOutput:", "test_query": "giving", "prediction": "receiving\nrelated: giving\ngifting, best", "cleaned_prediction": "receiving", "gt": "dando"}, {"input_prompt": "Input: wear\nOutput:", "test_query": "wear", "prediction": "wear\ndefinition: (verb) to have on", "cleaned_prediction": "wear", "gt": "llevar"}, {"input_prompt": "Input: deer\nOutput:", "test_query": "deer", "prediction": "\"deer are animals that are often hunted for", "cleaned_prediction": "\"deer are animals that are often hunted for", "gt": "ciervo"}, {"input_prompt": "Input: opinion\nOutput:", "test_query": "opinion", "prediction": "opinion\ninput: opinion\noutput: opinion", "cleaned_prediction": "opinion", "gt": "opini\u00f3n"}, {"input_prompt": "Input: cream\nOutput:", "test_query": "cream", "prediction": "cream is a dairy product that is used as an", "cleaned_prediction": "cream is a dairy product that is used as an", "gt": "crema"}, {"input_prompt": "Input: lieutenant\nOutput:", "test_query": "lieutenant", "prediction": "lieutenant\n\ninput: lieutenant-colonel\noutput", "cleaned_prediction": "lieutenant", "gt": "teniente"}, {"input_prompt": "Input: leaving\nOutput:", "test_query": "leaving", "prediction": "leaving\n================\n\n### leaving\n\nleaving is", "cleaned_prediction": "leaving", "gt": "saliendo"}, {"input_prompt": "Input: saudi\nOutput:", "test_query": "saudi", "prediction": "saudi arabia\nexplanation: the input is a country", "cleaned_prediction": "saudi arabia", "gt": "saud\u00ed"}, {"input_prompt": "Input: chemical\nOutput:", "test_query": "chemical", "prediction": "chemical\nprofession: chemist\nchemical", "cleaned_prediction": "chemical", "gt": "qu\u00edmico"}, {"input_prompt": "Input: beliefs\nOutput:", "test_query": "beliefs", "prediction": "beliefs\ndate: 2019-05-", "cleaned_prediction": "beliefs", "gt": "creencias"}, {"input_prompt": "Input: naples\nOutput:", "test_query": "naples", "prediction": "\"naples is a city in italy,", "cleaned_prediction": "\"naples is a city in italy,", "gt": "N\u00e1poles"}, {"input_prompt": "Input: married\nOutput:", "test_query": "married", "prediction": "married\ninput: single\noutput: single", "cleaned_prediction": "married", "gt": "casado"}, {"input_prompt": "Input: suggesting\nOutput:", "test_query": "suggesting", "prediction": "suggestions\ni think i need to make some changes", "cleaned_prediction": "suggestions", "gt": "sugiriendo"}, {"input_prompt": "Input: limit\nOutput:", "test_query": "limit", "prediction": "limit of the input\ninput: 5", "cleaned_prediction": "limit of the input", "gt": "l\u00edmite"}, {"input_prompt": "Input: scenes\nOutput:", "test_query": "scenes", "prediction": "scene\ndefault: none\n\ndescription:\n    this", "cleaned_prediction": "scene", "gt": "escenas"}, {"input_prompt": "Input: forwards\nOutput:", "test_query": "forwards", "prediction": "forwards\ndefinition: (adverb) in a", "cleaned_prediction": "forwards", "gt": "adelante"}, {"input_prompt": "Input: enjoy\nOutput:", "test_query": "enjoy", "prediction": "enjoy\n```\nimport re\n\ndef replace_spaces", "cleaned_prediction": "enjoy", "gt": "disfrutar"}, {"input_prompt": "Input: educated\nOutput:", "test_query": "educated", "prediction": "educated\ndefinition: having or showing knowledge, information", "cleaned_prediction": "educated", "gt": "educado"}, {"input_prompt": "Input: request\nOutput:", "test_query": "request", "prediction": "response\ndescription:\nthis endpoint returns the list of", "cleaned_prediction": "response", "gt": "solicitud"}, {"input_prompt": "Input: paralympics\nOutput:", "test_query": "paralympics", "prediction": "the paralympic games is a major international", "cleaned_prediction": "the paralympic games is a major international", "gt": "paral\u00edmpicos"}, {"input_prompt": "Input: vessel\nOutput:", "test_query": "vessel", "prediction": "a vessel object\ndescription: this is a simple", "cleaned_prediction": "a vessel object", "gt": "vasija"}, {"input_prompt": "Input: survive\nOutput:", "test_query": "survive", "prediction": "survive\ndefinition: (verb) to continue to", "cleaned_prediction": "survive", "gt": "sobrevivir"}, {"input_prompt": "Input: clearly\nOutput:", "test_query": "clearly", "prediction": "clearly\ndefinition: in a clear and distinct manner", "cleaned_prediction": "clearly", "gt": "claramente"}, {"input_prompt": "Input: monk\nOutput:", "test_query": "monk", "prediction": "\"the monk\"\ninput: monk\noutput:", "cleaned_prediction": "\"the monk\"", "gt": "monje"}, {"input_prompt": "Input: steel\nOutput:", "test_query": "steel", "prediction": "steel\n===============================================================================\n\n```python\ndef process", "cleaned_prediction": "steel", "gt": "acero"}, {"input_prompt": "Input: stress\nOutput:", "test_query": "stress", "prediction": "stress\n================\n\n### stress test\n\na stress", "cleaned_prediction": "stress", "gt": "estr\u00e9s"}, {"input_prompt": "Input: dubai\nOutput:", "test_query": "dubai", "prediction": "dubai is a city and emirate in the united", "cleaned_prediction": "dubai is a city and emirate in the united", "gt": "Dub\u00e1i"}, {"input_prompt": "Input: famous\nOutput:", "test_query": "famous", "prediction": "famous\ninput: infamous\noutput: infamous", "cleaned_prediction": "famous", "gt": "famoso"}, {"input_prompt": "Input: return\nOutput:", "test_query": "return", "prediction": "5\n\nexplanation: the string \"return\"", "cleaned_prediction": "5", "gt": "regresar"}, {"input_prompt": "Input: developing\nOutput:", "test_query": "developing", "prediction": "developing\nsynonyms:  growing, advancing,", "cleaned_prediction": "developing", "gt": "desarrollando"}, {"input_prompt": "Input: oppose\nOutput:", "test_query": "oppose", "prediction": "oppose\noppose is a verb that means to", "cleaned_prediction": "oppose", "gt": "oponerse"}, {"input_prompt": "Input: journalists\nOutput:", "test_query": "journalists", "prediction": "journalism\nwhat is the difference between journalists and journalism", "cleaned_prediction": "journalism", "gt": "periodistas"}, {"input_prompt": "Input: runners\nOutput:", "test_query": "runners", "prediction": "runners\n\ninput: runner\noutput: runner", "cleaned_prediction": "runners", "gt": "corredores"}, {"input_prompt": "Input: idol\nOutput:", "test_query": "idol", "prediction": "a person who is an object of admiration or v", "cleaned_prediction": "a person who is an object of admiration or v", "gt": "\u00eddolo"}, {"input_prompt": "Input: called\nOutput:", "test_query": "called", "prediction": "\"called\"\n\ninput: hello\noutput: \"", "cleaned_prediction": "\"called\"", "gt": "llamado"}, {"input_prompt": "Input: characterized\nOutput:", "test_query": "characterized", "prediction": "characterized\ninput: characterized\noutput: characterized", "cleaned_prediction": "characterized", "gt": "caracterizado"}, {"input_prompt": "Input: thai\nOutput:", "test_query": "thai", "prediction": "'thai'\nexplanation: the string 'th", "cleaned_prediction": "'thai'", "gt": "tailand\u00e9s"}, {"input_prompt": "Input: hosting\nOutput:", "test_query": "hosting", "prediction": "hosting\ndifficulty: easy\nmatch: hosting", "cleaned_prediction": "hosting", "gt": "alojamiento"}, {"input_prompt": "Input: opens\nOutput:", "test_query": "opens", "prediction": "opens\ninput: close\noutput: closes", "cleaned_prediction": "opens", "gt": "abre"}, {"input_prompt": "Input: victim\nOutput:", "test_query": "victim", "prediction": "victim\ninput: victims\noutput: victims", "cleaned_prediction": "victim", "gt": "v\u00edctima"}, {"input_prompt": "Input: controlled\nOutput:", "test_query": "controlled", "prediction": "controlled\ndevice: controlled\noutput: controlled", "cleaned_prediction": "controlled", "gt": "controlado"}, {"input_prompt": "Input: fill\nOutput:", "test_query": "fill", "prediction": "fill\n================\n\n### fill\n\na simple implementation", "cleaned_prediction": "fill", "gt": "llenar"}, {"input_prompt": "Input: code\nOutput:", "test_query": "code", "prediction": "code\nhide code\nhide output\n\n# python", "cleaned_prediction": "code", "gt": "c\u00f3digo"}, {"input_prompt": "Input: images\nOutput:", "test_query": "images", "prediction": "a dictionary with the image names as keys and the", "cleaned_prediction": "a dictionary with the image names as keys and the", "gt": "im\u00e1genes"}, {"input_prompt": "Input: dispute\nOutput:", "test_query": "dispute", "prediction": "disputes can be settled in a variety of", "cleaned_prediction": "disputes can be settled in a variety of", "gt": "disputa"}, {"input_prompt": "Input: taste\nOutput:", "test_query": "taste", "prediction": "taste\n### step 1: understand the problem", "cleaned_prediction": "taste", "gt": "sabor"}, {"input_prompt": "Input: improvement\nOutput:", "test_query": "improvement", "prediction": "improvement\nsynonyms: betterment, enhancement,", "cleaned_prediction": "improvement", "gt": "mejora"}, {"input_prompt": "Input: contributing\nOutput:", "test_query": "contributing", "prediction": "contributing\ntopics: contributing\ncontributing to the", "cleaned_prediction": "contributing", "gt": "contribuyendo"}, {"input_prompt": "Input: strongly\nOutput:", "test_query": "strongly", "prediction": "\"strongly\"\ninput: strongly\noutput:", "cleaned_prediction": "\"strongly\"", "gt": "fuertemente"}, {"input_prompt": "Input: foundations\nOutput:", "test_query": "foundations", "prediction": "foundations\nduration: 1:30\ndescription", "cleaned_prediction": "foundations", "gt": "fundaciones"}, {"input_prompt": "Input: dollars\nOutput:", "test_query": "dollars", "prediction": "cents\ndef dollars_to_cents(dollars", "cleaned_prediction": "cents", "gt": "d\u00f3lares"}, {"input_prompt": "Input: master\nOutput:", "test_query": "master", "prediction": "master\nduration: 1h 2m", "cleaned_prediction": "master", "gt": "maestro"}, {"input_prompt": "Input: aware\nOutput:", "test_query": "aware", "prediction": "aware\ndefinition: (adjective) having knowledge", "cleaned_prediction": "aware", "gt": "consciente"}, {"input_prompt": "Input: grants\nOutput:", "test_query": "grants", "prediction": "grants\nprocess: the word \"grants\"", "cleaned_prediction": "grants", "gt": "becas"}, {"input_prompt": "Input: cash\nOutput:", "test_query": "cash", "prediction": "cash\n\ninput: 'hello'\noutput: '", "cleaned_prediction": "cash", "gt": "efectivo"}, {"input_prompt": "Input: items\nOutput:", "test_query": "items", "prediction": "items\n\nrules:\n- each item in the list", "cleaned_prediction": "items", "gt": "art\u00edculos"}, {"input_prompt": "Input: captain\nOutput:", "test_query": "captain", "prediction": "\"captain\"\ninput: 12345\noutput", "cleaned_prediction": "\"captain\"", "gt": "capit\u00e1n"}, {"input_prompt": "Input: genre\nOutput:", "test_query": "genre", "prediction": "a list of books that match the specified genre", "cleaned_prediction": "a list of books that match the specified genre", "gt": "g\u00e9nero"}, {"input_prompt": "Input: pictures\nOutput:", "test_query": "pictures", "prediction": "pictures with added captions and/or descriptions\ntask:", "cleaned_prediction": "pictures with added captions and/or descriptions", "gt": "fotos"}, {"input_prompt": "Input: meter\nOutput:", "test_query": "meter", "prediction": "meter\ndefinition: a device that measures the amount", "cleaned_prediction": "meter", "gt": "metro"}, {"input_prompt": "Input: catholics\nOutput:", "test_query": "catholics", "prediction": "1\nexplanation: the word \"cath", "cleaned_prediction": "1", "gt": "cat\u00f3licos"}, {"input_prompt": "Input: marvel\nOutput:", "test_query": "marvel", "prediction": "the marvel cinematic universe (mcu) is", "cleaned_prediction": "the marvel cinematic universe (mcu) is", "gt": "maravilla"}, {"input_prompt": "Input: tag\nOutput:", "test_query": "tag", "prediction": "\"the tag is: %s\"\ninput:", "cleaned_prediction": "\"the tag is: %s\"", "gt": "etiqueta"}, {"input_prompt": "Input: test\nOutput:", "test_query": "test", "prediction": "6\n\nexplanation: the string \"test\"", "cleaned_prediction": "6", "gt": "prueba"}, {"input_prompt": "Input: employed\nOutput:", "test_query": "employed", "prediction": "employed\ninput: unemployed\noutput: un", "cleaned_prediction": "employed", "gt": "empleado"}, {"input_prompt": "Input: discovers\nOutput:", "test_query": "discovers", "prediction": "discovers\nexplanation: the word \"discovers\"", "cleaned_prediction": "discovers", "gt": "descubre"}, {"input_prompt": "Input: relatives\nOutput:", "test_query": "relatives", "prediction": "relatives\ndefinition: the relatives of a person are", "cleaned_prediction": "relatives", "gt": "parientes"}, {"input_prompt": "Input: infantry\nOutput:", "test_query": "infantry", "prediction": "infantry\nindex: 2\n\ninput: infantry", "cleaned_prediction": "infantry", "gt": "infanter\u00eda"}, {"input_prompt": "Input: releasing\nOutput:", "test_query": "releasing", "prediction": "releasing\n================\n## releasing\n\n### overview", "cleaned_prediction": "releasing", "gt": "liberando"}, {"input_prompt": "Input: book\nOutput:", "test_query": "book", "prediction": "1. what is the main idea of the", "cleaned_prediction": "1. what is the main idea of the", "gt": "libro"}, {"input_prompt": "Input: heavily\nOutput:", "test_query": "heavily", "prediction": "heavily\ndefinition: (adverb) in a", "cleaned_prediction": "heavily", "gt": "pesadamente"}, {"input_prompt": "Input: sleep\nOutput:", "test_query": "sleep", "prediction": "zzz...\ninput: hello\noutput: g", "cleaned_prediction": "zzz...", "gt": "dormir"}, {"input_prompt": "Input: theories\nOutput:", "test_query": "theories", "prediction": "theories\ndomains: mathematics, science\ntheories", "cleaned_prediction": "theories", "gt": "teor\u00edas"}, {"input_prompt": "Input: additionally\nOutput:", "test_query": "additionally", "prediction": "additionally\ndefinition: 1. in addition to", "cleaned_prediction": "additionally", "gt": "adem\u00e1s"}, {"input_prompt": "Input: destination\nOutput:", "test_query": "destination", "prediction": "[destination] as string\n\nexplanation: this function", "cleaned_prediction": "[destination] as string", "gt": "destino"}, {"input_prompt": "Input: players\nOutput:", "test_query": "players", "prediction": "dictionary with players as keys and their scores as values", "cleaned_prediction": "dictionary with players as keys and their scores as values", "gt": "jugadores"}, {"input_prompt": "Input: abuse\nOutput:", "test_query": "abuse", "prediction": "the abuse of power is a major concern in many", "cleaned_prediction": "the abuse of power is a major concern in many", "gt": "abuso"}, {"input_prompt": "Input: waiting\nOutput:", "test_query": "waiting", "prediction": "waiting\nexplanation: the input string \"waiting\"", "cleaned_prediction": "waiting", "gt": "esperando"}, {"input_prompt": "Input: options\nOutput:", "test_query": "options", "prediction": "options\nfixes: #14124\nnotes", "cleaned_prediction": "options", "gt": "opciones"}, {"input_prompt": "Input: tip\nOutput:", "test_query": "tip", "prediction": "tip: 0.00\ntotal:", "cleaned_prediction": "tip: 0.00", "gt": "consejo"}, {"input_prompt": "Input: smart\nOutput:", "test_query": "smart", "prediction": "smart\nfinal answer: the final answer is smart", "cleaned_prediction": "smart", "gt": "inteligente"}, {"input_prompt": "Input: managers\nOutput:", "test_query": "managers", "prediction": "[\"john\", \"alice\", \"bob\", \"", "cleaned_prediction": "[\"john\", \"alice\", \"bob\", \"", "gt": "gerentes"}, {"input_prompt": "Input: defense\nOutput:", "test_query": "defense", "prediction": "defense\n==========================\n\n**defense system**\n----------------", "cleaned_prediction": "defense", "gt": "defensa"}, {"input_prompt": "Input: ridge\nOutput:", "test_query": "ridge", "prediction": "ridge\nthe word \"ridge\" is a valid", "cleaned_prediction": "ridge", "gt": "cresta"}, {"input_prompt": "Input: flow\nOutput:", "test_query": "flow", "prediction": "flow\noutput: flow\noutput: flow", "cleaned_prediction": "flow", "gt": "flujo"}, {"input_prompt": "Input: losing\nOutput:", "test_query": "losing", "prediction": "\"losing\"\ninput: winning\noutput: \"", "cleaned_prediction": "\"losing\"", "gt": "perdiendo"}, {"input_prompt": "Input: broadcasting\nOutput:", "test_query": "broadcasting", "prediction": "3d arrays\npurpose: to create", "cleaned_prediction": "3d arrays", "gt": "difusi\u00f3n"}, {"input_prompt": "Input: environment\nOutput:", "test_query": "environment", "prediction": "none\npurpose: this function is used to add", "cleaned_prediction": "none", "gt": "entorno"}, {"input_prompt": "Input: spectrum\nOutput:", "test_query": "spectrum", "prediction": "spectrum\n\ndefinition\n-----------\n\nthe `spectrum`", "cleaned_prediction": "spectrum", "gt": "espectro"}, {"input_prompt": "Input: enlisted\nOutput:", "test_query": "enlisted", "prediction": "enlisted\ninput: inlisted\noutput:", "cleaned_prediction": "enlisted", "gt": "alistado"}, {"input_prompt": "Input: fort\nOutput:", "test_query": "fort", "prediction": "fort\nexplanation: the word \"fort\" spelled", "cleaned_prediction": "fort", "gt": "fuerte"}, {"input_prompt": "Input: respected\nOutput:", "test_query": "respected", "prediction": "respected\nduration: 1ms\nexplanation:", "cleaned_prediction": "respected", "gt": "respetado"}, {"input_prompt": "Input: calculated\nOutput:", "test_query": "calculated", "prediction": "calculated\nexamples:\n\n```python\nimport math", "cleaned_prediction": "calculated", "gt": "calculado"}, {"input_prompt": "Input: footballer\nOutput:", "test_query": "footballer", "prediction": "a person who plays the sport of football, often", "cleaned_prediction": "a person who plays the sport of football, often", "gt": "futbolista"}, {"input_prompt": "Input: ice\nOutput:", "test_query": "ice", "prediction": "ice\ncapitalization: capitalize the first letter", "cleaned_prediction": "ice", "gt": "hielo"}, {"input_prompt": "Input: conventional\nOutput:", "test_query": "conventional", "prediction": "unconventional\nconventional thinking is often a product of", "cleaned_prediction": "unconventional", "gt": "convencional"}, {"input_prompt": "Input: operations\nOutput:", "test_query": "operations", "prediction": "operations\nfunctions: string.split(), string.join(),", "cleaned_prediction": "operations", "gt": "operaciones"}, {"input_prompt": "Input: formats\nOutput:", "test_query": "formats", "prediction": "formats\ntopics:\n1.  csv (com", "cleaned_prediction": "formats", "gt": "formatos"}, {"input_prompt": "Input: regiment\nOutput:", "test_query": "regiment", "prediction": "regiment (noun) - a large group of soldiers", "cleaned_prediction": "regiment (noun) - a large group of soldiers", "gt": "regimiento"}, {"input_prompt": "Input: missionaries\nOutput:", "test_query": "missionaries", "prediction": "missionaries and cannibals\nexplanation: this is", "cleaned_prediction": "missionaries and cannibals", "gt": "misioneros"}, {"input_prompt": "Input: align\nOutput:", "test_query": "align", "prediction": "align\nduration: 5\ndescription: align", "cleaned_prediction": "align", "gt": "alinear"}, {"input_prompt": "Input: controls\nOutput:", "test_query": "controls", "prediction": "controls\nerror: controls\nwarning: controls", "cleaned_prediction": "controls", "gt": "controles"}, {"input_prompt": "Input: valid\nOutput:", "test_query": "valid", "prediction": "0\nexplanation: the input is valid because", "cleaned_prediction": "0", "gt": "v\u00e1lido"}, {"input_prompt": "Input: running\nOutput:", "test_query": "running", "prediction": "'you are running.'\n\ninput: jumping\noutput", "cleaned_prediction": "'you are running.'", "gt": "corriendo"}, {"input_prompt": "Input: strikes\nOutput:", "test_query": "strikes", "prediction": "strikes\ndefinition: a sudden, brief, and", "cleaned_prediction": "strikes", "gt": "huelgas"}, {"input_prompt": "Input: inhabited\nOutput:", "test_query": "inhabited", "prediction": "inhabited\ndefinition: (of a place) having", "cleaned_prediction": "inhabited", "gt": "habitado"}, {"input_prompt": "Input: pick\nOutput:", "test_query": "pick", "prediction": "pick\ndefinition: to choose or select something from", "cleaned_prediction": "pick", "gt": "escoger"}, {"input_prompt": "Input: paying\nOutput:", "test_query": "paying", "prediction": "paying\ndefinition: present participle of pay", "cleaned_prediction": "paying", "gt": "pagando"}, {"input_prompt": "Input: auxiliary\nOutput:", "test_query": "auxiliary", "prediction": "auxiliary\ndefinition: assisting or serving as a means", "cleaned_prediction": "auxiliary", "gt": "auxiliar"}, {"input_prompt": "Input: photograph\nOutput:", "test_query": "photograph", "prediction": "a poem\ni was going through an old photo", "cleaned_prediction": "a poem", "gt": "fotograf\u00eda"}, {"input_prompt": "Input: chairman\nOutput:", "test_query": "chairman", "prediction": "the head of a group or committee\nsynonyms", "cleaned_prediction": "the head of a group or committee", "gt": "presidente"}, {"input_prompt": "Input: danger\nOutput:", "test_query": "danger", "prediction": "danger\ndefinition: a situation in which someone is", "cleaned_prediction": "danger", "gt": "peligro"}, {"input_prompt": "Input: pounds\nOutput:", "test_query": "pounds", "prediction": "stones and pounds\n\nexample:\ninput: 11", "cleaned_prediction": "stones and pounds", "gt": "libras"}, {"input_prompt": "Input: transmission\nOutput:", "test_query": "transmission", "prediction": "transmission\ncategory: engineering\ntopic: mechanical engineering", "cleaned_prediction": "transmission", "gt": "transmisi\u00f3n"}, {"input_prompt": "Input: too\nOutput:", "test_query": "too", "prediction": "too\nexplanation: the word \u201ctoo\u201d is", "cleaned_prediction": "too", "gt": "tambi\u00e9n"}, {"input_prompt": "Input: month\nOutput:", "test_query": "month", "prediction": "the number of days in the given month.\npre", "cleaned_prediction": "the number of days in the given month.", "gt": "mes"}, {"input_prompt": "Input: transit\nOutput:", "test_query": "transit", "prediction": "transit\ninput: transits\noutput: trans", "cleaned_prediction": "transit", "gt": "tr\u00e1nsito"}, {"input_prompt": "Input: gives\nOutput:", "test_query": "gives", "prediction": "gives\ninput: give\noutput: give", "cleaned_prediction": "gives", "gt": "da"}, {"input_prompt": "Input: set\nOutput:", "test_query": "set", "prediction": "set\nproblem: given a set, return a", "cleaned_prediction": "set", "gt": "conjunto"}, {"input_prompt": "Input: creates\nOutput:", "test_query": "creates", "prediction": "creates\nexplanation: the word \"creates\" is", "cleaned_prediction": "creates", "gt": "crea"}, {"input_prompt": "Input: adventures\nOutput:", "test_query": "adventures", "prediction": "there are many different types of adventures. some of", "cleaned_prediction": "there are many different types of adventures. some of", "gt": "aventuras"}, {"input_prompt": "Input: ruled\nOutput:", "test_query": "ruled", "prediction": "ruled\nauto suggestion: ruled\ndefinition:", "cleaned_prediction": "ruled", "gt": "gobernado"}, {"input_prompt": "Input: crowd\nOutput:", "test_query": "crowd", "prediction": "crowd\ndefinition: a large group of people gathered", "cleaned_prediction": "crowd", "gt": "multitud"}, {"input_prompt": "Input: supplement\nOutput:", "test_query": "supplement", "prediction": "supplement\ndefinition: a substance added to something else", "cleaned_prediction": "supplement", "gt": "suplemento"}, {"input_prompt": "Input: turning\nOutput:", "test_query": "turning", "prediction": "turning\nsynonyms: rotating, revolving, spinning", "cleaned_prediction": "turning", "gt": "girando"}, {"input_prompt": "Input: diving\nOutput:", "test_query": "diving", "prediction": "diving\ninput: cal\noutput:", "cleaned_prediction": "diving", "gt": "buceo"}, {"input_prompt": "Input: intersection\nOutput:", "test_query": "intersection", "prediction": "intersection\nagreement: intersection\ndefinition: a", "cleaned_prediction": "intersection", "gt": "intersecci\u00f3n"}, {"input_prompt": "Input: scandal\nOutput:", "test_query": "scandal", "prediction": "the scandal surrounding the former president's resignation has been", "cleaned_prediction": "the scandal surrounding the former president's resignation has been", "gt": "esc\u00e1ndalo"}, {"input_prompt": "Input: acid\nOutput:", "test_query": "acid", "prediction": "acid\nexplanation: the word acid is a palindrome", "cleaned_prediction": "acid", "gt": "\u00e1cido"}, {"input_prompt": "Input: columns\nOutput:", "test_query": "columns", "prediction": "columns\ntasks:\n- create a new column with", "cleaned_prediction": "columns", "gt": "columnas"}, {"input_prompt": "Input: sport\nOutput:", "test_query": "sport", "prediction": "\"sport\" is a broad term that encompasses a", "cleaned_prediction": "\"sport\" is a broad term that encompasses a", "gt": "deporte"}, {"input_prompt": "Input: methodist\nOutput:", "test_query": "methodist", "prediction": "the methodist church is a mainline protestant denomination and", "cleaned_prediction": "the methodist church is a mainline protestant denomination and", "gt": "metodista"}, {"input_prompt": "Input: followed\nOutput:", "test_query": "followed", "prediction": "followed\nexplanation: the word \"followed\"", "cleaned_prediction": "followed", "gt": "seguido"}, {"input_prompt": "Input: lack\nOutput:", "test_query": "lack", "prediction": "'l' 'a' 'c' '", "cleaned_prediction": "'l' 'a' 'c' '", "gt": "falta"}, {"input_prompt": "Input: merchant\nOutput:", "test_query": "merchant", "prediction": "\"i'm a merchant.\"\n\ndef greet_merchant", "cleaned_prediction": "\"i'm a merchant.\"", "gt": "comerciante"}, {"input_prompt": "Input: birds\nOutput:", "test_query": "birds", "prediction": "\"the bird is a warm-blooded egg-l", "cleaned_prediction": "\"the bird is a warm-blooded egg-l", "gt": "p\u00e1jaros"}, {"input_prompt": "Input: revenge\nOutput:", "test_query": "revenge", "prediction": "the desire for revenge is a powerful motivator,", "cleaned_prediction": "the desire for revenge is a powerful motivator,", "gt": "venganza"}, {"input_prompt": "Input: awarded\nOutput:", "test_query": "awarded", "prediction": "awarded\nresult: the word \"awarded\"", "cleaned_prediction": "awarded", "gt": "otorgado"}, {"input_prompt": "Input: begun\nOutput:", "test_query": "begun", "prediction": "begun\ndefinition: (verb) start to do", "cleaned_prediction": "begun", "gt": "comenzado"}, {"input_prompt": "Input: reliability\nOutput:", "test_query": "reliability", "prediction": "reliability\n### reliability analysis\nreliability analysis", "cleaned_prediction": "reliability", "gt": "fiabilidad"}, {"input_prompt": "Input: titled\nOutput:", "test_query": "titled", "prediction": "titled\ndefinition: (of a person) having", "cleaned_prediction": "titled", "gt": "titulado"}, {"input_prompt": "Input: lover\nOutput:", "test_query": "lover", "prediction": "a romantic relationship between two people, often involving physical", "cleaned_prediction": "a romantic relationship between two people, often involving physical", "gt": "amante"}, {"input_prompt": "Input: cyclone\nOutput:", "test_query": "cyclone", "prediction": "'cyclone' is a type of storm", "cleaned_prediction": "'cyclone' is a type of storm", "gt": "cicl\u00f3n"}, {"input_prompt": "Input: deal\nOutput:", "test_query": "deal", "prediction": "a deal of cards is a package of cards given", "cleaned_prediction": "a deal of cards is a package of cards given", "gt": "trato"}, {"input_prompt": "Input: table\nOutput:", "test_query": "table", "prediction": "table\ntask: implement a function that takes a", "cleaned_prediction": "table", "gt": "mesa"}, {"input_prompt": "Input: bring\nOutput:", "test_query": "bring", "prediction": "bring\ninput: brin\noutput: br", "cleaned_prediction": "bring", "gt": "traer"}, {"input_prompt": "Input: falling\nOutput:", "test_query": "falling", "prediction": "falling\ninput: falling down\noutput: falling", "cleaned_prediction": "falling", "gt": "cayendo"}, {"input_prompt": "Input: overview\nOutput:", "test_query": "overview", "prediction": "overview\noverview of the project\nthe project aims", "cleaned_prediction": "overview", "gt": "resumen"}, {"input_prompt": "Input: workers\nOutput:", "test_query": "workers", "prediction": "workers\ninput: workers\noutput: workers", "cleaned_prediction": "workers", "gt": "trabajadores"}, {"input_prompt": "Input: roller\nOutput:", "test_query": "roller", "prediction": "roller\nauto suggestion: roller skate roller coaster", "cleaned_prediction": "roller", "gt": "rodillo"}, {"input_prompt": "Input: nominator\nOutput:", "test_query": "nominator", "prediction": "1/3\ninput: denominator\noutput", "cleaned_prediction": "1/3", "gt": "nominador"}, {"input_prompt": "Input: serious\nOutput:", "test_query": "serious", "prediction": "serious\ndefinition: (adjective) not joking", "cleaned_prediction": "serious", "gt": "serio"}, {"input_prompt": "Input: success\nOutput:", "test_query": "success", "prediction": "1\ninput: failure\noutput:", "cleaned_prediction": "1", "gt": "\u00e9xito"}, {"input_prompt": "Input: week\nOutput:", "test_query": "week", "prediction": "\"week: \\n1. monday\\n2", "cleaned_prediction": "\"week: \\n1. monday\\n2", "gt": "semana"}, {"input_prompt": "Input: ussr\nOutput:", "test_query": "ussr", "prediction": "the soviet union, officially known as the union", "cleaned_prediction": "the soviet union, officially known as the union", "gt": "URSS (Uni\u00f3n de Rep\u00fablicas Socialistas Sovi\u00e9ticas"}, {"input_prompt": "Input: feat\nOutput:", "test_query": "feat", "prediction": "feat\ndescription: feature name\n---\ninput:", "cleaned_prediction": "feat", "gt": "haza\u00f1a"}, {"input_prompt": "Input: cross\nOutput:", "test_query": "cross", "prediction": "cross\n================\n\n### description\n\nthis function takes", "cleaned_prediction": "cross", "gt": "cruz"}, {"input_prompt": "Input: blocked\nOutput:", "test_query": "blocked", "prediction": "blocked\n\ninput: abc\noutput: abc", "cleaned_prediction": "blocked", "gt": "bloqueado"}, {"input_prompt": "Input: complaint\nOutput:", "test_query": "complaint", "prediction": "complaint\ninput: grievance\noutput: griev", "cleaned_prediction": "complaint", "gt": "queja"}, {"input_prompt": "Input: pan\nOutput:", "test_query": "pan", "prediction": "pan\ninput: nan\noutput: nan", "cleaned_prediction": "pan", "gt": "sart\u00e9n"}, {"input_prompt": "Input: photo\nOutput:", "test_query": "photo", "prediction": "photo with a subtle blur effect\ndescription: this", "cleaned_prediction": "photo with a subtle blur effect", "gt": "foto"}, {"input_prompt": "Input: like\nOutput:", "test_query": "like", "prediction": "like\ninput: love\noutput: love", "cleaned_prediction": "like", "gt": "gusta"}, {"input_prompt": "Input: harbour\nOutput:", "test_query": "harbour", "prediction": "harbour\n\ninput: live\noutput: evil", "cleaned_prediction": "harbour", "gt": "puerto"}, {"input_prompt": "Input: super\nOutput:", "test_query": "super", "prediction": "super\nexplanation: the string \"super\" has", "cleaned_prediction": "super", "gt": "s\u00faper"}, {"input_prompt": "Input: organisation\nOutput:", "test_query": "organisation", "prediction": "organisation\na non-profit organization is a type of", "cleaned_prediction": "organisation", "gt": "organizaci\u00f3n"}, {"input_prompt": "Input: sentenced\nOutput:", "test_query": "sentenced", "prediction": "sentenced\ninput: sentenced\noutput: sentenced", "cleaned_prediction": "sentenced", "gt": "sentenciado"}, {"input_prompt": "Input: prisoners\nOutput:", "test_query": "prisoners", "prediction": "prisoners\n\nexplanation: the function takes a list of", "cleaned_prediction": "prisoners", "gt": "prisioneros"}, {"input_prompt": "Input: sending\nOutput:", "test_query": "sending", "prediction": "receiving\ndifference: the main difference between sending and", "cleaned_prediction": "receiving", "gt": "enviando"}, {"input_prompt": "Input: riding\nOutput:", "test_query": "riding", "prediction": "riding\nresult: the word \"riding\" is", "cleaned_prediction": "riding", "gt": "montar"}, {"input_prompt": "Input: changing\nOutput:", "test_query": "changing", "prediction": "changing\ncorrected output: \n```\ndef", "cleaned_prediction": "changing", "gt": "cambiando"}, {"input_prompt": "Input: protect\nOutput:", "test_query": "protect", "prediction": "protect\ninput: protect\noutput: protect", "cleaned_prediction": "protect", "gt": "proteger"}, {"input_prompt": "Input: located\nOutput:", "test_query": "located", "prediction": "located\nduration: 0.0015", "cleaned_prediction": "located", "gt": "ubicado"}, {"input_prompt": "Input: burn\nOutput:", "test_query": "burn", "prediction": "burn\nburn\nburn\nburn\nburn", "cleaned_prediction": "burn", "gt": "quemar"}, {"input_prompt": "Input: batting\nOutput:", "test_query": "batting", "prediction": "batting\ninput: batting\noutput: batting", "cleaned_prediction": "batting", "gt": "bateo"}, {"input_prompt": "Input: products\nOutput:", "test_query": "products", "prediction": "product\nexplanation: the first item in the list", "cleaned_prediction": "product", "gt": "productos"}, {"input_prompt": "Input: reserves\nOutput:", "test_query": "reserves", "prediction": "reserve\ntransliteration: rezerva\ndescription", "cleaned_prediction": "reserve", "gt": "reservas"}, {"input_prompt": "Input: difficulty\nOutput:", "test_query": "difficulty", "prediction": "a string of the form \"difficulty: 1", "cleaned_prediction": "a string of the form \"difficulty: 1", "gt": "dificultad"}, {"input_prompt": "Input: vision\nOutput:", "test_query": "vision", "prediction": "vision\nmodel type: generative\nmodel dataset", "cleaned_prediction": "vision", "gt": "visi\u00f3n"}, {"input_prompt": "Input: champion\nOutput:", "test_query": "champion", "prediction": "- the champion is the highest rank in the", "cleaned_prediction": "- the champion is the highest rank in the", "gt": "campe\u00f3n"}, {"input_prompt": "Input: cemetery\nOutput:", "test_query": "cemetery", "prediction": "(a) a cemetery is a place where the", "cleaned_prediction": "(a) a cemetery is a place where the", "gt": "cementerio"}, {"input_prompt": "Input: defended\nOutput:", "test_query": "defended", "prediction": "defended\nword: defended\ndefinition: past tense", "cleaned_prediction": "defended", "gt": "defendido"}, {"input_prompt": "Input: distinguished\nOutput:", "test_query": "distinguished", "prediction": "distinguished\ninput: dignified\noutput: dign", "cleaned_prediction": "distinguished", "gt": "distinguido"}, {"input_prompt": "Input: discussing\nOutput:", "test_query": "discussing", "prediction": "discussion\ndiscussion refers to the act of talking about", "cleaned_prediction": "discussion", "gt": "discutiendo"}, {"input_prompt": "Input: peaked\nOutput:", "test_query": "peaked", "prediction": "peaked\ndiscussion: this word is a palindrome,", "cleaned_prediction": "peaked", "gt": "alcanzado"}, {"input_prompt": "Input: prague\nOutput:", "test_query": "prague", "prediction": "prague\ninput: prague\noutput: prague", "cleaned_prediction": "prague", "gt": "Praga"}, {"input_prompt": "Input: engineers\nOutput:", "test_query": "engineers", "prediction": "engineers\ninput: linguists\noutput: lingu", "cleaned_prediction": "engineers", "gt": "ingenieros"}, {"input_prompt": "Input: reasons\nOutput:", "test_query": "reasons", "prediction": "reasons\n---\ninput: reasons\noutput: reasons", "cleaned_prediction": "reasons", "gt": "razones"}, {"input_prompt": "Input: temporary\nOutput:", "test_query": "temporary", "prediction": "permanent\ndifficulty: 3\nproblem: given", "cleaned_prediction": "permanent", "gt": "temporal"}, {"input_prompt": "Input: must\nOutput:", "test_query": "must", "prediction": "must\ndefinition: (verb) be or become", "cleaned_prediction": "must", "gt": "debe"}, {"input_prompt": "Input: especially\nOutput:", "test_query": "especially", "prediction": "especially\ndefinition: (adv.) to a greater", "cleaned_prediction": "especially", "gt": "especialmente"}, {"input_prompt": "Input: unofficial\nOutput:", "test_query": "unofficial", "prediction": "unofficial\nthe input and output of the function are", "cleaned_prediction": "unofficial", "gt": "no oficial"}, {"input_prompt": "Input: killing\nOutput:", "test_query": "killing", "prediction": "\"killing\"\nexplanation: the word \"k", "cleaned_prediction": "\"killing\"", "gt": "asesinato"}, {"input_prompt": "Input: august\nOutput:", "test_query": "august", "prediction": "august\n\ninput: january\noutput: january", "cleaned_prediction": "august", "gt": "agosto"}, {"input_prompt": "Input: centres\nOutput:", "test_query": "centres", "prediction": "a list of lists of integers representing the indices of", "cleaned_prediction": "a list of lists of integers representing the indices of", "gt": "centros"}, {"input_prompt": "Input: renamed\nOutput:", "test_query": "renamed", "prediction": "renamed\nthe name of a file, directory,", "cleaned_prediction": "renamed", "gt": "renombrado"}, {"input_prompt": "Input: through\nOutput:", "test_query": "through", "prediction": "through\n====================================================================================================\n# problem\ncreate a", "cleaned_prediction": "through", "gt": "a trav\u00e9s de"}, {"input_prompt": "Input: meeting\nOutput:", "test_query": "meeting", "prediction": "meeting room\ninput: room\noutput: room", "cleaned_prediction": "meeting room", "gt": "reuni\u00f3n"}, {"input_prompt": "Input: ninth\nOutput:", "test_query": "ninth", "prediction": "9\n\nexplanation: the integer is 9", "cleaned_prediction": "9", "gt": "noveno"}, {"input_prompt": "Input: him\nOutput:", "test_query": "him", "prediction": "him\ninput: hims\noutput: him", "cleaned_prediction": "him", "gt": "\u00e9l"}, {"input_prompt": "Input: mission\nOutput:", "test_query": "mission", "prediction": "'mission: impossible'\ninput: hello\noutput", "cleaned_prediction": "'mission: impossible'", "gt": "misi\u00f3n"}, {"input_prompt": "Input: developed\nOutput:", "test_query": "developed", "prediction": "developed\nerror: no errors\ntime:", "cleaned_prediction": "developed", "gt": "desarrollado"}, {"input_prompt": "Input: injury\nOutput:", "test_query": "injury", "prediction": "injury\nsynonyms: hurt, wound, damage", "cleaned_prediction": "injury", "gt": "lesi\u00f3n"}, {"input_prompt": "Input: race\nOutput:", "test_query": "race", "prediction": "race\n================\n\n### race conditions\n\na race", "cleaned_prediction": "race", "gt": "carrera"}, {"input_prompt": "Input: flows\nOutput:", "test_query": "flows", "prediction": "flows\nobjectives: minimize the maximum flow in", "cleaned_prediction": "flows", "gt": "flujos"}, {"input_prompt": "Input: bowl\nOutput:", "test_query": "bowl", "prediction": "a bowl is a container made of a material such", "cleaned_prediction": "a bowl is a container made of a material such", "gt": "cuenco"}, {"input_prompt": "Input: screenplay\nOutput:", "test_query": "screenplay", "prediction": "story summary\nhere is a summary of the screenplay", "cleaned_prediction": "story summary", "gt": "guion"}, {"input_prompt": "Input: field\nOutput:", "test_query": "field", "prediction": "field\n fixture 1:\n  - input:", "cleaned_prediction": "field", "gt": "campo"}, {"input_prompt": "Input: dome\nOutput:", "test_query": "dome", "prediction": "dome\ncorrected output: dome\nexplanation:", "cleaned_prediction": "dome", "gt": "c\u00fapula"}, {"input_prompt": "Input: tax\nOutput:", "test_query": "tax", "prediction": "\"tax\"\ninput: face\noutput:", "cleaned_prediction": "\"tax\"", "gt": "impuesto"}, {"input_prompt": "Input: rocket\nOutput:", "test_query": "rocket", "prediction": "'rocket is a vehicle that uses rocket propulsion.", "cleaned_prediction": "'rocket is a vehicle that uses rocket propulsion.", "gt": "cohete"}, {"input_prompt": "Input: sustainable\nOutput:", "test_query": "sustainable", "prediction": "sustainable\ndefinition: able to be maintained at a", "cleaned_prediction": "sustainable", "gt": "sostenible"}, {"input_prompt": "Input: fled\nOutput:", "test_query": "fled", "prediction": "fled\nresult: correct\n\ninput: flee", "cleaned_prediction": "fled", "gt": "huy\u00f3"}, {"input_prompt": "Input: parade\nOutput:", "test_query": "parade", "prediction": "parade (parade is a palindrome)\ninput:", "cleaned_prediction": "parade (parade is a palindrome)", "gt": "desfile"}, {"input_prompt": "Input: duke\nOutput:", "test_query": "duke", "prediction": "duke\nduke is a name that is commonly", "cleaned_prediction": "duke", "gt": "duque"}, {"input_prompt": "Input: blow\nOutput:", "test_query": "blow", "prediction": "blow\ninput: low\noutput: low", "cleaned_prediction": "blow", "gt": "soplar"}, {"input_prompt": "Input: episode\nOutput:", "test_query": "episode", "prediction": "episode\ninput: episode\noutput: episode", "cleaned_prediction": "episode", "gt": "episodio"}, {"input_prompt": "Input: policy\nOutput:", "test_query": "policy", "prediction": "policy\nweight: 1.0\nhidden", "cleaned_prediction": "policy", "gt": "pol\u00edtica"}, {"input_prompt": "Input: severely\nOutput:", "test_query": "severely", "prediction": "severely\ninput: severely\noutput: severely", "cleaned_prediction": "severely", "gt": "severamente"}, {"input_prompt": "Input: listings\nOutput:", "test_query": "listings", "prediction": "listings\nsteps:\n- create a function `get", "cleaned_prediction": "listings", "gt": "listados"}, {"input_prompt": "Input: oil\nOutput:", "test_query": "oil", "prediction": "oil\nsteps:\n1. if the input is", "cleaned_prediction": "oil", "gt": "aceite"}, {"input_prompt": "Input: visiting\nOutput:", "test_query": "visiting", "prediction": "visiting\ndefinition: (present participle verb)", "cleaned_prediction": "visiting", "gt": "visitando"}, {"input_prompt": "Input: odd\nOutput:", "test_query": "odd", "prediction": "odd\n\ninput: even\noutput: even", "cleaned_prediction": "odd", "gt": "extra\u00f1o"}, {"input_prompt": "Input: civilians\nOutput:", "test_query": "civilians", "prediction": "civilians\ntasks:\n- civilian\n- soldier", "cleaned_prediction": "civilians", "gt": "civiles"}, {"input_prompt": "Input: season\nOutput:", "test_query": "season", "prediction": "a list of 12 months in a year,", "cleaned_prediction": "a list of 12 months in a year,", "gt": "estaci\u00f3n"}, {"input_prompt": "Input: stability\nOutput:", "test_query": "stability", "prediction": "stability\ntopics: stability\nthe concept of stability", "cleaned_prediction": "stability", "gt": "estabilidad"}, {"input_prompt": "Input: speaking\nOutput:", "test_query": "speaking", "prediction": "speaking\ninput: speaking\noutput: speaking", "cleaned_prediction": "speaking", "gt": "hablando"}, {"input_prompt": "Input: majority\nOutput:", "test_query": "majority", "prediction": "major\nexplanation: the word \"major\" is", "cleaned_prediction": "major", "gt": "mayor\u00eda"}, {"input_prompt": "Input: perhaps\nOutput:", "test_query": "perhaps", "prediction": "perhaps\ndefinition: (adverb) in a", "cleaned_prediction": "perhaps", "gt": "quiz\u00e1s"}, {"input_prompt": "Input: southwestern\nOutput:", "test_query": "southwestern", "prediction": "'the southwestern united states is a region of the", "cleaned_prediction": "'the southwestern united states is a region of the", "gt": "suroeste"}, {"input_prompt": "Input: amazing\nOutput:", "test_query": "amazing", "prediction": "amazing!\ninput: wow\noutput: wow!", "cleaned_prediction": "amazing!", "gt": "incre\u00edble"}, {"input_prompt": "Input: student\nOutput:", "test_query": "student", "prediction": "\"student\"\ninput: teacher\noutput: \"", "cleaned_prediction": "\"student\"", "gt": "estudiante"}, {"input_prompt": "Input: finals\nOutput:", "test_query": "finals", "prediction": "final\nexplanation: the string \"finals\"", "cleaned_prediction": "final", "gt": "finales"}, {"input_prompt": "Input: observer\nOutput:", "test_query": "observer", "prediction": "observer\ntasks:\n- write a python program to", "cleaned_prediction": "observer", "gt": "observador"}, {"input_prompt": "Input: firing\nOutput:", "test_query": "firing", "prediction": "firing\n====\n\n## step 1: understand", "cleaned_prediction": "firing", "gt": "despido"}, {"input_prompt": "Input: bill\nOutput:", "test_query": "bill", "prediction": "{\"bill\": 1, \"tip\":", "cleaned_prediction": "{\"bill\": 1, \"tip\":", "gt": "factura"}, {"input_prompt": "Input: whole\nOutput:", "test_query": "whole", "prediction": "whole\nx = 5\nprint(x)", "cleaned_prediction": "whole", "gt": "entero"}, {"input_prompt": "Input: starring\nOutput:", "test_query": "starring", "prediction": "starring\ninput: starring\noutput: st", "cleaned_prediction": "starring", "gt": "protagonizado por"}, {"input_prompt": "Input: sweden\nOutput:", "test_query": "sweden", "prediction": "sweden\ninput: switzerland\noutput: switzerland", "cleaned_prediction": "sweden", "gt": "suecia"}, {"input_prompt": "Input: regularly\nOutput:", "test_query": "regularly", "prediction": "regularly\ndefinition: (adverb) in a", "cleaned_prediction": "regularly", "gt": "regularmente"}, {"input_prompt": "Input: copies\nOutput:", "test_query": "copies", "prediction": "copies\ninput: copy\noutput: copy", "cleaned_prediction": "copies", "gt": "copias"}, {"input_prompt": "Input: happens\nOutput:", "test_query": "happens", "prediction": "happens\ndiffence: \n\nthis problem requires the", "cleaned_prediction": "happens", "gt": "sucede"}, {"input_prompt": "Input: presidency\nOutput:", "test_query": "presidency", "prediction": "presidency\n================\n**presidency**", "cleaned_prediction": "presidency", "gt": "presidencia"}, {"input_prompt": "Input: kids\nOutput:", "test_query": "kids", "prediction": "kids\nexplanation: the input string \"kids\"", "cleaned_prediction": "kids", "gt": "ni\u00f1os"}, {"input_prompt": "Input: possibility\nOutput:", "test_query": "possibility", "prediction": "possibility\ninput: impossibility\noutput: imposs", "cleaned_prediction": "possibility", "gt": "posibilidad"}, {"input_prompt": "Input: stuff\nOutput:", "test_query": "stuff", "prediction": "stuff\nthis is a description of a new command", "cleaned_prediction": "stuff", "gt": "cosas"}, {"input_prompt": "Input: membership\nOutput:", "test_query": "membership", "prediction": "membership\ninput: non-membership\noutput:", "cleaned_prediction": "membership", "gt": "membres\u00eda"}, {"input_prompt": "Input: cyprus\nOutput:", "test_query": "cyprus", "prediction": "cyprus\n\ninput: greece\noutput: greece", "cleaned_prediction": "cyprus", "gt": "Chipre"}, {"input_prompt": "Input: engine\nOutput:", "test_query": "engine", "prediction": "engine\n---\ninput: engine\noutput: engine", "cleaned_prediction": "engine", "gt": "motor"}, {"input_prompt": "Input: custom\nOutput:", "test_query": "custom", "prediction": "custom\nduration: 1m 10s", "cleaned_prediction": "custom", "gt": "costumbre"}, {"input_prompt": "Input: cinema\nOutput:", "test_query": "cinema", "prediction": "5\n\ninput: movie\noutput:", "cleaned_prediction": "5", "gt": "cine"}, {"input_prompt": "Input: dynasty\nOutput:", "test_query": "dynasty", "prediction": "dynasty\ninput: dynasty\noutput: dynasty", "cleaned_prediction": "dynasty", "gt": "dinast\u00eda"}, {"input_prompt": "Input: day\nOutput:", "test_query": "day", "prediction": "{\n  'monday': 0,\n  '", "cleaned_prediction": "{", "gt": "d\u00eda"}, {"input_prompt": "Input: occurs\nOutput:", "test_query": "occurs", "prediction": "occurs\ninput: ccc\noutput: c", "cleaned_prediction": "occurs", "gt": "ocurre"}, {"input_prompt": "Input: boarding\nOutput:", "test_query": "boarding", "prediction": "boarding pass\nexplanation: the input \"boarding\"", "cleaned_prediction": "boarding pass", "gt": "embarque"}, {"input_prompt": "Input: reader\nOutput:", "test_query": "reader", "prediction": "writer\n\nthe `read_from_file` function reads", "cleaned_prediction": "writer", "gt": "lector"}, {"input_prompt": "Input: rise\nOutput:", "test_query": "rise", "prediction": "rise\n================\n### description\n\nrise is", "cleaned_prediction": "rise", "gt": "subir"}, {"input_prompt": "Input: prose\nOutput:", "test_query": "prose", "prediction": "poetry\nthe art of transmutation: turning pro", "cleaned_prediction": "poetry", "gt": "prosa"}, {"input_prompt": "Input: educational\nOutput:", "test_query": "educational", "prediction": "educational\nthe educational system in a country is a", "cleaned_prediction": "educational", "gt": "educativo"}, {"input_prompt": "Input: illustrate\nOutput:", "test_query": "illustrate", "prediction": "illustrate\ncorrected: illustrate\nthe", "cleaned_prediction": "illustrate", "gt": "ilustrar"}, {"input_prompt": "Input: spy\nOutput:", "test_query": "spy", "prediction": "spy\nexplanation: the input string is the same", "cleaned_prediction": "spy", "gt": "esp\u00eda"}, {"input_prompt": "Input: championship\nOutput:", "test_query": "championship", "prediction": "the world championship\ninput: champions\noutput:", "cleaned_prediction": "the world championship", "gt": "campeonato"}, {"input_prompt": "Input: nice\nOutput:", "test_query": "nice", "prediction": "nice\n\nexplanation: the input string \"nice\"", "cleaned_prediction": "nice", "gt": "agradable"}, {"input_prompt": "Input: possible\nOutput:", "test_query": "possible", "prediction": "1\n\ninput: impossible\noutput:", "cleaned_prediction": "1", "gt": "posible"}, {"input_prompt": "Input: according\nOutput:", "test_query": "according", "prediction": "according\ninput: according to\noutput: according", "cleaned_prediction": "according", "gt": "seg\u00fan"}, {"input_prompt": "Input: charges\nOutput:", "test_query": "charges", "prediction": "charges\npublished by oxford university press on behalf of", "cleaned_prediction": "charges", "gt": "cargos"}, {"input_prompt": "Input: existed\nOutput:", "test_query": "existed", "prediction": "existed\nduration: 0 ms\nsuccess:", "cleaned_prediction": "existed", "gt": "existi\u00f3"}, {"input_prompt": "Input: ordinary\nOutput:", "test_query": "ordinary", "prediction": "extraordinary\ninput: ordinary\noutput: extraordinary", "cleaned_prediction": "extraordinary", "gt": "ordinario"}, {"input_prompt": "Input: pilots\nOutput:", "test_query": "pilots", "prediction": "pilots\ninput: pilots\noutput: pilots", "cleaned_prediction": "pilots", "gt": "pilotos"}, {"input_prompt": "Input: waters\nOutput:", "test_query": "waters", "prediction": "\"water\"\ninput: \"water\"\noutput:", "cleaned_prediction": "\"water\"", "gt": "aguas"}, {"input_prompt": "Input: allegations\nOutput:", "test_query": "allegations", "prediction": "sexual\nsexual allegations are serious and can have", "cleaned_prediction": "sexual", "gt": "alegaciones"}, {"input_prompt": "Input: dean\nOutput:", "test_query": "dean", "prediction": "dean\ncorrected input: dean\noutput:", "cleaned_prediction": "dean", "gt": "decano"}, {"input_prompt": "Input: monster\nOutput:", "test_query": "monster", "prediction": "\"the monster is scary.\"\nexplanation: the function", "cleaned_prediction": "\"the monster is scary.\"", "gt": "monstruo"}, {"input_prompt": "Input: locally\nOutput:", "test_query": "locally", "prediction": "locally\nversions:\n    - locally\n        -", "cleaned_prediction": "locally", "gt": "localmente"}, {"input_prompt": "Input: armed\nOutput:", "test_query": "armed", "prediction": "armed\ndefinition: equipped with weapons or with", "cleaned_prediction": "armed", "gt": "armado"}, {"input_prompt": "Input: differences\nOutput:", "test_query": "differences", "prediction": "differences\nfailed to predict:\n    -1,", "cleaned_prediction": "differences", "gt": "diferencias"}, {"input_prompt": "Input: debt\nOutput:", "test_query": "debt", "prediction": "debt\ninput: loan\noutput: loan", "cleaned_prediction": "debt", "gt": "deuda"}, {"input_prompt": "Input: afghanistan\nOutput:", "test_query": "afghanistan", "prediction": "afghanistan is a landlocked country located", "cleaned_prediction": "afghanistan is a landlocked country located", "gt": "Afganist\u00e1n"}, {"input_prompt": "Input: faces\nOutput:", "test_query": "faces", "prediction": "<p>face 1: 1,", "cleaned_prediction": "<p>face 1: 1,", "gt": "caras"}, {"input_prompt": "Input: heat\nOutput:", "test_query": "heat", "prediction": "heat\ntypes of inputs: physical quantity\nfunction", "cleaned_prediction": "heat", "gt": "calor"}, {"input_prompt": "Input: investigate\nOutput:", "test_query": "investigate", "prediction": "investigate\n```\nimport { createhash } from", "cleaned_prediction": "investigate", "gt": "investigar"}, {"input_prompt": "Input: newspapers\nOutput:", "test_query": "newspapers", "prediction": "a summary of the most recent news articles from the", "cleaned_prediction": "a summary of the most recent news articles from the", "gt": "peri\u00f3dicos"}, {"input_prompt": "Input: length\nOutput:", "test_query": "length", "prediction": "length squared\n# example:\ninput: 5", "cleaned_prediction": "length squared", "gt": "longitud"}, {"input_prompt": "Input: peace\nOutput:", "test_query": "peace", "prediction": "peace\ninput: peace\noutput: peace", "cleaned_prediction": "peace", "gt": "paz"}, {"input_prompt": "Input: gone\nOutput:", "test_query": "gone", "prediction": "gone\ndiff: \n\nthis problem is too easy", "cleaned_prediction": "gone", "gt": "ido"}, {"input_prompt": "Input: graduating\nOutput:", "test_query": "graduating", "prediction": "congratulations on your graduation! you must be so proud", "cleaned_prediction": "congratulations on your graduation! you must be so proud", "gt": "graduando"}, {"input_prompt": "Input: who\nOutput:", "test_query": "who", "prediction": "\"who\" is not a valid command. please", "cleaned_prediction": "\"who\" is not a valid command. please", "gt": "quien"}, {"input_prompt": "Input: journalism\nOutput:", "test_query": "journalism", "prediction": "storytelling\nat the heart of journalism is a simple", "cleaned_prediction": "storytelling", "gt": "periodismo"}, {"input_prompt": "Input: hello\nOutput:", "test_query": "hello", "prediction": "5\n\nexplanation: the string \"hello\"", "cleaned_prediction": "5", "gt": "hola"}, {"input_prompt": "Input: recall\nOutput:", "test_query": "recall", "prediction": "recall\nerror: the input \"recall\" is", "cleaned_prediction": "recall", "gt": "recordar"}, {"input_prompt": "Input: hoping\nOutput:", "test_query": "hoping", "prediction": "hoping\ndefinition: present participle of hope", "cleaned_prediction": "hoping", "gt": "esperando"}, {"input_prompt": "Input: playoff\nOutput:", "test_query": "playoff", "prediction": "the 2020 nba playoffs, also known as", "cleaned_prediction": "the 2020 nba playoffs, also known as", "gt": "eliminatoria"}, {"input_prompt": "Input: charge\nOutput:", "test_query": "charge", "prediction": "charge\nmodel type: sequence-to-sequence", "cleaned_prediction": "charge", "gt": "cargar"}, {"input_prompt": "Input: parties\nOutput:", "test_query": "parties", "prediction": "party\ninput: party\noutput: parties", "cleaned_prediction": "party", "gt": "fiestas"}, {"input_prompt": "Input: innocent\nOutput:", "test_query": "innocent", "prediction": "innocent\noutput (capitalized):", "cleaned_prediction": "innocent", "gt": "inocente"}, {"input_prompt": "Input: anywhere\nOutput:", "test_query": "anywhere", "prediction": "anywhere\nthe problem is not well-defined. the", "cleaned_prediction": "anywhere", "gt": "en cualquier lugar"}, {"input_prompt": "Input: kilometers\nOutput:", "test_query": "kilometers", "prediction": "miles\n1 kilometer = 0.621", "cleaned_prediction": "miles", "gt": "kil\u00f3metros"}, {"input_prompt": "Input: napoleon\nOutput:", "test_query": "napoleon", "prediction": "\"napoleon\"\nexplanation: the string is", "cleaned_prediction": "\"napoleon\"", "gt": "Napole\u00f3n"}, {"input_prompt": "Input: marsh\nOutput:", "test_query": "marsh", "prediction": "marsh\noutput: marsh\noutput: mar", "cleaned_prediction": "marsh", "gt": "pantano"}, {"input_prompt": "Input: greek\nOutput:", "test_query": "greek", "prediction": "\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c4\u03b7\u03c2 \u03b5\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ae\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2", "cleaned_prediction": "\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c4\u03b7\u03c2 \u03b5\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ae\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2", "gt": "griego"}, {"input_prompt": "Input: max\nOutput:", "test_query": "max", "prediction": "1\n\ninput: min\noutput: -", "cleaned_prediction": "1", "gt": "m\u00e1ximo"}]}