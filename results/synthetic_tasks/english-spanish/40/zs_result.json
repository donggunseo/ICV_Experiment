{"score": {"exact_match": 0.0}, "result": [{"input_prompt": "Input: awareness\nOutput:", "test_query": "awareness", "prediction": "awareness\ncategory: awareness\ntopic: awareness", "cleaned_prediction": "awareness", "gt": "conciencia"}, {"input_prompt": "Input: discovery\nOutput:", "test_query": "discovery", "prediction": "discovery\ncategory: term\ncategory: concept", "cleaned_prediction": "discovery", "gt": "descubrimiento"}, {"input_prompt": "Input: disk\nOutput:", "test_query": "disk", "prediction": "disk\nerror: disk\n\ninput: disk", "cleaned_prediction": "disk", "gt": "disco"}, {"input_prompt": "Input: rice\nOutput:", "test_query": "rice", "prediction": "rice\n\ninput: apple\noutput: apple", "cleaned_prediction": "rice", "gt": "arroz"}, {"input_prompt": "Input: strength\nOutput:", "test_query": "strength", "prediction": "strength\nback-translation: strength\nedit distance", "cleaned_prediction": "strength", "gt": "fuerza"}, {"input_prompt": "Input: cattle\nOutput:", "test_query": "cattle", "prediction": "\"beetle\"\nexplanation: the anagrams", "cleaned_prediction": "\"beetle\"", "gt": "ganado"}, {"input_prompt": "Input: achieved\nOutput:", "test_query": "achieved", "prediction": "achieved\ndefinition: (verb) get or achieve", "cleaned_prediction": "achieved", "gt": "logrado"}, {"input_prompt": "Input: guys\nOutput:", "test_query": "guys", "prediction": "\"guys\" is a term used to refer", "cleaned_prediction": "\"guys\" is a term used to refer", "gt": "chicos"}, {"input_prompt": "Input: require\nOutput:", "test_query": "require", "prediction": "require\ntest: require(\"module\").createrequire", "cleaned_prediction": "require", "gt": "requerir"}, {"input_prompt": "Input: speakers\nOutput:", "test_query": "speakers", "prediction": "speakers\nspeaker: the speaker is a device that", "cleaned_prediction": "speakers", "gt": "altavoces"}, {"input_prompt": "Input: promoted\nOutput:", "test_query": "promoted", "prediction": "promoted\nexplanation: the word \"promoted", "cleaned_prediction": "promoted", "gt": "promovido"}, {"input_prompt": "Input: retired\nOutput:", "test_query": "retired", "prediction": "you have been retired for 1 years.", "cleaned_prediction": "you have been retired for 1 years.", "gt": "jubilado"}, {"input_prompt": "Input: drum\nOutput:", "test_query": "drum", "prediction": "drum (not a palindrome)\na palindrome is a", "cleaned_prediction": "drum (not a palindrome)", "gt": "tambor"}, {"input_prompt": "Input: dissolved\nOutput:", "test_query": "dissolved", "prediction": "solid\nchange: phase change\nchange occurs when", "cleaned_prediction": "solid", "gt": "disuelto"}, {"input_prompt": "Input: closure\nOutput:", "test_query": "closure", "prediction": "closure\ntasks for the closure\n1.", "cleaned_prediction": "closure", "gt": "cierre"}, {"input_prompt": "Input: industry\nOutput:", "test_query": "industry", "prediction": "industry\nindustry is a term used to describe a", "cleaned_prediction": "industry", "gt": "industria"}, {"input_prompt": "Input: letter\nOutput:", "test_query": "letter", "prediction": "```\ntraceback (most_string):", "cleaned_prediction": "```", "gt": "carta"}, {"input_prompt": "Input: bath\nOutput:", "test_query": "bath", "prediction": "bath\nthe word \"bath\" is a", "cleaned_prediction": "bath", "gt": "ba\u00f1o"}, {"input_prompt": "Input: reviewing\nOutput:", "test_query": "reviewing", "prediction": "review\nspelling: review\nhomophone:", "cleaned_prediction": "review", "gt": "repasando"}, {"input_prompt": "Input: suggestion\nOutput:", "test_query": "suggestion", "prediction": "suggestion\ninput: suggestions\noutput: suggestions", "cleaned_prediction": "suggestion", "gt": "sugerencia"}, {"input_prompt": "Input: letters\nOutput:", "test_query": "letters", "prediction": "encrypted letters\nrules:\n- if the letter is", "cleaned_prediction": "encrypted letters", "gt": "cartas"}, {"input_prompt": "Input: watched\nOutput:", "test_query": "watched", "prediction": "watched\ndefinition: past tense of watch\n\nexample", "cleaned_prediction": "watched", "gt": "visto"}, {"input_prompt": "Input: orders\nOutput:", "test_query": "orders", "prediction": "orders\nexplanation: this function takes a list of", "cleaned_prediction": "orders", "gt": "\u00f3rdenes"}, {"input_prompt": "Input: increases\nOutput:", "test_query": "increases", "prediction": "increases\ncorrected output: increase\n\ninput:", "cleaned_prediction": "increases", "gt": "aumenta"}, {"input_prompt": "Input: newfoundland\nOutput:", "test_query": "newfoundland", "prediction": "the province of newfoundland and labrador is located on the", "cleaned_prediction": "the province of newfoundland and labrador is located on the", "gt": "Terranova"}, {"input_prompt": "Input: thin\nOutput:", "test_query": "thin", "prediction": "thin\ndescription: adjective describing something that is", "cleaned_prediction": "thin", "gt": "delgado"}, {"input_prompt": "Input: drinking\nOutput:", "test_query": "drinking", "prediction": "drinking water\ndrinking water is essential for maintaining", "cleaned_prediction": "drinking water", "gt": "bebiendo"}, {"input_prompt": "Input: leon\nOutput:", "test_query": "leon", "prediction": "leon is a 5 letter word\nleon", "cleaned_prediction": "leon is a 5 letter word", "gt": "le\u00f3n"}, {"input_prompt": "Input: rider\nOutput:", "test_query": "rider", "prediction": "rider\nexplanation: the word \"rider\"", "cleaned_prediction": "rider", "gt": "jinete"}, {"input_prompt": "Input: february\nOutput:", "test_query": "february", "prediction": "february\n\ninput: march\noutput: march", "cleaned_prediction": "february", "gt": "febrero"}, {"input_prompt": "Input: back\nOutput:", "test_query": "back", "prediction": "back\ndefinition: a word that is spelled the", "cleaned_prediction": "back", "gt": "espalda"}, {"input_prompt": "Input: albums\nOutput:", "test_query": "albums", "prediction": "albums\ninput: apples\noutput: apples", "cleaned_prediction": "albums", "gt": "\u00e1lbumes"}, {"input_prompt": "Input: publisher\nOutput:", "test_query": "publisher", "prediction": "# publisher\n\na publisher is a company or", "cleaned_prediction": "# publisher", "gt": "editorial"}, {"input_prompt": "Input: how\nOutput:", "test_query": "how", "prediction": "how do you know?\ninput: what\noutput", "cleaned_prediction": "how do you know?", "gt": "c\u00f3mo"}, {"input_prompt": "Input: driver\nOutput:", "test_query": "driver", "prediction": "driver\ninput: driver\noutput: driver", "cleaned_prediction": "driver", "gt": "conductor"}, {"input_prompt": "Input: reflects\nOutput:", "test_query": "reflects", "prediction": "reflects\n => reflects\n\nexplanation:\nthe word \"", "cleaned_prediction": "reflects", "gt": "refleja"}, {"input_prompt": "Input: putting\nOutput:", "test_query": "putting", "prediction": "putting\ndefinition: the act of inserting something into", "cleaned_prediction": "putting", "gt": "poniendo"}, {"input_prompt": "Input: legs\nOutput:", "test_query": "legs", "prediction": "'legs'\ninput: eyes\noutput: '", "cleaned_prediction": "'legs'", "gt": "piernas"}, {"input_prompt": "Input: hills\nOutput:", "test_query": "hills", "prediction": "hills\ninput: a\noutput: a", "cleaned_prediction": "hills", "gt": "colinas"}, {"input_prompt": "Input: documents\nOutput:", "test_query": "documents", "prediction": "documents\ntasks:\n- create a new document", "cleaned_prediction": "documents", "gt": "documentos"}, {"input_prompt": "Input: exposed\nOutput:", "test_query": "exposed", "prediction": "exposed\nintroduced: 0.0.1", "cleaned_prediction": "exposed", "gt": "expuesto"}, {"input_prompt": "Input: rescued\nOutput:", "test_query": "rescued", "prediction": "rescued\nexplanation: the word \"rescued", "cleaned_prediction": "rescued", "gt": "rescatado"}, {"input_prompt": "Input: his\nOutput:", "test_query": "his", "prediction": "his\ninput: he\noutput: he", "cleaned_prediction": "his", "gt": "su"}, {"input_prompt": "Input: unusual\nOutput:", "test_query": "unusual", "prediction": "unusual\ndefinition: (adjective) not usual", "cleaned_prediction": "unusual", "gt": "inusual"}, {"input_prompt": "Input: diameter\nOutput:", "test_query": "diameter", "prediction": "radius\n# radius = diameter / 2", "cleaned_prediction": "radius", "gt": "di\u00e1metro"}, {"input_prompt": "Input: progress\nOutput:", "test_query": "progress", "prediction": "progress bar\nhow to make a progress bar in", "cleaned_prediction": "progress bar", "gt": "progreso"}, {"input_prompt": "Input: beach\nOutput:", "test_query": "beach", "prediction": "beaches are a popular destination for many people.", "cleaned_prediction": "beaches are a popular destination for many people.", "gt": "playa"}, {"input_prompt": "Input: security\nOutput:", "test_query": "security", "prediction": "security\nexamined: 1 ms\nsecurity", "cleaned_prediction": "security", "gt": "seguridad"}, {"input_prompt": "Input: consistently\nOutput:", "test_query": "consistently", "prediction": "consistently\ndefinition: (adverb) in a", "cleaned_prediction": "consistently", "gt": "consistentemente"}, {"input_prompt": "Input: compared\nOutput:", "test_query": "compared", "prediction": "compared\ndiff: 0\n--- (input", "cleaned_prediction": "compared", "gt": "comparado"}, {"input_prompt": "Input: places\nOutput:", "test_query": "places", "prediction": "places\nexplanation: the input list is already sorted", "cleaned_prediction": "places", "gt": "lugares"}, {"input_prompt": "Input: istanbul\nOutput:", "test_query": "istanbul", "prediction": "istanbul, officially known as constantinople,", "cleaned_prediction": "istanbul, officially known as constantinople,", "gt": "Estambul"}, {"input_prompt": "Input: colonel\nOutput:", "test_query": "colonel", "prediction": "the word \"colonel\" spelled backwards is", "cleaned_prediction": "the word \"colonel\" spelled backwards is", "gt": "coronel"}, {"input_prompt": "Input: strategic\nOutput:", "test_query": "strategic", "prediction": "strategic\ndefinition: relating to or involving long-term", "cleaned_prediction": "strategic", "gt": "estrat\u00e9gico"}, {"input_prompt": "Input: academy\nOutput:", "test_query": "academy", "prediction": "\"the academy awards, popularly known as the", "cleaned_prediction": "\"the academy awards, popularly known as the", "gt": "academia"}, {"input_prompt": "Input: challenge\nOutput:", "test_query": "challenge", "prediction": "\"it is not possible to solve this challenge\"", "cleaned_prediction": "\"it is not possible to solve this challenge\"", "gt": "desaf\u00edo"}, {"input_prompt": "Input: edition\nOutput:", "test_query": "edition", "prediction": "edition\ninput: editions\noutput: editions", "cleaned_prediction": "edition", "gt": "edici\u00f3n"}, {"input_prompt": "Input: sail\nOutput:", "test_query": "sail", "prediction": "sail\ninput: sea\noutput: sea", "cleaned_prediction": "sail", "gt": "navegar"}, {"input_prompt": "Input: turned\nOutput:", "test_query": "turned", "prediction": "turned\ninput: turn\noutput: turn", "cleaned_prediction": "turned", "gt": "girado"}, {"input_prompt": "Input: springs\nOutput:", "test_query": "springs", "prediction": "spring\ninput: springs\noutput: spring", "cleaned_prediction": "spring", "gt": "manantiales"}, {"input_prompt": "Input: boy\nOutput:", "test_query": "boy", "prediction": "\"boy\"\n\ninput: girl\noutput: \"", "cleaned_prediction": "\"boy\"", "gt": "ni\u00f1o"}, {"input_prompt": "Input: lit\nOutput:", "test_query": "lit", "prediction": "lit\nrevision: 2021-03-", "cleaned_prediction": "lit", "gt": "encendido"}, {"input_prompt": "Input: allies\nOutput:", "test_query": "allies", "prediction": "allies\ninput: enemies\noutput: enemies", "cleaned_prediction": "allies", "gt": "aliados"}, {"input_prompt": "Input: wednesday\nOutput:", "test_query": "wednesday", "prediction": "wednesday\n\ninput: friday\noutput: friday", "cleaned_prediction": "wednesday", "gt": "mi\u00e9rcoles"}, {"input_prompt": "Input: appointment\nOutput:", "test_query": "appointment", "prediction": "the appointment is scheduled on 2024-03", "cleaned_prediction": "the appointment is scheduled on 2024-03", "gt": "cita"}, {"input_prompt": "Input: affiliate\nOutput:", "test_query": "affiliate", "prediction": "affiliate marketing\ndefinition: a form of online marketing", "cleaned_prediction": "affiliate marketing", "gt": "afiliado"}, {"input_prompt": "Input: brigade\nOutput:", "test_query": "brigade", "prediction": "a brigade is a military unit.\na brigade is", "cleaned_prediction": "a brigade is a military unit.", "gt": "brigada"}, {"input_prompt": "Input: adds\nOutput:", "test_query": "adds", "prediction": "add\ninput: helloworld\noutput: hello", "cleaned_prediction": "add", "gt": "anuncios"}, {"input_prompt": "Input: daily\nOutput:", "test_query": "daily", "prediction": "daily\nexplanation: the word \"daily\" spelled", "cleaned_prediction": "daily", "gt": "diario"}, {"input_prompt": "Input: voivodeship\nOutput:", "test_query": "voivodeship", "prediction": "region\ninput: city\noutput: city", "cleaned_prediction": "region", "gt": "voivodato"}, {"input_prompt": "Input: port\nOutput:", "test_query": "port", "prediction": "port\nsharing: true\n\n# 3 ways", "cleaned_prediction": "port", "gt": "puerto"}, {"input_prompt": "Input: coastal\nOutput:", "test_query": "coastal", "prediction": "coastal\nthe coastal input is not modified.\ninput", "cleaned_prediction": "coastal", "gt": "costero"}, {"input_prompt": "Input: challenges\nOutput:", "test_query": "challenges", "prediction": "challenges\noutput: challenges\noutput: challenges", "cleaned_prediction": "challenges", "gt": "desaf\u00edos"}, {"input_prompt": "Input: teams\nOutput:", "test_query": "teams", "prediction": "a list of tuples, where each tuple contains the", "cleaned_prediction": "a list of tuples, where each tuple contains the", "gt": "equipos"}, {"input_prompt": "Input: resigned\nOutput:", "test_query": "resigned", "prediction": "resigned\ndefinition: (verb) to give up", "cleaned_prediction": "resigned", "gt": "renunciado"}, {"input_prompt": "Input: labor\nOutput:", "test_query": "labor", "prediction": "hard work\nsynonyms: toil, dr", "cleaned_prediction": "hard work", "gt": "trabajo"}, {"input_prompt": "Input: dragon\nOutput:", "test_query": "dragon", "prediction": "dragon\n\ninput: dragon\noutput: dragon", "cleaned_prediction": "dragon", "gt": "drag\u00f3n"}, {"input_prompt": "Input: cargo\nOutput:", "test_query": "cargo", "prediction": "1. what is cargo?\n----------------\ncargo", "cleaned_prediction": "1. what is cargo?", "gt": "carga"}, {"input_prompt": "Input: mexico\nOutput:", "test_query": "mexico", "prediction": "mexico is a country in north america, bordering", "cleaned_prediction": "mexico is a country in north america, bordering", "gt": "M\u00e9xico"}, {"input_prompt": "Input: consists\nOutput:", "test_query": "consists", "prediction": "consists\nconsists of\nconsists in", "cleaned_prediction": "consists", "gt": "consiste"}, {"input_prompt": "Input: hot\nOutput:", "test_query": "hot", "prediction": "hot\nexplanation: the string \"hot\" spelled", "cleaned_prediction": "hot", "gt": "caliente"}, {"input_prompt": "Input: fever\nOutput:", "test_query": "fever", "prediction": "fever\ndefinition: a body temperature above the normal", "cleaned_prediction": "fever", "gt": "fiebre"}, {"input_prompt": "Input: endings\nOutput:", "test_query": "endings", "prediction": "endings\nthe word \"endings\" spelled backwards", "cleaned_prediction": "endings", "gt": "finales"}, {"input_prompt": "Input: seconds\nOutput:", "test_query": "seconds", "prediction": "a string in the format \"x days, y", "cleaned_prediction": "a string in the format \"x days, y", "gt": "segundos"}, {"input_prompt": "Input: since\nOutput:", "test_query": "since", "prediction": "since\ninput: 3\noutput:", "cleaned_prediction": "since", "gt": "desde"}, {"input_prompt": "Input: pointed\nOutput:", "test_query": "pointed", "prediction": "pointed\ninput: pointedness\noutput: pointed", "cleaned_prediction": "pointed", "gt": "apuntado"}, {"input_prompt": "Input: athletic\nOutput:", "test_query": "athletic", "prediction": "athletic\nresult: the word \"athletic\"", "cleaned_prediction": "athletic", "gt": "atl\u00e9tico"}, {"input_prompt": "Input: bright\nOutput:", "test_query": "bright", "prediction": "bright\ndefinition: (adjective) having a", "cleaned_prediction": "bright", "gt": "brillante"}, {"input_prompt": "Input: chemistry\nOutput:", "test_query": "chemistry", "prediction": "\"chemistry is the scientific study of the composition", "cleaned_prediction": "\"chemistry is the scientific study of the composition", "gt": "qu\u00edmica"}, {"input_prompt": "Input: judgment\nOutput:", "test_query": "judgment", "prediction": "judgment\n### input: judgment\noutput: judgment", "cleaned_prediction": "judgment", "gt": "juicio"}, {"input_prompt": "Input: wishes\nOutput:", "test_query": "wishes", "prediction": "wishes\ninput: czech\noutput:", "cleaned_prediction": "wishes", "gt": "deseos"}, {"input_prompt": "Input: changes\nOutput:", "test_query": "changes", "prediction": "changes\nduration: 1\ndescription: the", "cleaned_prediction": "changes", "gt": "cambios"}, {"input_prompt": "Input: department\nOutput:", "test_query": "department", "prediction": "department name\ninput: department\noutput: department", "cleaned_prediction": "department name", "gt": "departamento"}, {"input_prompt": "Input: thunder\nOutput:", "test_query": "thunder", "prediction": "\"the sound of thunder is like a loud rum", "cleaned_prediction": "\"the sound of thunder is like a loud rum", "gt": "trueno"}, {"input_prompt": "Input: indicating\nOutput:", "test_query": "indicating", "prediction": "indicating\ndefinition: (verb) showing or pointing", "cleaned_prediction": "indicating", "gt": "indicando"}, {"input_prompt": "Input: volunteers\nOutput:", "test_query": "volunteers", "prediction": "volunteers\nprocess: \n1. identify the input", "cleaned_prediction": "volunteers", "gt": "voluntarios"}, {"input_prompt": "Input: look\nOutput:", "test_query": "look", "prediction": "look\ninput: look\noutput: look", "cleaned_prediction": "look", "gt": "mirar"}, {"input_prompt": "Input: composition\nOutput:", "test_query": "composition", "prediction": "composition\nsimilar to: arrangement, compilation, fusion", "cleaned_prediction": "composition", "gt": "composici\u00f3n"}, {"input_prompt": "Input: teach\nOutput:", "test_query": "teach", "prediction": "teach\ninput: teach\noutput: teach", "cleaned_prediction": "teach", "gt": "ense\u00f1ar"}, {"input_prompt": "Input: escaped\nOutput:", "test_query": "escaped", "prediction": "escaped\nduration: 100 ms\nmemory:", "cleaned_prediction": "escaped", "gt": "escapado"}, {"input_prompt": "Input: reply\nOutput:", "test_query": "reply", "prediction": "reply\n```\nimport re\n\ndef parse_reply", "cleaned_prediction": "reply", "gt": "respuesta"}, {"input_prompt": "Input: cold\nOutput:", "test_query": "cold", "prediction": "cold\n================\n\n### solution\n\n```python", "cleaned_prediction": "cold", "gt": "fr\u00edo"}, {"input_prompt": "Input: danish\nOutput:", "test_query": "danish", "prediction": "danish is a north germanic language spoken in denmark", "cleaned_prediction": "danish is a north germanic language spoken in denmark", "gt": "dan\u00e9s"}, {"input_prompt": "Input: stretch\nOutput:", "test_query": "stretch", "prediction": "stretch\ndefinition: (verb) to extend or", "cleaned_prediction": "stretch", "gt": "estiramiento"}, {"input_prompt": "Input: consumption\nOutput:", "test_query": "consumption", "prediction": "energy consumption\nconsumption (or consumption rate)", "cleaned_prediction": "energy consumption", "gt": "consumo"}, {"input_prompt": "Input: rhine\nOutput:", "test_query": "rhine", "prediction": "rhine\nthe rhine is one of the", "cleaned_prediction": "rhine", "gt": "Rin"}, {"input_prompt": "Input: delay\nOutput:", "test_query": "delay", "prediction": "delay\nrevision: 0\nauthor: user", "cleaned_prediction": "delay", "gt": "retraso"}, {"input_prompt": "Input: pakistan\nOutput:", "test_query": "pakistan", "prediction": "pakistan\n\ninput: 123\noutput: error", "cleaned_prediction": "pakistan", "gt": "Pakist\u00e1n"}, {"input_prompt": "Input: barrier\nOutput:", "test_query": "barrier", "prediction": "\"barrier\"\ninput: \"tom marvolo", "cleaned_prediction": "\"barrier\"", "gt": "barrera"}, {"input_prompt": "Input: precisely\nOutput:", "test_query": "precisely", "prediction": "precisely\ndefinition: (adverb) with exact", "cleaned_prediction": "precisely", "gt": "precisamente"}, {"input_prompt": "Input: passing\nOutput:", "test_query": "passing", "prediction": "passing\nduration: 1 ms\nexplanation:", "cleaned_prediction": "passing", "gt": "pasando"}, {"input_prompt": "Input: organization\nOutput:", "test_query": "organization", "prediction": "1. the organization is responsible for developing and", "cleaned_prediction": "1. the organization is responsible for developing and", "gt": "organizaci\u00f3n"}, {"input_prompt": "Input: census\nOutput:", "test_query": "census", "prediction": "censu\nthe sound /s/ is", "cleaned_prediction": "censu", "gt": "censo"}, {"input_prompt": "Input: constitutional\nOutput:", "test_query": "constitutional", "prediction": "constitutional\nexplanation: the input word \"constitutional\"", "cleaned_prediction": "constitutional", "gt": "constitucional"}, {"input_prompt": "Input: diverse\nOutput:", "test_query": "diverse", "prediction": "diverse\ninput: diverse\noutput: diverse", "cleaned_prediction": "diverse", "gt": "diverso"}, {"input_prompt": "Input: optical\nOutput:", "test_query": "optical", "prediction": "optical\noptical: optical\noptical is", "cleaned_prediction": "optical", "gt": "\u00f3ptico"}, {"input_prompt": "Input: pack\nOutput:", "test_query": "pack", "prediction": "pack\ndefinition: pack\n  1.", "cleaned_prediction": "pack", "gt": "paquete"}, {"input_prompt": "Input: rain\nOutput:", "test_query": "rain", "prediction": "\"the rain in spain stays mainly in the plains", "cleaned_prediction": "\"the rain in spain stays mainly in the plains", "gt": "lluvia"}, {"input_prompt": "Input: there\nOutput:", "test_query": "there", "prediction": "\"there\"\nexplanation: the input string is already", "cleaned_prediction": "\"there\"", "gt": "all\u00ed"}, {"input_prompt": "Input: croatian\nOutput:", "test_query": "croatian", "prediction": "croatian\ninput: greek\noutput: greek", "cleaned_prediction": "croatian", "gt": "croata"}, {"input_prompt": "Input: but\nOutput:", "test_query": "but", "prediction": "but\ninput: but not\noutput: but", "cleaned_prediction": "but", "gt": "pero"}, {"input_prompt": "Input: role\nOutput:", "test_query": "role", "prediction": "role\ninput: user\noutput: user", "cleaned_prediction": "role", "gt": "papel"}, {"input_prompt": "Input: politics\nOutput:", "test_query": "politics", "prediction": "politics\n================\n\n### politics\n\npolitics is the", "cleaned_prediction": "politics", "gt": "pol\u00edtica"}, {"input_prompt": "Input: personality\nOutput:", "test_query": "personality", "prediction": "the big bang theory\nthe big bang theory is", "cleaned_prediction": "the big bang theory", "gt": "personalidad"}, {"input_prompt": "Input: rubber\nOutput:", "test_query": "rubber", "prediction": "rubber\n================\n\n### definition\n\nrubber is", "cleaned_prediction": "rubber", "gt": "goma"}, {"input_prompt": "Input: opportunities\nOutput:", "test_query": "opportunities", "prediction": "opportunities\nproblem: there is no problem\nsolution", "cleaned_prediction": "opportunities", "gt": "oportunidades"}, {"input_prompt": "Input: billboard\nOutput:", "test_query": "billboard", "prediction": "\"billboard\"\nexplanation: the string \"bill", "cleaned_prediction": "\"billboard\"", "gt": "cartelera"}, {"input_prompt": "Input: lawsuit\nOutput:", "test_query": "lawsuit", "prediction": "lawsuit\ndefinition: a legal action in which one", "cleaned_prediction": "lawsuit", "gt": "demanda"}, {"input_prompt": "Input: protected\nOutput:", "test_query": "protected", "prediction": "public\nstatus: done\ntags: #public", "cleaned_prediction": "public", "gt": "protegido"}, {"input_prompt": "Input: attract\nOutput:", "test_query": "attract", "prediction": "attract\noutput: attract\ninput: attract", "cleaned_prediction": "attract", "gt": "atraer"}, {"input_prompt": "Input: successful\nOutput:", "test_query": "successful", "prediction": "successful\ninput: successful\noutput: successful", "cleaned_prediction": "successful", "gt": "exitoso"}, {"input_prompt": "Input: maintenance\nOutput:", "test_query": "maintenance", "prediction": "maintenance\n=====\n\n**maintenance**\n\nmaintenance is the", "cleaned_prediction": "maintenance", "gt": "mantenimiento"}, {"input_prompt": "Input: good\nOutput:", "test_query": "good", "prediction": "good\nexplanation: the string is already a palindrome", "cleaned_prediction": "good", "gt": "bueno"}, {"input_prompt": "Input: leagues\nOutput:", "test_query": "leagues", "prediction": "leagues\ncapitalize the first letter of a", "cleaned_prediction": "leagues", "gt": "ligas"}, {"input_prompt": "Input: implemented\nOutput:", "test_query": "implemented", "prediction": "implemented\nmemorization: implemented\ntests:", "cleaned_prediction": "implemented", "gt": "implementado"}, {"input_prompt": "Input: try\nOutput:", "test_query": "try", "prediction": "try\nuppercase the first letter of", "cleaned_prediction": "try", "gt": "intentar"}, {"input_prompt": "Input: wedding\nOutput:", "test_query": "wedding", "prediction": "a wedding is a ceremony where two people get married", "cleaned_prediction": "a wedding is a ceremony where two people get married", "gt": "boda"}, {"input_prompt": "Input: module\nOutput:", "test_query": "module", "prediction": "module\nauthor: jacky zhang\ncreated:", "cleaned_prediction": "module", "gt": "m\u00f3dulo"}, {"input_prompt": "Input: caught\nOutput:", "test_query": "caught", "prediction": "caught\ninput: caught\noutput: caught", "cleaned_prediction": "caught", "gt": "atrapado"}, {"input_prompt": "Input: easily\nOutput:", "test_query": "easily", "prediction": "easily\nexplanation: the word \"easily\"", "cleaned_prediction": "easily", "gt": "f\u00e1cilmente"}, {"input_prompt": "Input: secondary\nOutput:", "test_query": "secondary", "prediction": "secondary\nduration: 2\ndescription: this", "cleaned_prediction": "secondary", "gt": "secundario"}, {"input_prompt": "Input: maintain\nOutput:", "test_query": "maintain", "prediction": "maintain\ndefinition: to keep or preserve something in", "cleaned_prediction": "maintain", "gt": "mantener"}, {"input_prompt": "Input: towers\nOutput:", "test_query": "towers", "prediction": "{'tow': 1, 'ers':", "cleaned_prediction": "{'tow': 1, 'ers':", "gt": "torres"}, {"input_prompt": "Input: providing\nOutput:", "test_query": "providing", "prediction": "providing\nthe term \"input\" can refer to", "cleaned_prediction": "providing", "gt": "proporcionando"}, {"input_prompt": "Input: purchase\nOutput:", "test_query": "purchase", "prediction": "purchase\ncapitalization: yes\nexplanation: the", "cleaned_prediction": "purchase", "gt": "compra"}, {"input_prompt": "Input: eastern\nOutput:", "test_query": "eastern", "prediction": "eastern\ncapital: eastern\nstate: eastern", "cleaned_prediction": "eastern", "gt": "oriental"}, {"input_prompt": "Input: inn\nOutput:", "test_query": "inn", "prediction": "inn\ninput: innn\noutput: inn", "cleaned_prediction": "inn", "gt": "posada"}, {"input_prompt": "Input: constituency\nOutput:", "test_query": "constituency", "prediction": "the constituency of the member of parliament (mp)", "cleaned_prediction": "the constituency of the member of parliament (mp)", "gt": "circunscripci\u00f3n"}, {"input_prompt": "Input: relation\nOutput:", "test_query": "relation", "prediction": "relation\nfunctions:\n- `is_sorted` :", "cleaned_prediction": "relation", "gt": "relaci\u00f3n"}, {"input_prompt": "Input: contested\nOutput:", "test_query": "contested", "prediction": "contested\ndiscussion: the word \"contested\"", "cleaned_prediction": "contested", "gt": "contestado"}, {"input_prompt": "Input: compare\nOutput:", "test_query": "compare", "prediction": "compare\ntime complexity: o(1) |", "cleaned_prediction": "compare", "gt": "comparar"}, {"input_prompt": "Input: pressure\nOutput:", "test_query": "pressure", "prediction": "pressure\ntypes of problems: mathematical\nmodel type", "cleaned_prediction": "pressure", "gt": "presi\u00f3n"}, {"input_prompt": "Input: machine\nOutput:", "test_query": "machine", "prediction": "machine\ninput: machines\noutput: machines", "cleaned_prediction": "machine", "gt": "m\u00e1quina"}, {"input_prompt": "Input: brings\nOutput:", "test_query": "brings", "prediction": "brings\nthe word \"brings\" is a", "cleaned_prediction": "brings", "gt": "trayendo"}, {"input_prompt": "Input: legitimate\nOutput:", "test_query": "legitimate", "prediction": "legitimate\ndefinition: (of a person or their", "cleaned_prediction": "legitimate", "gt": "leg\u00edtimo"}, {"input_prompt": "Input: inches\nOutput:", "test_query": "inches", "prediction": "inches\nunit of measurement: inches\nconversion precision", "cleaned_prediction": "inches", "gt": "pulgadas"}, {"input_prompt": "Input: certification\nOutput:", "test_query": "certification", "prediction": "certification\ndefinition: a document that is issued to", "cleaned_prediction": "certification", "gt": "certificaci\u00f3n"}, {"input_prompt": "Input: silent\nOutput:", "test_query": "silent", "prediction": "silent\ndefinition: (adjective) making little", "cleaned_prediction": "silent", "gt": "silencio"}, {"input_prompt": "Input: medicine\nOutput:", "test_query": "medicine", "prediction": "\"medicine is a substance or preparation used for", "cleaned_prediction": "\"medicine is a substance or preparation used for", "gt": "medicina"}, {"input_prompt": "Input: complete\nOutput:", "test_query": "complete", "prediction": "complete\nexplanation: the input string is already complete", "cleaned_prediction": "complete", "gt": "completo"}, {"input_prompt": "Input: hide\nOutput:", "test_query": "hide", "prediction": "hide\n================================\n\n### hide\n\nhide", "cleaned_prediction": "hide", "gt": "esconder"}, {"input_prompt": "Input: road\nOutput:", "test_query": "road", "prediction": "road\nexplanation: the word \"road\" is", "cleaned_prediction": "road", "gt": "carretera"}, {"input_prompt": "Input: volumes\nOutput:", "test_query": "volumes", "prediction": "a matrix of the same size as the input,", "cleaned_prediction": "a matrix of the same size as the input,", "gt": "vol\u00famenes"}, {"input_prompt": "Input: hospitals\nOutput:", "test_query": "hospitals", "prediction": "a list of all hospital names\ninput: schools", "cleaned_prediction": "a list of all hospital names", "gt": "hospitales"}, {"input_prompt": "Input: defenders\nOutput:", "test_query": "defenders", "prediction": "defenders\ntime complexity: o(n)\nspace complexity", "cleaned_prediction": "defenders", "gt": "defensores"}, {"input_prompt": "Input: introduce\nOutput:", "test_query": "introduce", "prediction": "introduce\ndefinition: to make someone know or familiar", "cleaned_prediction": "introduce", "gt": "presentar"}, {"input_prompt": "Input: consisted\nOutput:", "test_query": "consisted", "prediction": "consisted of\nthesaurus: consisted\ndefinition", "cleaned_prediction": "consisted of", "gt": "consisti\u00f3"}, {"input_prompt": "Input: arabic\nOutput:", "test_query": "arabic", "prediction": "arabic\nlanguage: arabic\nlanguage code:", "cleaned_prediction": "arabic", "gt": "\u00e1rabe"}, {"input_prompt": "Input: sole\nOutput:", "test_query": "sole", "prediction": "sole\nmonosyllabic words have only one", "cleaned_prediction": "sole", "gt": "suela"}, {"input_prompt": "Input: fashion\nOutput:", "test_query": "fashion", "prediction": "the art of dressing in a way that is pleasing", "cleaned_prediction": "the art of dressing in a way that is pleasing", "gt": "moda"}, {"input_prompt": "Input: ordered\nOutput:", "test_query": "ordered", "prediction": "sorted\nreturns: sorted list of elements\nsort", "cleaned_prediction": "sorted", "gt": "ordenado"}, {"input_prompt": "Input: reveals\nOutput:", "test_query": "reveals", "prediction": "reveals\nspeed: 10 ms\nmemory:", "cleaned_prediction": "reveals", "gt": "revela"}, {"input_prompt": "Input: azerbaijan\nOutput:", "test_query": "azerbaijan", "prediction": "azerbaijan\ncorrected input: azerbaijan", "cleaned_prediction": "azerbaijan", "gt": "Azerbaiy\u00e1n"}, {"input_prompt": "Input: hearing\nOutput:", "test_query": "hearing", "prediction": "listening\nchange: listening is a more active and", "cleaned_prediction": "listening", "gt": "audici\u00f3n"}, {"input_prompt": "Input: reality\nOutput:", "test_query": "reality", "prediction": "a new reality\nin the beginning, there was", "cleaned_prediction": "a new reality", "gt": "realidad"}, {"input_prompt": "Input: midfielder\nOutput:", "test_query": "midfielder", "prediction": "a midfielder is a player who plays in the middle", "cleaned_prediction": "a midfielder is a player who plays in the middle", "gt": "centrocampista"}, {"input_prompt": "Input: surrounded\nOutput:", "test_query": "surrounded", "prediction": "surrounded\nexplanation: the input string is already a", "cleaned_prediction": "surrounded", "gt": "rodeado"}, {"input_prompt": "Input: libraries\nOutput:", "test_query": "libraries", "prediction": "libraries\ntime complexity: o(n)\nspace complexity", "cleaned_prediction": "libraries", "gt": "bibliotecas"}, {"input_prompt": "Input: horn\nOutput:", "test_query": "horn", "prediction": "horn (noun)\ndefinition: a device for producing", "cleaned_prediction": "horn (noun)", "gt": "cuerno"}, {"input_prompt": "Input: during\nOutput:", "test_query": "during", "prediction": "during\nduration: 5 ms\nframer", "cleaned_prediction": "during", "gt": "durante"}, {"input_prompt": "Input: mon\nOutput:", "test_query": "mon", "prediction": "mon\ninput: moon\noutput: moon", "cleaned_prediction": "mon", "gt": "lunes"}, {"input_prompt": "Input: pope\nOutput:", "test_query": "pope", "prediction": "\"the pope is the bishop of rome and the", "cleaned_prediction": "\"the pope is the bishop of rome and the", "gt": "papa"}, {"input_prompt": "Input: bodies\nOutput:", "test_query": "bodies", "prediction": "the corresponding mass values\n# mass of the earth", "cleaned_prediction": "the corresponding mass values", "gt": "cuerpos"}, {"input_prompt": "Input: anyone\nOutput:", "test_query": "anyone", "prediction": "anyone\nproblem:  you are given a list", "cleaned_prediction": "anyone", "gt": "cualquiera"}, {"input_prompt": "Input: raid\nOutput:", "test_query": "raid", "prediction": "raid\ninput: raider\noutput: raider", "cleaned_prediction": "raid", "gt": "redada"}, {"input_prompt": "Input: young\nOutput:", "test_query": "young", "prediction": "\"young\" is a adjective.\nadjectives are", "cleaned_prediction": "\"young\" is a adjective.", "gt": "joven"}, {"input_prompt": "Input: purchased\nOutput:", "test_query": "purchased", "prediction": "purchased\n\ninput: bought\noutput: bought", "cleaned_prediction": "purchased", "gt": "comprado"}, {"input_prompt": "Input: given\nOutput:", "test_query": "given", "prediction": "expected\n================\n\n### problem: 3", "cleaned_prediction": "expected", "gt": "dado"}, {"input_prompt": "Input: developer\nOutput:", "test_query": "developer", "prediction": "software developer\ninput: programmer\noutput: software", "cleaned_prediction": "software developer", "gt": "desarrollador"}, {"input_prompt": "Input: information\nOutput:", "test_query": "information", "prediction": "information\nspecies: homo sapiens\nlocation:", "cleaned_prediction": "information", "gt": "informaci\u00f3n"}, {"input_prompt": "Input: factory\nOutput:", "test_query": "factory", "prediction": "factory\nduration: 30 seconds\ndescription:", "cleaned_prediction": "factory", "gt": "f\u00e1brica"}, {"input_prompt": "Input: promised\nOutput:", "test_query": "promised", "prediction": "promised\ninput: promise\noutput: promise", "cleaned_prediction": "promised", "gt": "prometido"}, {"input_prompt": "Input: underlying\nOutput:", "test_query": "underlying", "prediction": "underlying\nsecurity: unsecured\ntype: asset", "cleaned_prediction": "underlying", "gt": "subyacente"}, {"input_prompt": "Input: practical\nOutput:", "test_query": "practical", "prediction": "practical\n______ is a type of poetry that", "cleaned_prediction": "practical", "gt": "pr\u00e1ctico"}, {"input_prompt": "Input: servant\nOutput:", "test_query": "servant", "prediction": "a servant is a person who performs domestic duties for", "cleaned_prediction": "a servant is a person who performs domestic duties for", "gt": "sirviente"}, {"input_prompt": "Input: christian\nOutput:", "test_query": "christian", "prediction": "christian\n\ninput: christian\noutput: christian", "cleaned_prediction": "christian", "gt": "cristiano"}, {"input_prompt": "Input: contest\nOutput:", "test_query": "contest", "prediction": "contest\ndefinition: a competition between two or more", "cleaned_prediction": "contest", "gt": "concurso"}, {"input_prompt": "Input: legend\nOutput:", "test_query": "legend", "prediction": "a string\ndescription: the legend of the chart", "cleaned_prediction": "a string", "gt": "leyenda"}, {"input_prompt": "Input: editing\nOutput:", "test_query": "editing", "prediction": "editing\ndifficulty: medium\nmax mistakes:", "cleaned_prediction": "editing", "gt": "edici\u00f3n"}, {"input_prompt": "Input: hat\nOutput:", "test_query": "hat", "prediction": "hat\ninput: {hat}\noutput: {", "cleaned_prediction": "hat", "gt": "sombrero"}, {"input_prompt": "Input: turkish\nOutput:", "test_query": "turkish", "prediction": "the history of the ottoman empire, which lasted for", "cleaned_prediction": "the history of the ottoman empire, which lasted for", "gt": "turco"}, {"input_prompt": "Input: foreign\nOutput:", "test_query": "foreign", "prediction": "foreign\n================\n\n### foreign\n\nforeign key support", "cleaned_prediction": "foreign", "gt": "extranjero"}, {"input_prompt": "Input: syndrome\nOutput:", "test_query": "syndrome", "prediction": "syndrome (noun) - a set of symptoms or", "cleaned_prediction": "syndrome (noun) - a set of symptoms or", "gt": "s\u00edndrome"}, {"input_prompt": "Input: journey\nOutput:", "test_query": "journey", "prediction": "journey\nthe word journey is a noun that refers", "cleaned_prediction": "journey", "gt": "viaje"}, {"input_prompt": "Input: impressive\nOutput:", "test_query": "impressive", "prediction": "impressive\ndefinition: (of a person or their", "cleaned_prediction": "impressive", "gt": "impresionante"}, {"input_prompt": "Input: meetings\nOutput:", "test_query": "meetings", "prediction": "a dictionary mapping each meeting to the number of attendees", "cleaned_prediction": "a dictionary mapping each meeting to the number of attendees", "gt": "reuniones"}, {"input_prompt": "Input: sword\nOutput:", "test_query": "sword", "prediction": "the sword is a melee weapon that is typically", "cleaned_prediction": "the sword is a melee weapon that is typically", "gt": "espada"}, {"input_prompt": "Input: abilities\nOutput:", "test_query": "abilities", "prediction": "a list of all abilities in the campaign\ndescription", "cleaned_prediction": "a list of all abilities in the campaign", "gt": "habilidades"}, {"input_prompt": "Input: briefly\nOutput:", "test_query": "briefly", "prediction": "briefly\ndefinition: for a short time; for", "cleaned_prediction": "briefly", "gt": "brevemente"}, {"input_prompt": "Input: revised\nOutput:", "test_query": "revised", "prediction": "revised\ninput: revised\noutput: revised", "cleaned_prediction": "revised", "gt": "revisado"}, {"input_prompt": "Input: skating\nOutput:", "test_query": "skating", "prediction": "rollerblading\nrollerblading is a", "cleaned_prediction": "rollerblading", "gt": "patinaje"}, {"input_prompt": "Input: elections\nOutput:", "test_query": "elections", "prediction": "1\nexplanation: there are 3 candidates", "cleaned_prediction": "1", "gt": "elecciones"}, {"input_prompt": "Input: wales\nOutput:", "test_query": "wales", "prediction": "wales\n\ninput: usa\noutput: usa", "cleaned_prediction": "wales", "gt": "Gales"}, {"input_prompt": "Input: construct\nOutput:", "test_query": "construct", "prediction": "the input construct is a noun. it refers to", "cleaned_prediction": "the input construct is a noun. it refers to", "gt": "construir"}, {"input_prompt": "Input: said\nOutput:", "test_query": "said", "prediction": "said\ndefinition: (verb) to express or", "cleaned_prediction": "said", "gt": "dijo"}, {"input_prompt": "Input: horse\nOutput:", "test_query": "horse", "prediction": "horse\ninput: cat\noutput: cat", "cleaned_prediction": "horse", "gt": "caballo"}, {"input_prompt": "Input: retained\nOutput:", "test_query": "retained", "prediction": "retained\ncomputation: the input is the same", "cleaned_prediction": "retained", "gt": "retenido"}, {"input_prompt": "Input: compound\nOutput:", "test_query": "compound", "prediction": "\"compound\"\ninput: \"compound\"\noutput:", "cleaned_prediction": "\"compound\"", "gt": "compuesto"}, {"input_prompt": "Input: log\nOutput:", "test_query": "log", "prediction": "log\ndiscussion:\nthe input is a string,", "cleaned_prediction": "log", "gt": "registro"}, {"input_prompt": "Input: giving\nOutput:", "test_query": "giving", "prediction": "receiving\nthe act of giving is a fundamental aspect", "cleaned_prediction": "receiving", "gt": "dando"}, {"input_prompt": "Input: wear\nOutput:", "test_query": "wear", "prediction": "wear\ndefinition: to put on or have on", "cleaned_prediction": "wear", "gt": "llevar"}, {"input_prompt": "Input: deer\nOutput:", "test_query": "deer", "prediction": "deer\ninput: racecar\noutput: race", "cleaned_prediction": "deer", "gt": "ciervo"}, {"input_prompt": "Input: opinion\nOutput:", "test_query": "opinion", "prediction": "\"i'm not sure i agree with that.\"", "cleaned_prediction": "\"i'm not sure i agree with that.\"", "gt": "opini\u00f3n"}, {"input_prompt": "Input: cream\nOutput:", "test_query": "cream", "prediction": "cream\ninput: water\noutput: water", "cleaned_prediction": "cream", "gt": "crema"}, {"input_prompt": "Input: lieutenant\nOutput:", "test_query": "lieutenant", "prediction": "lieutenant\ninput: lieutenant general\noutput: lieutenant", "cleaned_prediction": "lieutenant", "gt": "teniente"}, {"input_prompt": "Input: leaving\nOutput:", "test_query": "leaving", "prediction": "leaving\n================\n\n### leaving\n\nleaving is", "cleaned_prediction": "leaving", "gt": "saliendo"}, {"input_prompt": "Input: saudi\nOutput:", "test_query": "saudi", "prediction": "the kingdom of saudi arabia\ninput: china", "cleaned_prediction": "the kingdom of saudi arabia", "gt": "saud\u00ed"}, {"input_prompt": "Input: chemical\nOutput:", "test_query": "chemical", "prediction": "chemical\nthe chemical, named 2,4", "cleaned_prediction": "chemical", "gt": "qu\u00edmico"}, {"input_prompt": "Input: beliefs\nOutput:", "test_query": "beliefs", "prediction": "beliefs\nfunction: inference\ndescription: this function", "cleaned_prediction": "beliefs", "gt": "creencias"}, {"input_prompt": "Input: naples\nOutput:", "test_query": "naples", "prediction": "\"naples is a city located in the", "cleaned_prediction": "\"naples is a city located in the", "gt": "N\u00e1poles"}, {"input_prompt": "Input: married\nOutput:", "test_query": "married", "prediction": "\"i'm married, so i don't have", "cleaned_prediction": "\"i'm married, so i don't have", "gt": "casado"}, {"input_prompt": "Input: suggesting\nOutput:", "test_query": "suggesting", "prediction": "suggesting\ni think you are suggesting that i should", "cleaned_prediction": "suggesting", "gt": "sugiriendo"}, {"input_prompt": "Input: limit\nOutput:", "test_query": "limit", "prediction": "all prime numbers up to limit (inclusive)\nproblem", "cleaned_prediction": "all prime numbers up to limit (inclusive)", "gt": "l\u00edmite"}, {"input_prompt": "Input: scenes\nOutput:", "test_query": "scenes", "prediction": "scenes\nmodel type: text generation\nthis model", "cleaned_prediction": "scenes", "gt": "escenas"}, {"input_prompt": "Input: forwards\nOutput:", "test_query": "forwards", "prediction": "forwards\ninput: backwards\noutput: backwards", "cleaned_prediction": "forwards", "gt": "adelante"}, {"input_prompt": "Input: enjoy\nOutput:", "test_query": "enjoy", "prediction": "enjoy is a verb that means to take pleasure or", "cleaned_prediction": "enjoy is a verb that means to take pleasure or", "gt": "disfrutar"}, {"input_prompt": "Input: educated\nOutput:", "test_query": "educated", "prediction": "educated\ndefinition: having received or had academic instruction", "cleaned_prediction": "educated", "gt": "educado"}, {"input_prompt": "Input: request\nOutput:", "test_query": "request", "prediction": "response\nthe development of the atomic bomb during world", "cleaned_prediction": "response", "gt": "solicitud"}, {"input_prompt": "Input: paralympics\nOutput:", "test_query": "paralympics", "prediction": "the paralympics is an international multi-s", "cleaned_prediction": "the paralympics is an international multi-s", "gt": "paral\u00edmpicos"}, {"input_prompt": "Input: vessel\nOutput:", "test_query": "vessel", "prediction": "a list of all vessels that are currently being used", "cleaned_prediction": "a list of all vessels that are currently being used", "gt": "vasija"}, {"input_prompt": "Input: survive\nOutput:", "test_query": "survive", "prediction": "survive\ncorrected output: survive\n\ninput", "cleaned_prediction": "survive", "gt": "sobrevivir"}, {"input_prompt": "Input: clearly\nOutput:", "test_query": "clearly", "prediction": "clearly\ndefinition: in a clear and distinct manner", "cleaned_prediction": "clearly", "gt": "claramente"}, {"input_prompt": "Input: monk\nOutput:", "test_query": "monk", "prediction": "1. monastery\n2. monk", "cleaned_prediction": "1. monastery", "gt": "monje"}, {"input_prompt": "Input: steel\nOutput:", "test_query": "steel", "prediction": "steel\n================\n\n**steel fabrication and manufacturing", "cleaned_prediction": "steel", "gt": "acero"}, {"input_prompt": "Input: stress\nOutput:", "test_query": "stress", "prediction": "stress\n================\n### stress\n\nstress is", "cleaned_prediction": "stress", "gt": "estr\u00e9s"}, {"input_prompt": "Input: dubai\nOutput:", "test_query": "dubai", "prediction": "dubai is a city and emirate in the united", "cleaned_prediction": "dubai is a city and emirate in the united", "gt": "Dub\u00e1i"}, {"input_prompt": "Input: famous\nOutput:", "test_query": "famous", "prediction": "famous\ninput: famous\noutput: famous", "cleaned_prediction": "famous", "gt": "famoso"}, {"input_prompt": "Input: return\nOutput:", "test_query": "return", "prediction": "5\nexplanation: the string \"return\"", "cleaned_prediction": "5", "gt": "regresar"}, {"input_prompt": "Input: developing\nOutput:", "test_query": "developing", "prediction": "developing\nthemes: geography, economy\ndeveloping", "cleaned_prediction": "developing", "gt": "desarrollando"}, {"input_prompt": "Input: oppose\nOutput:", "test_query": "oppose", "prediction": "opposition\noppose (verb)\noppose (", "cleaned_prediction": "opposition", "gt": "oponerse"}, {"input_prompt": "Input: journalists\nOutput:", "test_query": "journalists", "prediction": "journalists\nsectors: media\njournalists are", "cleaned_prediction": "journalists", "gt": "periodistas"}, {"input_prompt": "Input: runners\nOutput:", "test_query": "runners", "prediction": "runners\n\ninput: runners\noutput: runners", "cleaned_prediction": "runners", "gt": "corredores"}, {"input_prompt": "Input: idol\nOutput:", "test_query": "idol", "prediction": "\"idol\" is a noun. it can", "cleaned_prediction": "\"idol\" is a noun. it can", "gt": "\u00eddolo"}, {"input_prompt": "Input: called\nOutput:", "test_query": "called", "prediction": "called\nrevision: 2\nlevel:", "cleaned_prediction": "called", "gt": "llamado"}, {"input_prompt": "Input: characterized\nOutput:", "test_query": "characterized", "prediction": "characterized\nerror: characterized is not a valid", "cleaned_prediction": "characterized", "gt": "caracterizado"}, {"input_prompt": "Input: thai\nOutput:", "test_query": "thai", "prediction": "\"thai\" is a language of the tai-k", "cleaned_prediction": "\"thai\" is a language of the tai-k", "gt": "tailand\u00e9s"}, {"input_prompt": "Input: hosting\nOutput:", "test_query": "hosting", "prediction": "hosting\ncapitalization: capitalized\ncategory:", "cleaned_prediction": "hosting", "gt": "alojamiento"}, {"input_prompt": "Input: opens\nOutput:", "test_query": "opens", "prediction": "opens\nexplanation: the word \"opens\" spelled", "cleaned_prediction": "opens", "gt": "abre"}, {"input_prompt": "Input: victim\nOutput:", "test_query": "victim", "prediction": "a 19-year-old man was arrested in", "cleaned_prediction": "a 19-year-old man was arrested in", "gt": "v\u00edctima"}, {"input_prompt": "Input: controlled\nOutput:", "test_query": "controlled", "prediction": "uncontrolled\ntask: predict\nmodel: linear", "cleaned_prediction": "uncontrolled", "gt": "controlado"}, {"input_prompt": "Input: fill\nOutput:", "test_query": "fill", "prediction": "fill\n================\n### fill\n\nfill is a", "cleaned_prediction": "fill", "gt": "llenar"}, {"input_prompt": "Input: code\nOutput:", "test_query": "code", "prediction": "code\nhidden: code\n\ninput: code", "cleaned_prediction": "code", "gt": "c\u00f3digo"}, {"input_prompt": "Input: images\nOutput:", "test_query": "images", "prediction": "images\ncomparison: \npurpose: to compare the", "cleaned_prediction": "images", "gt": "im\u00e1genes"}, {"input_prompt": "Input: dispute\nOutput:", "test_query": "dispute", "prediction": "dispute\n1. a dispute is a disagreement", "cleaned_prediction": "dispute", "gt": "disputa"}, {"input_prompt": "Input: taste\nOutput:", "test_query": "taste", "prediction": "a dish of sweet and sour fish, with a", "cleaned_prediction": "a dish of sweet and sour fish, with a", "gt": "sabor"}, {"input_prompt": "Input: improvement\nOutput:", "test_query": "improvement", "prediction": "improvement\nsynonyms: betterment, enhancement,", "cleaned_prediction": "improvement", "gt": "mejora"}, {"input_prompt": "Input: contributing\nOutput:", "test_query": "contributing", "prediction": "contributing\n_____________\ncon\u00b7tri\u00b7but\u00b7", "cleaned_prediction": "contributing", "gt": "contribuyendo"}, {"input_prompt": "Input: strongly\nOutput:", "test_query": "strongly", "prediction": "strongly\ndefinition: (adverb) in a", "cleaned_prediction": "strongly", "gt": "fuertemente"}, {"input_prompt": "Input: foundations\nOutput:", "test_query": "foundations", "prediction": "foundations\nduration: 1 min\n\n# foundations", "cleaned_prediction": "foundations", "gt": "fundaciones"}, {"input_prompt": "Input: dollars\nOutput:", "test_query": "dollars", "prediction": "cents\n\ndef dollars_to_cents(dollars", "cleaned_prediction": "cents", "gt": "d\u00f3lares"}, {"input_prompt": "Input: master\nOutput:", "test_query": "master", "prediction": "master\nduration: 2:00\nrecorder", "cleaned_prediction": "master", "gt": "maestro"}, {"input_prompt": "Input: aware\nOutput:", "test_query": "aware", "prediction": "aware\nexplanation: the word \"aware\" spelled", "cleaned_prediction": "aware", "gt": "consciente"}, {"input_prompt": "Input: grants\nOutput:", "test_query": "grants", "prediction": "grants\nversion: 1.0\ndate", "cleaned_prediction": "grants", "gt": "becas"}, {"input_prompt": "Input: cash\nOutput:", "test_query": "cash", "prediction": "{ 'cash': 100, 'card':", "cleaned_prediction": "{ 'cash': 100, 'card':", "gt": "efectivo"}, {"input_prompt": "Input: items\nOutput:", "test_query": "items", "prediction": "a dictionary with the frequency of each item\ndef", "cleaned_prediction": "a dictionary with the frequency of each item", "gt": "art\u00edculos"}, {"input_prompt": "Input: captain\nOutput:", "test_query": "captain", "prediction": "here are some possible anagrams for the word", "cleaned_prediction": "here are some possible anagrams for the word", "gt": "capit\u00e1n"}, {"input_prompt": "Input: genre\nOutput:", "test_query": "genre", "prediction": "list of movie titles\n\"\"\"\ndef get_movies_by", "cleaned_prediction": "list of movie titles", "gt": "g\u00e9nero"}, {"input_prompt": "Input: pictures\nOutput:", "test_query": "pictures", "prediction": "pictures\ntask: create a program that takes a", "cleaned_prediction": "pictures", "gt": "fotos"}, {"input_prompt": "Input: meter\nOutput:", "test_query": "meter", "prediction": "'meter'\ninput: kilometer\noutput:", "cleaned_prediction": "'meter'", "gt": "metro"}, {"input_prompt": "Input: catholics\nOutput:", "test_query": "catholics", "prediction": "c a t h o l i c s", "cleaned_prediction": "c a t h o l i c s", "gt": "cat\u00f3licos"}, {"input_prompt": "Input: marvel\nOutput:", "test_query": "marvel", "prediction": "the marvel cinematic universe (mcu) is", "cleaned_prediction": "the marvel cinematic universe (mcu) is", "gt": "maravilla"}, {"input_prompt": "Input: tag\nOutput:", "test_query": "tag", "prediction": "tag\ndetermines whether the current page is a", "cleaned_prediction": "tag", "gt": "etiqueta"}, {"input_prompt": "Input: test\nOutput:", "test_query": "test", "prediction": "test\n\ninput: \noutput: \n\ninput:", "cleaned_prediction": "test", "gt": "prueba"}, {"input_prompt": "Input: employed\nOutput:", "test_query": "employed", "prediction": "employed\ndefinition: (adjective) having a", "cleaned_prediction": "employed", "gt": "empleado"}, {"input_prompt": "Input: discovers\nOutput:", "test_query": "discovers", "prediction": "discovers\n================\n\n**deduplication**", "cleaned_prediction": "discovers", "gt": "descubre"}, {"input_prompt": "Input: relatives\nOutput:", "test_query": "relatives", "prediction": "relatives\ninput: relatives\noutput: relatives", "cleaned_prediction": "relatives", "gt": "parientes"}, {"input_prompt": "Input: infantry\nOutput:", "test_query": "infantry", "prediction": "infantry\ndraws a line between the words \"", "cleaned_prediction": "infantry", "gt": "infanter\u00eda"}, {"input_prompt": "Input: releasing\nOutput:", "test_query": "releasing", "prediction": "releasing\ndefinition: (verb) to let go", "cleaned_prediction": "releasing", "gt": "liberando"}, {"input_prompt": "Input: book\nOutput:", "test_query": "book", "prediction": "book\ninput: bookshelf\noutput: book", "cleaned_prediction": "book", "gt": "libro"}, {"input_prompt": "Input: heavily\nOutput:", "test_query": "heavily", "prediction": "heavily\ndefinition: in a heavy manner; in", "cleaned_prediction": "heavily", "gt": "pesadamente"}, {"input_prompt": "Input: sleep\nOutput:", "test_query": "sleep", "prediction": "to sleep, perchance to dream\u2014ay", "cleaned_prediction": "to sleep, perchance to dream\u2014ay", "gt": "dormir"}, {"input_prompt": "Input: theories\nOutput:", "test_query": "theories", "prediction": "theories\ndescription: theories are a collection of", "cleaned_prediction": "theories", "gt": "teor\u00edas"}, {"input_prompt": "Input: additionally\nOutput:", "test_query": "additionally", "prediction": "additionally\ndefinition: 1. besides; also", "cleaned_prediction": "additionally", "gt": "adem\u00e1s"}, {"input_prompt": "Input: destination\nOutput:", "test_query": "destination", "prediction": "destination\nfixes: #122\nrelated to", "cleaned_prediction": "destination", "gt": "destino"}, {"input_prompt": "Input: players\nOutput:", "test_query": "players", "prediction": "the team with the most points wins. if there", "cleaned_prediction": "the team with the most points wins. if there", "gt": "jugadores"}, {"input_prompt": "Input: abuse\nOutput:", "test_query": "abuse", "prediction": "abuse\nsynonyms: maltreatment, ill-t", "cleaned_prediction": "abuse", "gt": "abuso"}, {"input_prompt": "Input: waiting\nOutput:", "test_query": "waiting", "prediction": "waiting\ninput: run\noutput: run", "cleaned_prediction": "waiting", "gt": "esperando"}, {"input_prompt": "Input: options\nOutput:", "test_query": "options", "prediction": "options\nfixes: 1\n\n#", "cleaned_prediction": "options", "gt": "opciones"}, {"input_prompt": "Input: tip\nOutput:", "test_query": "tip", "prediction": "tip\ninput: apple\noutput: apple", "cleaned_prediction": "tip", "gt": "consejo"}, {"input_prompt": "Input: smart\nOutput:", "test_query": "smart", "prediction": "smart\ndescription: a simple ai that always responds", "cleaned_prediction": "smart", "gt": "inteligente"}, {"input_prompt": "Input: managers\nOutput:", "test_query": "managers", "prediction": "['john', 'jane', 'alice']\ninput", "cleaned_prediction": "['john', 'jane', 'alice']", "gt": "gerentes"}, {"input_prompt": "Input: defense\nOutput:", "test_query": "defense", "prediction": "defense\n==========================\n\n### defense\n\ndefense is", "cleaned_prediction": "defense", "gt": "defensa"}, {"input_prompt": "Input: ridge\nOutput:", "test_query": "ridge", "prediction": "ridge (no change)\ninput: ridges", "cleaned_prediction": "ridge (no change)", "gt": "cresta"}, {"input_prompt": "Input: flow\nOutput:", "test_query": "flow", "prediction": "flow\noutput: flow\noutput: flow", "cleaned_prediction": "flow", "gt": "flujo"}, {"input_prompt": "Input: losing\nOutput:", "test_query": "losing", "prediction": "losing\ndefinition: (of a person or animal", "cleaned_prediction": "losing", "gt": "perdiendo"}, {"input_prompt": "Input: broadcasting\nOutput:", "test_query": "broadcasting", "prediction": "output\nkeywords: input, broadcasting, output", "cleaned_prediction": "output", "gt": "difusi\u00f3n"}, {"input_prompt": "Input: environment\nOutput:", "test_query": "environment", "prediction": "environment\ntasks:\n1. install required packages", "cleaned_prediction": "environment", "gt": "entorno"}, {"input_prompt": "Input: spectrum\nOutput:", "test_query": "spectrum", "prediction": "spectrum\nfunctions:\n1. `normalize_spect", "cleaned_prediction": "spectrum", "gt": "espectro"}, {"input_prompt": "Input: enlisted\nOutput:", "test_query": "enlisted", "prediction": "enlisted\ndefinition: (verb) to join a", "cleaned_prediction": "enlisted", "gt": "alistado"}, {"input_prompt": "Input: fort\nOutput:", "test_query": "fort", "prediction": "fort\nexplanation: the word \u201cfort\u201d spelled", "cleaned_prediction": "fort", "gt": "fuerte"}, {"input_prompt": "Input: respected\nOutput:", "test_query": "respected", "prediction": "respected\ninput: respected\noutput: respected", "cleaned_prediction": "respected", "gt": "respetado"}, {"input_prompt": "Input: calculated\nOutput:", "test_query": "calculated", "prediction": "calculated\ntypes: number, string, boolean", "cleaned_prediction": "calculated", "gt": "calculado"}, {"input_prompt": "Input: footballer\nOutput:", "test_query": "footballer", "prediction": "person who plays football\ninput: pianist", "cleaned_prediction": "person who plays football", "gt": "futbolista"}, {"input_prompt": "Input: ice\nOutput:", "test_query": "ice", "prediction": "ice cream\n\ninput: water\noutput: water", "cleaned_prediction": "ice cream", "gt": "hielo"}, {"input_prompt": "Input: conventional\nOutput:", "test_query": "conventional", "prediction": "1.0\nexplanation: the input is", "cleaned_prediction": "1.0", "gt": "convencional"}, {"input_prompt": "Input: operations\nOutput:", "test_query": "operations", "prediction": "operations\ntests:\n1. test case 1", "cleaned_prediction": "operations", "gt": "operaciones"}, {"input_prompt": "Input: formats\nOutput:", "test_query": "formats", "prediction": "formats\nprogress: in progress\nestimated time:", "cleaned_prediction": "formats", "gt": "formatos"}, {"input_prompt": "Input: regiment\nOutput:", "test_query": "regiment", "prediction": "regiment\ninput: regiment\noutput: regiment", "cleaned_prediction": "regiment", "gt": "regimiento"}, {"input_prompt": "Input: missionaries\nOutput:", "test_query": "missionaries", "prediction": "missionaries and cannibals\n\ndef cannibals", "cleaned_prediction": "missionaries and cannibals", "gt": "misioneros"}, {"input_prompt": "Input: align\nOutput:", "test_query": "align", "prediction": "align\nduration: 4\ndescription: align", "cleaned_prediction": "align", "gt": "alinear"}, {"input_prompt": "Input: controls\nOutput:", "test_query": "controls", "prediction": "controls\nerror: controls is not a valid input", "cleaned_prediction": "controls", "gt": "controles"}, {"input_prompt": "Input: valid\nOutput:", "test_query": "valid", "prediction": "invalid\nreason: the input \"valid\" is", "cleaned_prediction": "invalid", "gt": "v\u00e1lido"}, {"input_prompt": "Input: running\nOutput:", "test_query": "running", "prediction": "\"running\"\ninput: jumping\noutput: \"", "cleaned_prediction": "\"running\"", "gt": "corriendo"}, {"input_prompt": "Input: strikes\nOutput:", "test_query": "strikes", "prediction": "strikes\ndefined in: /packages/standard/lib", "cleaned_prediction": "strikes", "gt": "huelgas"}, {"input_prompt": "Input: inhabited\nOutput:", "test_query": "inhabited", "prediction": "inhabited\ndefinition: (of a place or area", "cleaned_prediction": "inhabited", "gt": "habitado"}, {"input_prompt": "Input: pick\nOutput:", "test_query": "pick", "prediction": "\"pick\"\nexplanation: the string \"pick\"", "cleaned_prediction": "\"pick\"", "gt": "escoger"}, {"input_prompt": "Input: paying\nOutput:", "test_query": "paying", "prediction": "\"paying\"\ninput: \"abc\"\noutput", "cleaned_prediction": "\"paying\"", "gt": "pagando"}, {"input_prompt": "Input: auxiliary\nOutput:", "test_query": "auxiliary", "prediction": "auxiliary\ndefinition: serving to help or support something", "cleaned_prediction": "auxiliary", "gt": "auxiliar"}, {"input_prompt": "Input: photograph\nOutput:", "test_query": "photograph", "prediction": "\"the photograph shows a beautiful landscape with a serene", "cleaned_prediction": "\"the photograph shows a beautiful landscape with a serene", "gt": "fotograf\u00eda"}, {"input_prompt": "Input: chairman\nOutput:", "test_query": "chairman", "prediction": "chairman\ninput: chairmen\noutput: chair", "cleaned_prediction": "chairman", "gt": "presidente"}, {"input_prompt": "Input: danger\nOutput:", "test_query": "danger", "prediction": "danger\ndefinition: a situation or thing that poses", "cleaned_prediction": "danger", "gt": "peligro"}, {"input_prompt": "Input: pounds\nOutput:", "test_query": "pounds", "prediction": "stone and pounds\n\nexamples:\ninput: 11", "cleaned_prediction": "stone and pounds", "gt": "libras"}, {"input_prompt": "Input: transmission\nOutput:", "test_query": "transmission", "prediction": "transmission\nconfidence: 0.98", "cleaned_prediction": "transmission", "gt": "transmisi\u00f3n"}, {"input_prompt": "Input: too\nOutput:", "test_query": "too", "prediction": "too\nexplanation: the word \u201ctoo\u201d is", "cleaned_prediction": "too", "gt": "tambi\u00e9n"}, {"input_prompt": "Input: month\nOutput:", "test_query": "month", "prediction": "number of days in the month\nprecondition:", "cleaned_prediction": "number of days in the month", "gt": "mes"}, {"input_prompt": "Input: transit\nOutput:", "test_query": "transit", "prediction": "transit\ninput: transit\noutput: transit", "cleaned_prediction": "transit", "gt": "tr\u00e1nsito"}, {"input_prompt": "Input: gives\nOutput:", "test_query": "gives", "prediction": "gives\nrevision: 1\nrevision description:", "cleaned_prediction": "gives", "gt": "da"}, {"input_prompt": "Input: set\nOutput:", "test_query": "set", "prediction": "set\ninput description: set of unique strings", "cleaned_prediction": "set", "gt": "conjunto"}, {"input_prompt": "Input: creates\nOutput:", "test_query": "creates", "prediction": "creates\ndefinition: verb. past tense and past", "cleaned_prediction": "creates", "gt": "crea"}, {"input_prompt": "Input: adventures\nOutput:", "test_query": "adventures", "prediction": "adventure\noutput: adventures\noutput: adventure", "cleaned_prediction": "adventure", "gt": "aventuras"}, {"input_prompt": "Input: ruled\nOutput:", "test_query": "ruled", "prediction": "ruled\nexpect: ruled\n\ninput: ruled", "cleaned_prediction": "ruled", "gt": "gobernado"}, {"input_prompt": "Input: crowd\nOutput:", "test_query": "crowd", "prediction": "crowd\nthe crowd was a sea of faces,", "cleaned_prediction": "crowd", "gt": "multitud"}, {"input_prompt": "Input: supplement\nOutput:", "test_query": "supplement", "prediction": "supplement\ndefinition: a substance added to something else", "cleaned_prediction": "supplement", "gt": "suplemento"}, {"input_prompt": "Input: turning\nOutput:", "test_query": "turning", "prediction": "turning\nsynonyms: revolving, rotating, spinning", "cleaned_prediction": "turning", "gt": "girando"}, {"input_prompt": "Input: diving\nOutput:", "test_query": "diving", "prediction": "diving\ntitle: diving\ndiving", "cleaned_prediction": "diving", "gt": "buceo"}, {"input_prompt": "Input: intersection\nOutput:", "test_query": "intersection", "prediction": "intersection\nexamples:\nintersection of 2 sets =", "cleaned_prediction": "intersection", "gt": "intersecci\u00f3n"}, {"input_prompt": "Input: scandal\nOutput:", "test_query": "scandal", "prediction": "the scandal of the century\nthe scandal of the", "cleaned_prediction": "the scandal of the century", "gt": "esc\u00e1ndalo"}, {"input_prompt": "Input: acid\nOutput:", "test_query": "acid", "prediction": "acid\n\ninput: boric\noutput: b", "cleaned_prediction": "acid", "gt": "\u00e1cido"}, {"input_prompt": "Input: columns\nOutput:", "test_query": "columns", "prediction": "columns\n\n## step 1: understand the problem", "cleaned_prediction": "columns", "gt": "columnas"}, {"input_prompt": "Input: sport\nOutput:", "test_query": "sport", "prediction": "\"sports\" is a broad term that encompasses a", "cleaned_prediction": "\"sports\" is a broad term that encompasses a", "gt": "deporte"}, {"input_prompt": "Input: methodist\nOutput:", "test_query": "methodist", "prediction": "methodist\ninput: methodists\noutput:", "cleaned_prediction": "methodist", "gt": "metodista"}, {"input_prompt": "Input: followed\nOutput:", "test_query": "followed", "prediction": "followed\nexplanation: the string \"followed\"", "cleaned_prediction": "followed", "gt": "seguido"}, {"input_prompt": "Input: lack\nOutput:", "test_query": "lack", "prediction": "lack\n---\n\ninput: lack\noutput: lack", "cleaned_prediction": "lack", "gt": "falta"}, {"input_prompt": "Input: merchant\nOutput:", "test_query": "merchant", "prediction": "merchant\n\ninput: merchant\noutput: merchant", "cleaned_prediction": "merchant", "gt": "comerciante"}, {"input_prompt": "Input: birds\nOutput:", "test_query": "birds", "prediction": "\"the birds are singing beautifully today.\"\ninput:", "cleaned_prediction": "\"the birds are singing beautifully today.\"", "gt": "p\u00e1jaros"}, {"input_prompt": "Input: revenge\nOutput:", "test_query": "revenge", "prediction": "the desire to harm or punish someone in return for", "cleaned_prediction": "the desire to harm or punish someone in return for", "gt": "venganza"}, {"input_prompt": "Input: awarded\nOutput:", "test_query": "awarded", "prediction": "awarded\nresult: the word \"awarded\"", "cleaned_prediction": "awarded", "gt": "otorgado"}, {"input_prompt": "Input: begun\nOutput:", "test_query": "begun", "prediction": "begun\ndefinition: (verb) start to speak", "cleaned_prediction": "begun", "gt": "comenzado"}, {"input_prompt": "Input: reliability\nOutput:", "test_query": "reliability", "prediction": "reliability\n### reliability in statistics\nreliability", "cleaned_prediction": "reliability", "gt": "fiabilidad"}, {"input_prompt": "Input: titled\nOutput:", "test_query": "titled", "prediction": "titled\ndefinition: (of a work of art", "cleaned_prediction": "titled", "gt": "titulado"}, {"input_prompt": "Input: lover\nOutput:", "test_query": "lover", "prediction": "the lover is a person who is in love.", "cleaned_prediction": "the lover is a person who is in love.", "gt": "amante"}, {"input_prompt": "Input: cyclone\nOutput:", "test_query": "cyclone", "prediction": "'cyclone'\n---\ninput: tornado", "cleaned_prediction": "'cyclone'", "gt": "cicl\u00f3n"}, {"input_prompt": "Input: deal\nOutput:", "test_query": "deal", "prediction": "deal\ntitle: deal\nartist: the velvet", "cleaned_prediction": "deal", "gt": "trato"}, {"input_prompt": "Input: table\nOutput:", "test_query": "table", "prediction": "table\ntask: implement a function that takes a", "cleaned_prediction": "table", "gt": "mesa"}, {"input_prompt": "Input: bring\nOutput:", "test_query": "bring", "prediction": "bring\ninput: brine\noutput: br", "cleaned_prediction": "bring", "gt": "traer"}, {"input_prompt": "Input: falling\nOutput:", "test_query": "falling", "prediction": "falling\nfalling is a verb that means to", "cleaned_prediction": "falling", "gt": "cayendo"}, {"input_prompt": "Input: overview\nOutput:", "test_query": "overview", "prediction": "overview\nthe overview tab displays the main details of", "cleaned_prediction": "overview", "gt": "resumen"}, {"input_prompt": "Input: workers\nOutput:", "test_query": "workers", "prediction": "[\n  { id: 1, name:", "cleaned_prediction": "[", "gt": "trabajadores"}, {"input_prompt": "Input: roller\nOutput:", "test_query": "roller", "prediction": "roller\n```python\ndef find_common_prefix(words", "cleaned_prediction": "roller", "gt": "rodillo"}, {"input_prompt": "Input: nominator\nOutput:", "test_query": "nominator", "prediction": "nominator\ndefinition: the number on top of", "cleaned_prediction": "nominator", "gt": "nominador"}, {"input_prompt": "Input: serious\nOutput:", "test_query": "serious", "prediction": "serious\n================\n# serious\n\na serious function", "cleaned_prediction": "serious", "gt": "serio"}, {"input_prompt": "Input: success\nOutput:", "test_query": "success", "prediction": "\"success!\"\ninput: failure\noutput: \"", "cleaned_prediction": "\"success!\"", "gt": "\u00e9xito"}, {"input_prompt": "Input: week\nOutput:", "test_query": "week", "prediction": "week\n------------\n\n### week overview\n\na week", "cleaned_prediction": "week", "gt": "semana"}, {"input_prompt": "Input: ussr\nOutput:", "test_query": "ussr", "prediction": "the soviet union was a federal state that existed", "cleaned_prediction": "the soviet union was a federal state that existed", "gt": "URSS (Uni\u00f3n de Rep\u00fablicas Socialistas Sovi\u00e9ticas"}, {"input_prompt": "Input: feat\nOutput:", "test_query": "feat", "prediction": "feat\nduration: 0:00:00", "cleaned_prediction": "feat", "gt": "haza\u00f1a"}, {"input_prompt": "Input: cross\nOutput:", "test_query": "cross", "prediction": "\"cross\"\n---\n\nfunction reversestring(s) {", "cleaned_prediction": "\"cross\"", "gt": "cruz"}, {"input_prompt": "Input: blocked\nOutput:", "test_query": "blocked", "prediction": "blocked\n\ninput: hello\noutput: hello", "cleaned_prediction": "blocked", "gt": "bloqueado"}, {"input_prompt": "Input: complaint\nOutput:", "test_query": "complaint", "prediction": "complaint\ndefinition: a formal expression of dissatisfaction or", "cleaned_prediction": "complaint", "gt": "queja"}, {"input_prompt": "Input: pan\nOutput:", "test_query": "pan", "prediction": "pan\ninput: banana\noutput: nan", "cleaned_prediction": "pan", "gt": "sart\u00e9n"}, {"input_prompt": "Input: photo\nOutput:", "test_query": "photo", "prediction": "https://i.imgur.com/2erl", "cleaned_prediction": "https://i.imgur.com/2erl", "gt": "foto"}, {"input_prompt": "Input: like\nOutput:", "test_query": "like", "prediction": "like\ninput: love\noutput: love", "cleaned_prediction": "like", "gt": "gusta"}, {"input_prompt": "Input: harbour\nOutput:", "test_query": "harbour", "prediction": "1. harbour (1)\n2. harbour", "cleaned_prediction": "1. harbour (1)", "gt": "puerto"}, {"input_prompt": "Input: super\nOutput:", "test_query": "super", "prediction": "super\ninput: not\noutput: not", "cleaned_prediction": "super", "gt": "s\u00faper"}, {"input_prompt": "Input: organisation\nOutput:", "test_query": "organisation", "prediction": "organisation\ntype: organisation\ndescription: the british", "cleaned_prediction": "organisation", "gt": "organizaci\u00f3n"}, {"input_prompt": "Input: sentenced\nOutput:", "test_query": "sentenced", "prediction": "sentenced\ninput: sentenc\noutput: sent", "cleaned_prediction": "sentenced", "gt": "sentenciado"}, {"input_prompt": "Input: prisoners\nOutput:", "test_query": "prisoners", "prediction": "prisoners\nprisoners is a term that refers", "cleaned_prediction": "prisoners", "gt": "prisioneros"}, {"input_prompt": "Input: sending\nOutput:", "test_query": "sending", "prediction": "receiving\ninput: receiving\noutput: sending", "cleaned_prediction": "receiving", "gt": "enviando"}, {"input_prompt": "Input: riding\nOutput:", "test_query": "riding", "prediction": "'riding' is not a valid input.\n``", "cleaned_prediction": "'riding' is not a valid input.", "gt": "montar"}, {"input_prompt": "Input: changing\nOutput:", "test_query": "changing", "prediction": "changing\nrelevance: 100%\nfeedback:", "cleaned_prediction": "changing", "gt": "cambiando"}, {"input_prompt": "Input: protect\nOutput:", "test_query": "protect", "prediction": "protect\ncorrected: protect\ninput: protect", "cleaned_prediction": "protect", "gt": "proteger"}, {"input_prompt": "Input: located\nOutput:", "test_query": "located", "prediction": "located\n===============================================================================\n\na simple python program that", "cleaned_prediction": "located", "gt": "ubicado"}, {"input_prompt": "Input: burn\nOutput:", "test_query": "burn", "prediction": "burn\n# \ninput: hello\noutput:", "cleaned_prediction": "burn", "gt": "quemar"}, {"input_prompt": "Input: batting\nOutput:", "test_query": "batting", "prediction": "batting\ninput: batting\noutput: batting", "cleaned_prediction": "batting", "gt": "bateo"}, {"input_prompt": "Input: products\nOutput:", "test_query": "products", "prediction": "list of products that are not in stock\n\"\"\"", "cleaned_prediction": "list of products that are not in stock", "gt": "productos"}, {"input_prompt": "Input: reserves\nOutput:", "test_query": "reserves", "prediction": "reserves\ntasks:\n1. check if the user", "cleaned_prediction": "reserves", "gt": "reservas"}, {"input_prompt": "Input: difficulty\nOutput:", "test_query": "difficulty", "prediction": "a list of recommended books for the given difficulty level", "cleaned_prediction": "a list of recommended books for the given difficulty level", "gt": "dificultad"}, {"input_prompt": "Input: vision\nOutput:", "test_query": "vision", "prediction": "a sense of wonder\nthe museum of vision is", "cleaned_prediction": "a sense of wonder", "gt": "visi\u00f3n"}, {"input_prompt": "Input: champion\nOutput:", "test_query": "champion", "prediction": "\"champion\" is a term that has", "cleaned_prediction": "\"champion\" is a term that has", "gt": "campe\u00f3n"}, {"input_prompt": "Input: cemetery\nOutput:", "test_query": "cemetery", "prediction": "cemetery\ndefinition: (noun) a piece of", "cleaned_prediction": "cemetery", "gt": "cementerio"}, {"input_prompt": "Input: defended\nOutput:", "test_query": "defended", "prediction": "defended\nresult: the word \"defended\"", "cleaned_prediction": "defended", "gt": "defendido"}, {"input_prompt": "Input: distinguished\nOutput:", "test_query": "distinguished", "prediction": "distinguished\ntime complexity: o(1)\nspace", "cleaned_prediction": "distinguished", "gt": "distinguido"}, {"input_prompt": "Input: discussing\nOutput:", "test_query": "discussing", "prediction": "discussion\nsynonyms: talk, chat, debate", "cleaned_prediction": "discussion", "gt": "discutiendo"}, {"input_prompt": "Input: peaked\nOutput:", "test_query": "peaked", "prediction": "peaked\ndiscussion: the word \"peaked\"", "cleaned_prediction": "peaked", "gt": "alcanzado"}, {"input_prompt": "Input: prague\nOutput:", "test_query": "prague", "prediction": "prague\ninput: prague\noutput: prague", "cleaned_prediction": "prague", "gt": "Praga"}, {"input_prompt": "Input: engineers\nOutput:", "test_query": "engineers", "prediction": "engineers\ninput: software engineers\noutput: software", "cleaned_prediction": "engineers", "gt": "ingenieros"}, {"input_prompt": "Input: reasons\nOutput:", "test_query": "reasons", "prediction": "reasons\n================\n\n### reasons for using reasons", "cleaned_prediction": "reasons", "gt": "razones"}, {"input_prompt": "Input: temporary\nOutput:", "test_query": "temporary", "prediction": "temporary\ntime complexity: o(n)\nspace complexity", "cleaned_prediction": "temporary", "gt": "temporal"}, {"input_prompt": "Input: must\nOutput:", "test_query": "must", "prediction": "must\ndefinition: (verb) to be obliged", "cleaned_prediction": "must", "gt": "debe"}, {"input_prompt": "Input: especially\nOutput:", "test_query": "especially", "prediction": "especially\ndefinition: (adverb) to a", "cleaned_prediction": "especially", "gt": "especialmente"}, {"input_prompt": "Input: unofficial\nOutput:", "test_query": "unofficial", "prediction": "unofficial\ncategory: unofficial\nwikidoc resources for", "cleaned_prediction": "unofficial", "gt": "no oficial"}, {"input_prompt": "Input: killing\nOutput:", "test_query": "killing", "prediction": "\"killing\" is a verb, which means", "cleaned_prediction": "\"killing\" is a verb, which means", "gt": "asesinato"}, {"input_prompt": "Input: august\nOutput:", "test_query": "august", "prediction": "august is the eighth month of the year in", "cleaned_prediction": "august is the eighth month of the year in", "gt": "agosto"}, {"input_prompt": "Input: centres\nOutput:", "test_query": "centres", "prediction": "clusters\nalgorithm: k-means clustering\nmethod", "cleaned_prediction": "clusters", "gt": "centros"}, {"input_prompt": "Input: renamed\nOutput:", "test_query": "renamed", "prediction": "renamed\ninput: renamed\noutput: renamed", "cleaned_prediction": "renamed", "gt": "renombrado"}, {"input_prompt": "Input: through\nOutput:", "test_query": "through", "prediction": "through\n===============================================================================\n\n# through\n\n## overview", "cleaned_prediction": "through", "gt": "a trav\u00e9s de"}, {"input_prompt": "Input: meeting\nOutput:", "test_query": "meeting", "prediction": "meeting\n\ninput: meetings\noutput: meetings", "cleaned_prediction": "meeting", "gt": "reuni\u00f3n"}, {"input_prompt": "Input: ninth\nOutput:", "test_query": "ninth", "prediction": "\"9th\"\ninput: fourth\noutput:", "cleaned_prediction": "\"9th\"", "gt": "noveno"}, {"input_prompt": "Input: him\nOutput:", "test_query": "him", "prediction": "him\ndefinition: (pronoun) used of", "cleaned_prediction": "him", "gt": "\u00e9l"}, {"input_prompt": "Input: mission\nOutput:", "test_query": "mission", "prediction": "'mission: impossible'\ninput: mission\noutput", "cleaned_prediction": "'mission: impossible'", "gt": "misi\u00f3n"}, {"input_prompt": "Input: developed\nOutput:", "test_query": "developed", "prediction": "developed\nerror: the input and output should not", "cleaned_prediction": "developed", "gt": "desarrollado"}, {"input_prompt": "Input: injury\nOutput:", "test_query": "injury", "prediction": "a sprained ankle is a common injury that can", "cleaned_prediction": "a sprained ankle is a common injury that can", "gt": "lesi\u00f3n"}, {"input_prompt": "Input: race\nOutput:", "test_query": "race", "prediction": "horse racing\ninput: race\noutput: horse", "cleaned_prediction": "horse racing", "gt": "carrera"}, {"input_prompt": "Input: flows\nOutput:", "test_query": "flows", "prediction": "flows\ncontainer: container\ntype: workflow", "cleaned_prediction": "flows", "gt": "flujos"}, {"input_prompt": "Input: bowl\nOutput:", "test_query": "bowl", "prediction": "bowl\n\ninput: bowl\noutput: bowl", "cleaned_prediction": "bowl", "gt": "cuenco"}, {"input_prompt": "Input: screenplay\nOutput:", "test_query": "screenplay", "prediction": "screenplay\nthe story revolves around a young woman named", "cleaned_prediction": "screenplay", "gt": "guion"}, {"input_prompt": "Input: field\nOutput:", "test_query": "field", "prediction": "field\nfixes: #1551\nnotes", "cleaned_prediction": "field", "gt": "campo"}, {"input_prompt": "Input: dome\nOutput:", "test_query": "dome", "prediction": "dome\nexplanation: the word \"dome\"", "cleaned_prediction": "dome", "gt": "c\u00fapula"}, {"input_prompt": "Input: tax\nOutput:", "test_query": "tax", "prediction": "\"tax\"\ninput: bat\noutput: \"", "cleaned_prediction": "\"tax\"", "gt": "impuesto"}, {"input_prompt": "Input: rocket\nOutput:", "test_query": "rocket", "prediction": "\"rocket is a vehicle that uses propulsive mass", "cleaned_prediction": "\"rocket is a vehicle that uses propulsive mass", "gt": "cohete"}, {"input_prompt": "Input: sustainable\nOutput:", "test_query": "sustainable", "prediction": "sustainable\ninput: sustainability\noutput: sustainability", "cleaned_prediction": "sustainable", "gt": "sostenible"}, {"input_prompt": "Input: fled\nOutput:", "test_query": "fled", "prediction": "fled\ndefinition: past tense of flee\n\nexample", "cleaned_prediction": "fled", "gt": "huy\u00f3"}, {"input_prompt": "Input: parade\nOutput:", "test_query": "parade", "prediction": "7\n\nexplanation: the number of letters in", "cleaned_prediction": "7", "gt": "desfile"}, {"input_prompt": "Input: duke\nOutput:", "test_query": "duke", "prediction": "duke\nduke\nduke\nduke", "cleaned_prediction": "duke", "gt": "duque"}, {"input_prompt": "Input: blow\nOutput:", "test_query": "blow", "prediction": "blow\ninput: blow\noutput: blow", "cleaned_prediction": "blow", "gt": "soplar"}, {"input_prompt": "Input: episode\nOutput:", "test_query": "episode", "prediction": "\"the episode that aired on 5/1", "cleaned_prediction": "\"the episode that aired on 5/1", "gt": "episodio"}, {"input_prompt": "Input: policy\nOutput:", "test_query": "policy", "prediction": "policy\nkeywords: model, policy\nwater and", "cleaned_prediction": "policy", "gt": "pol\u00edtica"}, {"input_prompt": "Input: severely\nOutput:", "test_query": "severely", "prediction": "severely\ninput: severely\noutput: severely", "cleaned_prediction": "severely", "gt": "severamente"}, {"input_prompt": "Input: listings\nOutput:", "test_query": "listings", "prediction": "listings\nsteps:\n  1. filter listings", "cleaned_prediction": "listings", "gt": "listados"}, {"input_prompt": "Input: oil\nOutput:", "test_query": "oil", "prediction": "oil\nsteps:\n1. oil is put into", "cleaned_prediction": "oil", "gt": "aceite"}, {"input_prompt": "Input: visiting\nOutput:", "test_query": "visiting", "prediction": "visiting\ndefinition: the act of going to a", "cleaned_prediction": "visiting", "gt": "visitando"}, {"input_prompt": "Input: odd\nOutput:", "test_query": "odd", "prediction": "odd\n\ninput: even\noutput: even", "cleaned_prediction": "odd", "gt": "extra\u00f1o"}, {"input_prompt": "Input: civilians\nOutput:", "test_query": "civilians", "prediction": "civilians\ninput: terrorists\noutput: terrorists", "cleaned_prediction": "civilians", "gt": "civiles"}, {"input_prompt": "Input: season\nOutput:", "test_query": "season", "prediction": "the season is spring.\ninput: summer\noutput", "cleaned_prediction": "the season is spring.", "gt": "estaci\u00f3n"}, {"input_prompt": "Input: stability\nOutput:", "test_query": "stability", "prediction": "stability\ntopics: stability\nthe stability of a", "cleaned_prediction": "stability", "gt": "estabilidad"}, {"input_prompt": "Input: speaking\nOutput:", "test_query": "speaking", "prediction": "the way you say it is a very important part", "cleaned_prediction": "the way you say it is a very important part", "gt": "hablando"}, {"input_prompt": "Input: majority\nOutput:", "test_query": "majority", "prediction": "1. if the input is a", "cleaned_prediction": "1. if the input is a", "gt": "mayor\u00eda"}, {"input_prompt": "Input: perhaps\nOutput:", "test_query": "perhaps", "prediction": "perhaps\nspelling suggestions for \"perhaps\",", "cleaned_prediction": "perhaps", "gt": "quiz\u00e1s"}, {"input_prompt": "Input: southwestern\nOutput:", "test_query": "southwestern", "prediction": "the southwestern region of the united states is known for", "cleaned_prediction": "the southwestern region of the united states is known for", "gt": "suroeste"}, {"input_prompt": "Input: amazing\nOutput:", "test_query": "amazing", "prediction": "amazing is a great word. it is used to", "cleaned_prediction": "amazing is a great word. it is used to", "gt": "incre\u00edble"}, {"input_prompt": "Input: student\nOutput:", "test_query": "student", "prediction": "student\ninput: code\noutput: code", "cleaned_prediction": "student", "gt": "estudiante"}, {"input_prompt": "Input: finals\nOutput:", "test_query": "finals", "prediction": "final exam\ninput: exames\noutput:", "cleaned_prediction": "final exam", "gt": "finales"}, {"input_prompt": "Input: observer\nOutput:", "test_query": "observer", "prediction": "observer\ntypes: class\nresponsibilities:", "cleaned_prediction": "observer", "gt": "observador"}, {"input_prompt": "Input: firing\nOutput:", "test_query": "firing", "prediction": "firing\n======\n\n### firing a gun", "cleaned_prediction": "firing", "gt": "despido"}, {"input_prompt": "Input: bill\nOutput:", "test_query": "bill", "prediction": "\"that's a nice name!\"\ninput: a", "cleaned_prediction": "\"that's a nice name!\"", "gt": "factura"}, {"input_prompt": "Input: whole\nOutput:", "test_query": "whole", "prediction": "whole\nx = 5\ny =", "cleaned_prediction": "whole", "gt": "entero"}, {"input_prompt": "Input: starring\nOutput:", "test_query": "starring", "prediction": "starring\nthe starring role is a central role in", "cleaned_prediction": "starring", "gt": "protagonizado por"}, {"input_prompt": "Input: sweden\nOutput:", "test_query": "sweden", "prediction": "sweden\ninput: spain\noutput: spain", "cleaned_prediction": "sweden", "gt": "suecia"}, {"input_prompt": "Input: regularly\nOutput:", "test_query": "regularly", "prediction": "regular\nspelling correction for \"regularly\"", "cleaned_prediction": "regular", "gt": "regularmente"}, {"input_prompt": "Input: copies\nOutput:", "test_query": "copies", "prediction": "copy\nexplanation: the word \"copies\" spelled", "cleaned_prediction": "copy", "gt": "copias"}, {"input_prompt": "Input: happens\nOutput:", "test_query": "happens", "prediction": "happens\ndiffence: 0\n\ninput:", "cleaned_prediction": "happens", "gt": "sucede"}, {"input_prompt": "Input: presidency\nOutput:", "test_query": "presidency", "prediction": "presidency\n---------------------------\nthe presidency is the office and", "cleaned_prediction": "presidency", "gt": "presidencia"}, {"input_prompt": "Input: kids\nOutput:", "test_query": "kids", "prediction": "```\nthe kids are playing with the ball", "cleaned_prediction": "```", "gt": "ni\u00f1os"}, {"input_prompt": "Input: possibility\nOutput:", "test_query": "possibility", "prediction": "possibility\ndefinition: a possible or imaginary situation", "cleaned_prediction": "possibility", "gt": "posibilidad"}, {"input_prompt": "Input: stuff\nOutput:", "test_query": "stuff", "prediction": "stuff\nthis is a simple program that takes a", "cleaned_prediction": "stuff", "gt": "cosas"}, {"input_prompt": "Input: membership\nOutput:", "test_query": "membership", "prediction": "membership\npublished by sophia patel on september 9", "cleaned_prediction": "membership", "gt": "membres\u00eda"}, {"input_prompt": "Input: cyprus\nOutput:", "test_query": "cyprus", "prediction": "cyprus\n\ninput: sweden\noutput: sweden", "cleaned_prediction": "cyprus", "gt": "Chipre"}, {"input_prompt": "Input: engine\nOutput:", "test_query": "engine", "prediction": "engine\n##### step 1: understand the problem", "cleaned_prediction": "engine", "gt": "motor"}, {"input_prompt": "Input: custom\nOutput:", "test_query": "custom", "prediction": "custom\nduration: 1\ndescription: custom", "cleaned_prediction": "custom", "gt": "costumbre"}, {"input_prompt": "Input: cinema\nOutput:", "test_query": "cinema", "prediction": "a: 0\n    b:", "cleaned_prediction": "a: 0", "gt": "cine"}, {"input_prompt": "Input: dynasty\nOutput:", "test_query": "dynasty", "prediction": "dynasty\ninput: dynasty\noutput: dynasty", "cleaned_prediction": "dynasty", "gt": "dinast\u00eda"}, {"input_prompt": "Input: day\nOutput:", "test_query": "day", "prediction": "day 1: 1\nday", "cleaned_prediction": "day 1: 1", "gt": "d\u00eda"}, {"input_prompt": "Input: occurs\nOutput:", "test_query": "occurs", "prediction": "occurs\nduration: 0 ms\nsuccess:", "cleaned_prediction": "occurs", "gt": "ocurre"}, {"input_prompt": "Input: boarding\nOutput:", "test_query": "boarding", "prediction": "boarding_pass\n\ninput: flight\noutput: flight", "cleaned_prediction": "boarding_pass", "gt": "embarque"}, {"input_prompt": "Input: reader\nOutput:", "test_query": "reader", "prediction": "writer\n\nthe `get_unique_columns` function returns", "cleaned_prediction": "writer", "gt": "lector"}, {"input_prompt": "Input: rise\nOutput:", "test_query": "rise", "prediction": "rise\ninput: rises\noutput: rise", "cleaned_prediction": "rise", "gt": "subir"}, {"input_prompt": "Input: prose\nOutput:", "test_query": "prose", "prediction": "poetry\nhere is an example of a prose passage", "cleaned_prediction": "poetry", "gt": "prosa"}, {"input_prompt": "Input: educational\nOutput:", "test_query": "educational", "prediction": "educational\ni was born in 1892,", "cleaned_prediction": "educational", "gt": "educativo"}, {"input_prompt": "Input: illustrate\nOutput:", "test_query": "illustrate", "prediction": "illustrate\nsynonyms: depict, portray, represent", "cleaned_prediction": "illustrate", "gt": "ilustrar"}, {"input_prompt": "Input: spy\nOutput:", "test_query": "spy", "prediction": "spy\ninput: 12345\noutput:", "cleaned_prediction": "spy", "gt": "esp\u00eda"}, {"input_prompt": "Input: championship\nOutput:", "test_query": "championship", "prediction": "(championship)\ninput: champions\noutput:", "cleaned_prediction": "(championship)", "gt": "campeonato"}, {"input_prompt": "Input: nice\nOutput:", "test_query": "nice", "prediction": "nice\n\ninput: abc\noutput: abc", "cleaned_prediction": "nice", "gt": "agradable"}, {"input_prompt": "Input: possible\nOutput:", "test_query": "possible", "prediction": "possible\nexplanation: the string \"possible\" can", "cleaned_prediction": "possible", "gt": "posible"}, {"input_prompt": "Input: according\nOutput:", "test_query": "according", "prediction": "according\naccording\n\n1.  according to the", "cleaned_prediction": "according", "gt": "seg\u00fan"}, {"input_prompt": "Input: charges\nOutput:", "test_query": "charges", "prediction": "charges\ncategories: health, wellness\ntags:", "cleaned_prediction": "charges", "gt": "cargos"}, {"input_prompt": "Input: existed\nOutput:", "test_query": "existed", "prediction": "existed\ninput: nonexisted\noutput:", "cleaned_prediction": "existed", "gt": "existi\u00f3"}, {"input_prompt": "Input: ordinary\nOutput:", "test_query": "ordinary", "prediction": "extraordinary\nthe ordinary things in life are the extraordinary", "cleaned_prediction": "extraordinary", "gt": "ordinario"}, {"input_prompt": "Input: pilots\nOutput:", "test_query": "pilots", "prediction": "pilots\ninput: pilot\noutput: pilots", "cleaned_prediction": "pilots", "gt": "pilotos"}, {"input_prompt": "Input: waters\nOutput:", "test_query": "waters", "prediction": "waters\ninput: codeforces\noutput: code", "cleaned_prediction": "waters", "gt": "aguas"}, {"input_prompt": "Input: allegations\nOutput:", "test_query": "allegations", "prediction": "allegations\ndefinition: statements or claims that are made", "cleaned_prediction": "allegations", "gt": "alegaciones"}, {"input_prompt": "Input: dean\nOutput:", "test_query": "dean", "prediction": "\"the dean of the university is a very important", "cleaned_prediction": "\"the dean of the university is a very important", "gt": "decano"}, {"input_prompt": "Input: monster\nOutput:", "test_query": "monster", "prediction": "\"hello, monster!\"\ninput: dog\noutput", "cleaned_prediction": "\"hello, monster!\"", "gt": "monstruo"}, {"input_prompt": "Input: locally\nOutput:", "test_query": "locally", "prediction": "locally\nexamples:\n- locally, the sun", "cleaned_prediction": "locally", "gt": "localmente"}, {"input_prompt": "Input: armed\nOutput:", "test_query": "armed", "prediction": "armed\ndefinition: equipped with weapons or having weapons", "cleaned_prediction": "armed", "gt": "armado"}, {"input_prompt": "Input: differences\nOutput:", "test_query": "differences", "prediction": "differences\nrevision: 1\ndate:", "cleaned_prediction": "differences", "gt": "diferencias"}, {"input_prompt": "Input: debt\nOutput:", "test_query": "debt", "prediction": "debt\ninput: credit\noutput: credit", "cleaned_prediction": "debt", "gt": "deuda"}, {"input_prompt": "Input: afghanistan\nOutput:", "test_query": "afghanistan", "prediction": "afghanistan\n\ninput: azerbaijan\noutput:", "cleaned_prediction": "afghanistan", "gt": "Afganist\u00e1n"}, {"input_prompt": "Input: faces\nOutput:", "test_query": "faces", "prediction": "faces with added 'x' and 'y'", "cleaned_prediction": "faces with added 'x' and 'y'", "gt": "caras"}, {"input_prompt": "Input: heat\nOutput:", "test_query": "heat", "prediction": "warmth\nvariations: heat wave, warmth", "cleaned_prediction": "warmth", "gt": "calor"}, {"input_prompt": "Input: investigate\nOutput:", "test_query": "investigate", "prediction": "investigate\nparaphrase: investigate\nsyn", "cleaned_prediction": "investigate", "gt": "investigar"}, {"input_prompt": "Input: newspapers\nOutput:", "test_query": "newspapers", "prediction": "newspapers\noutput: newspapers\noutput: newspapers", "cleaned_prediction": "newspapers", "gt": "peri\u00f3dicos"}, {"input_prompt": "Input: length\nOutput:", "test_query": "length", "prediction": "length of string\nfunction: string_length\n\n```", "cleaned_prediction": "length of string", "gt": "longitud"}, {"input_prompt": "Input: peace\nOutput:", "test_query": "peace", "prediction": "peace of mind\nsynonyms: calmness,", "cleaned_prediction": "peace of mind", "gt": "paz"}, {"input_prompt": "Input: gone\nOutput:", "test_query": "gone", "prediction": "gone\nwikipedia: gone\n\n# definition for", "cleaned_prediction": "gone", "gt": "ido"}, {"input_prompt": "Input: graduating\nOutput:", "test_query": "graduating", "prediction": "congratulations on your graduation! you must be so proud", "cleaned_prediction": "congratulations on your graduation! you must be so proud", "gt": "graduando"}, {"input_prompt": "Input: who\nOutput:", "test_query": "who", "prediction": "who\n\ninput: hello\noutput: hello", "cleaned_prediction": "who", "gt": "quien"}, {"input_prompt": "Input: journalism\nOutput:", "test_query": "journalism", "prediction": "information\nprocess: research, analysis, writing", "cleaned_prediction": "information", "gt": "periodismo"}, {"input_prompt": "Input: hello\nOutput:", "test_query": "hello", "prediction": "h  e  l  l  o", "cleaned_prediction": "h  e  l  l  o", "gt": "hola"}, {"input_prompt": "Input: recall\nOutput:", "test_query": "recall", "prediction": "recall\nerror: 0\naccuracy:", "cleaned_prediction": "recall", "gt": "recordar"}, {"input_prompt": "Input: hoping\nOutput:", "test_query": "hoping", "prediction": "hopeful\nword: hopeful\ndefinition: having or", "cleaned_prediction": "hopeful", "gt": "esperando"}, {"input_prompt": "Input: playoff\nOutput:", "test_query": "playoff", "prediction": "play off\ninput: playoffs\noutput: play", "cleaned_prediction": "play off", "gt": "eliminatoria"}, {"input_prompt": "Input: charge\nOutput:", "test_query": "charge", "prediction": "charge\nmodel type: sequence-to-sequence", "cleaned_prediction": "charge", "gt": "cargar"}, {"input_prompt": "Input: parties\nOutput:", "test_query": "parties", "prediction": "parties\n\n## step 1: define the problem", "cleaned_prediction": "parties", "gt": "fiestas"}, {"input_prompt": "Input: innocent\nOutput:", "test_query": "innocent", "prediction": "innocent\nexplanation: the string \"innocent", "cleaned_prediction": "innocent", "gt": "inocente"}, {"input_prompt": "Input: anywhere\nOutput:", "test_query": "anywhere", "prediction": "anywhere\nwilliam h. mcneill, a historian", "cleaned_prediction": "anywhere", "gt": "en cualquier lugar"}, {"input_prompt": "Input: kilometers\nOutput:", "test_query": "kilometers", "prediction": "miles\n\n1 km = 0.621371", "cleaned_prediction": "miles", "gt": "kil\u00f3metros"}, {"input_prompt": "Input: napoleon\nOutput:", "test_query": "napoleon", "prediction": "napoleon bonaparte (1769-1821", "cleaned_prediction": "napoleon bonaparte (1769-1821", "gt": "Napole\u00f3n"}, {"input_prompt": "Input: marsh\nOutput:", "test_query": "marsh", "prediction": "marsh\ninput: hilly\noutput: h", "cleaned_prediction": "marsh", "gt": "pantano"}, {"input_prompt": "Input: greek\nOutput:", "test_query": "greek", "prediction": "'greek' is not a valid language code.", "cleaned_prediction": "'greek' is not a valid language code.", "gt": "griego"}, {"input_prompt": "Input: max\nOutput:", "test_query": "max", "prediction": "max\n\ninput: 5\noutput:", "cleaned_prediction": "max", "gt": "m\u00e1ximo"}]}