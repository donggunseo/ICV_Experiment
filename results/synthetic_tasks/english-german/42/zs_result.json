{"score": {"exact_match": 0.0}, "result": [{"input_prompt": "Input: brook\nOutput:", "test_query": "brook", "prediction": "a brook is a small, narrow stream of", "cleaned_prediction": "a brook is a small, narrow stream of", "gt": "bach"}, {"input_prompt": "Input: suggesting\nOutput:", "test_query": "suggesting", "prediction": "the phrase \"suggesting\" is a present partic", "cleaned_prediction": "the phrase \"suggesting\" is a present partic", "gt": "vorschlagen"}, {"input_prompt": "Input: vocals\nOutput:", "test_query": "vocals", "prediction": "instrumental\ninput: instrumental\noutput: vocals", "cleaned_prediction": "instrumental", "gt": "Gesang"}, {"input_prompt": "Input: released\nOutput:", "test_query": "released", "prediction": "released\nrevision: 2\n================================================\n#", "cleaned_prediction": "released", "gt": "freigegeben"}, {"input_prompt": "Input: preference\nOutput:", "test_query": "preference", "prediction": "preference\n```python\ndef find_preferences(preferences", "cleaned_prediction": "preference", "gt": "vorliebe"}, {"input_prompt": "Input: polish\nOutput:", "test_query": "polish", "prediction": "english\nlanguage: polish\nversion: 1", "cleaned_prediction": "english", "gt": "polieren"}, {"input_prompt": "Input: fellow\nOutput:", "test_query": "fellow", "prediction": "fellow\ninput: fellow\noutput: fellow", "cleaned_prediction": "fellow", "gt": "kamerad"}, {"input_prompt": "Input: october\nOutput:", "test_query": "october", "prediction": "10\n\ninput: january\noutput:", "cleaned_prediction": "10", "gt": "Oktober"}, {"input_prompt": "Input: subsequently\nOutput:", "test_query": "subsequently", "prediction": "subsequently\nmeaning: in or at a later", "cleaned_prediction": "subsequently", "gt": "anschlie\u00dfend"}, {"input_prompt": "Input: works\nOutput:", "test_query": "works", "prediction": "works\nexplanation: the input is already a palindrome", "cleaned_prediction": "works", "gt": "arbeiten"}, {"input_prompt": "Input: sequel\nOutput:", "test_query": "sequel", "prediction": "sequel\nexplanation: the word \"sequel\"", "cleaned_prediction": "sequel", "gt": "fortsetzung"}, {"input_prompt": "Input: bio\nOutput:", "test_query": "bio", "prediction": "bio\ninput: apple\noutput: apple", "cleaned_prediction": "bio", "gt": "Lebenslauf"}, {"input_prompt": "Input: stand\nOutput:", "test_query": "stand", "prediction": "stand\ncorrected output: stand\ncorrected", "cleaned_prediction": "stand", "gt": "stehen"}, {"input_prompt": "Input: thread\nOutput:", "test_query": "thread", "prediction": "thread\ninput: threads\noutput: threads", "cleaned_prediction": "thread", "gt": "faden"}, {"input_prompt": "Input: dragon\nOutput:", "test_query": "dragon", "prediction": "the dragon is a mythical creature that is often", "cleaned_prediction": "the dragon is a mythical creature that is often", "gt": "drache"}, {"input_prompt": "Input: mediation\nOutput:", "test_query": "mediation", "prediction": "mediation\ncategory: psychology\ndescription: mediation", "cleaned_prediction": "mediation", "gt": "Vermittlung"}, {"input_prompt": "Input: this\nOutput:", "test_query": "this", "prediction": "this\npurpose: to create a new object that", "cleaned_prediction": "this", "gt": "dieses"}, {"input_prompt": "Input: returns\nOutput:", "test_query": "returns", "prediction": "returns\nerror: the error message is not provided", "cleaned_prediction": "returns", "gt": "R\u00fcckgaben"}, {"input_prompt": "Input: championship\nOutput:", "test_query": "championship", "prediction": "the championship is a title or trophy awarded to the", "cleaned_prediction": "the championship is a title or trophy awarded to the", "gt": "meisterschaft"}, {"input_prompt": "Input: deployed\nOutput:", "test_query": "deployed", "prediction": "deployed\nduration: 2\ntime complexity:", "cleaned_prediction": "deployed", "gt": "eingesetzt"}, {"input_prompt": "Input: borders\nOutput:", "test_query": "borders", "prediction": "borders\ndescription: a list of strings representing the", "cleaned_prediction": "borders", "gt": "grenzen"}, {"input_prompt": "Input: globe\nOutput:", "test_query": "globe", "prediction": "globe\nexplanation: the input string \"globe", "cleaned_prediction": "globe", "gt": "globus"}, {"input_prompt": "Input: employees\nOutput:", "test_query": "employees", "prediction": "employees\n\nrules:\n- the function takes in an", "cleaned_prediction": "employees", "gt": "mitarbeiter"}, {"input_prompt": "Input: talks\nOutput:", "test_query": "talks", "prediction": "talk\ninput: talked\noutput: talked", "cleaned_prediction": "talk", "gt": "gespr\u00e4che"}, {"input_prompt": "Input: write\nOutput:", "test_query": "write", "prediction": "write\ntime complexity: o(1)\nspace", "cleaned_prediction": "write", "gt": "schreiben"}, {"input_prompt": "Input: restored\nOutput:", "test_query": "restored", "prediction": "restored\nexplanation:\nthe input string is already a", "cleaned_prediction": "restored", "gt": "wiederhergestellt"}, {"input_prompt": "Input: commanding\nOutput:", "test_query": "commanding", "prediction": "commanding\ndefinition: (of a person) giving", "cleaned_prediction": "commanding", "gt": "befehlend"}, {"input_prompt": "Input: prisoner\nOutput:", "test_query": "prisoner", "prediction": "\"the prisoner was released.\"\nexplanation: the code", "cleaned_prediction": "\"the prisoner was released.\"", "gt": "gefangener"}, {"input_prompt": "Input: violence\nOutput:", "test_query": "violence", "prediction": "violence\noutput: violence\noutput: violence", "cleaned_prediction": "violence", "gt": "Gewalt"}, {"input_prompt": "Input: egypt\nOutput:", "test_query": "egypt", "prediction": "egypt is a country located in northeastern africa.", "cleaned_prediction": "egypt is a country located in northeastern africa.", "gt": "\u00c4gypten"}, {"input_prompt": "Input: clean\nOutput:", "test_query": "clean", "prediction": "clean\n\ninput: dirty\noutput: dirty", "cleaned_prediction": "clean", "gt": "sauber"}, {"input_prompt": "Input: stages\nOutput:", "test_query": "stages", "prediction": "stages_completed, stages_not_completed, stages_total", "cleaned_prediction": "stages_completed, stages_not_completed, stages_total", "gt": "Stufen"}, {"input_prompt": "Input: naples\nOutput:", "test_query": "naples", "prediction": "naples\ncorrected: naples\n\ninput: nap", "cleaned_prediction": "naples", "gt": "Neapel"}, {"input_prompt": "Input: language\nOutput:", "test_query": "language", "prediction": "language\ncomparing the two input strings, we", "cleaned_prediction": "language", "gt": "sprache"}, {"input_prompt": "Input: cap\nOutput:", "test_query": "cap", "prediction": "1. the capacity of the container is", "cleaned_prediction": "1. the capacity of the container is", "gt": "m\u00fctze"}, {"input_prompt": "Input: painter\nOutput:", "test_query": "painter", "prediction": "\"the painter painted the painting.\"\n\nexplanation: the", "cleaned_prediction": "\"the painter painted the painting.\"", "gt": "maler"}, {"input_prompt": "Input: custom\nOutput:", "test_query": "custom", "prediction": "custom\nduration: 1:30\ntime", "cleaned_prediction": "custom", "gt": "brauch"}, {"input_prompt": "Input: glass\nOutput:", "test_query": "glass", "prediction": "glass\nexplanation: the word \"glass\" is", "cleaned_prediction": "glass", "gt": "glas"}, {"input_prompt": "Input: naturally\nOutput:", "test_query": "naturally", "prediction": "naturally\nexamples:\n*   input: \"i", "cleaned_prediction": "naturally", "gt": "nat\u00fcrlich"}, {"input_prompt": "Input: months\nOutput:", "test_query": "months", "prediction": "12\n\ninput: days\noutput:", "cleaned_prediction": "12", "gt": "Monate"}, {"input_prompt": "Input: these\nOutput:", "test_query": "these", "prediction": "1\nexplanation: 1 is the only", "cleaned_prediction": "1", "gt": "diese"}, {"input_prompt": "Input: quantity\nOutput:", "test_query": "quantity", "prediction": "quantity\nentirely new concept\nthe concept", "cleaned_prediction": "quantity", "gt": "Menge"}, {"input_prompt": "Input: charges\nOutput:", "test_query": "charges", "prediction": "charges\nerror: invalid syntax\nhint: use", "cleaned_prediction": "charges", "gt": "geb\u00fchren"}, {"input_prompt": "Input: #the\nOutput:", "test_query": "#the", "prediction": "#the\ninput: #the\noutput:", "cleaned_prediction": "#the", "gt": "das"}, {"input_prompt": "Input: cult\nOutput:", "test_query": "cult", "prediction": "cult\nspelling: c-u-l-t", "cleaned_prediction": "cult", "gt": "Kult"}, {"input_prompt": "Input: structures\nOutput:", "test_query": "structures", "prediction": "structures\nsort by: popularity\n1.", "cleaned_prediction": "structures", "gt": "strukturen"}, {"input_prompt": "Input: versions\nOutput:", "test_query": "versions", "prediction": "- `latest` is the latest version of", "cleaned_prediction": "- `latest` is the latest version of", "gt": "Versionen"}, {"input_prompt": "Input: come\nOutput:", "test_query": "come", "prediction": "come\nexplanation: the string is already a palindrome", "cleaned_prediction": "come", "gt": "kommen"}, {"input_prompt": "Input: queen\nOutput:", "test_query": "queen", "prediction": "queen\ninput: queen\noutput: queen", "cleaned_prediction": "queen", "gt": "k\u00f6nigin"}, {"input_prompt": "Input: big\nOutput:", "test_query": "big", "prediction": "big\ninput: 2\noutput:", "cleaned_prediction": "big", "gt": "gro\u00df"}, {"input_prompt": "Input: citations\nOutput:", "test_query": "citations", "prediction": "h-index\nexplanation: the citations indicate the number", "cleaned_prediction": "h-index", "gt": "Zitate"}, {"input_prompt": "Input: consideration\nOutput:", "test_query": "consideration", "prediction": "consideration\nrelated to: consideration\nsynonyms:", "cleaned_prediction": "consideration", "gt": "Ber\u00fccksichtigung"}, {"input_prompt": "Input: animated\nOutput:", "test_query": "animated", "prediction": "animated\nerror: graphviz error (return code", "cleaned_prediction": "animated", "gt": "animiert"}, {"input_prompt": "Input: explanation\nOutput:", "test_query": "explanation", "prediction": "explanation\nthe explanation is a written account of how", "cleaned_prediction": "explanation", "gt": "Erkl\u00e4rung"}, {"input_prompt": "Input: hip\nOutput:", "test_query": "hip", "prediction": "'hi' and 'p'\ninput: hello", "cleaned_prediction": "'hi' and 'p'", "gt": "H\u00fcfte"}, {"input_prompt": "Input: existed\nOutput:", "test_query": "existed", "prediction": "existed\n\ninput: existence\noutput: existence", "cleaned_prediction": "existed", "gt": "existiert"}, {"input_prompt": "Input: legislative\nOutput:", "test_query": "legislative", "prediction": "legislation\nthe word legislative is a noun that refers", "cleaned_prediction": "legislation", "gt": "gesetzgebend"}, {"input_prompt": "Input: operational\nOutput:", "test_query": "operational", "prediction": "operational\ndefinition: functioning or in use,", "cleaned_prediction": "operational", "gt": "betriebsbereit"}, {"input_prompt": "Input: love\nOutput:", "test_query": "love", "prediction": "\"love is in the air! \"\ninput:", "cleaned_prediction": "\"love is in the air! \"", "gt": "liebe"}, {"input_prompt": "Input: checking\nOutput:", "test_query": "checking", "prediction": "chekin\nexplanation: the string \"checking\"", "cleaned_prediction": "chekin", "gt": "\u00fcberpr\u00fcfen"}, {"input_prompt": "Input: manufacturer\nOutput:", "test_query": "manufacturer", "prediction": "manufacturer\nthe manufacturer is a company that produces goods", "cleaned_prediction": "manufacturer", "gt": "hersteller"}, {"input_prompt": "Input: gay\nOutput:", "test_query": "gay", "prediction": "*   [1, 2,", "cleaned_prediction": "*   [1, 2,", "gt": "schwul"}, {"input_prompt": "Input: rate\nOutput:", "test_query": "rate", "prediction": "rate\ntopics: rate\n\n# how to calculate", "cleaned_prediction": "rate", "gt": "bewerten"}, {"input_prompt": "Input: centuries\nOutput:", "test_query": "centuries", "prediction": "1. 1900\n2.", "cleaned_prediction": "1. 1900", "gt": "Jahrhunderte"}, {"input_prompt": "Input: lose\nOutput:", "test_query": "lose", "prediction": "\"i'm sorry to hear that. what happened", "cleaned_prediction": "\"i'm sorry to hear that. what happened", "gt": "verlieren"}, {"input_prompt": "Input: error\nOutput:", "test_query": "error", "prediction": "error: invalid input\ninput: 5", "cleaned_prediction": "error: invalid input", "gt": "Fehler"}, {"input_prompt": "Input: uses\nOutput:", "test_query": "uses", "prediction": "uses\norder: 1\npriority:", "cleaned_prediction": "uses", "gt": "verwendet"}, {"input_prompt": "Input: automatically\nOutput:", "test_query": "automatically", "prediction": "automatically\nproblem: automatically\ndefinition: (ad", "cleaned_prediction": "automatically", "gt": "automatisch"}, {"input_prompt": "Input: replaced\nOutput:", "test_query": "replaced", "prediction": "replaced\ninput: replace\noutput: replace", "cleaned_prediction": "replaced", "gt": "ersetzt"}, {"input_prompt": "Input: ability\nOutput:", "test_query": "ability", "prediction": "ability\nguess the output of the input \"ability", "cleaned_prediction": "ability", "gt": "F\u00e4higkeit"}, {"input_prompt": "Input: university\nOutput:", "test_query": "university", "prediction": "a university is an institution of higher education and research", "cleaned_prediction": "a university is an institution of higher education and research", "gt": "universit\u00e4t"}, {"input_prompt": "Input: excellence\nOutput:", "test_query": "excellence", "prediction": "excellence\ninput: excellence\noutput: excellence", "cleaned_prediction": "excellence", "gt": "Exzellenz"}, {"input_prompt": "Input: trek\nOutput:", "test_query": "trek", "prediction": "\"trek\" is a term used in the", "cleaned_prediction": "\"trek\" is a term used in the", "gt": "Wanderung"}, {"input_prompt": "Input: showed\nOutput:", "test_query": "showed", "prediction": "showed\nexplanation: this word is already in the", "cleaned_prediction": "showed", "gt": "gezeigt"}, {"input_prompt": "Input: ammunition\nOutput:", "test_query": "ammunition", "prediction": "ammunition\n?:\nbullet\ncartridge\nclip", "cleaned_prediction": "ammunition", "gt": "munition"}, {"input_prompt": "Input: rush\nOutput:", "test_query": "rush", "prediction": "rush\n\ninput: ssss\noutput: s", "cleaned_prediction": "rush", "gt": "eilen"}, {"input_prompt": "Input: easily\nOutput:", "test_query": "easily", "prediction": "easily\nexplanation:\nthe word \"easily\"", "cleaned_prediction": "easily", "gt": "leicht"}, {"input_prompt": "Input: gaelic\nOutput:", "test_query": "gaelic", "prediction": "ga\n```\nfunction getlanguagecode(language)", "cleaned_prediction": "ga", "gt": "g\u00e4lisch"}, {"input_prompt": "Input: needs\nOutput:", "test_query": "needs", "prediction": "needs\ndefinition: the needs of a person,", "cleaned_prediction": "needs", "gt": "bed\u00fcrfnisse"}, {"input_prompt": "Input: maps\nOutput:", "test_query": "maps", "prediction": "list of dictionaries\n\"\"\"\nfrom typing import list,", "cleaned_prediction": "list of dictionaries", "gt": "karten"}, {"input_prompt": "Input: trains\nOutput:", "test_query": "trains", "prediction": "trains\ninput: trains\noutput: trains", "cleaned_prediction": "trains", "gt": "Z\u00fcge"}, {"input_prompt": "Input: intensity\nOutput:", "test_query": "intensity", "prediction": "intensity\nbatch_size : optinal[ int ]", "cleaned_prediction": "intensity", "gt": "Intensit\u00e4t"}, {"input_prompt": "Input: week\nOutput:", "test_query": "week", "prediction": "\"weeks\"\ninput: days\noutput:", "cleaned_prediction": "\"weeks\"", "gt": "woche"}, {"input_prompt": "Input: directions\nOutput:", "test_query": "directions", "prediction": "the result of applying the given sequence of directions to", "cleaned_prediction": "the result of applying the given sequence of directions to", "gt": "richtungen"}, {"input_prompt": "Input: jets\nOutput:", "test_query": "jets", "prediction": "jets\ncapitalized: jets\nupperc", "cleaned_prediction": "jets", "gt": "D\u00fcsenjets"}, {"input_prompt": "Input: horse\nOutput:", "test_query": "horse", "prediction": "\"the horse is a mammal. it has", "cleaned_prediction": "\"the horse is a mammal. it has", "gt": "pferd"}, {"input_prompt": "Input: privacy\nOutput:", "test_query": "privacy", "prediction": "privacy\n##### problem\na system of linear equations", "cleaned_prediction": "privacy", "gt": "Privatsph\u00e4re"}, {"input_prompt": "Input: couple\nOutput:", "test_query": "couple", "prediction": "couple (noun) - a pair of people who", "cleaned_prediction": "couple (noun) - a pair of people who", "gt": "paar"}, {"input_prompt": "Input: belgian\nOutput:", "test_query": "belgian", "prediction": "belgian\ninput: belgium\noutput: belgian", "cleaned_prediction": "belgian", "gt": "belgisch"}, {"input_prompt": "Input: editions\nOutput:", "test_query": "editions", "prediction": "editions\ninput: editions\noutput: editions", "cleaned_prediction": "editions", "gt": "Ausgaben"}, {"input_prompt": "Input: publishers\nOutput:", "test_query": "publishers", "prediction": "publishers\ninput: publishers\noutput: publishers", "cleaned_prediction": "publishers", "gt": "verleger"}, {"input_prompt": "Input: rural\nOutput:", "test_query": "rural", "prediction": "rural\ndefinition: (of a settlement) located", "cleaned_prediction": "rural", "gt": "l\u00e4ndlich"}, {"input_prompt": "Input: mysterious\nOutput:", "test_query": "mysterious", "prediction": "'mysterious' is a word that is often", "cleaned_prediction": "'mysterious' is a word that is often", "gt": "geheimnisvoll"}, {"input_prompt": "Input: believed\nOutput:", "test_query": "believed", "prediction": "believed\ndefinition: (verb) to accept or", "cleaned_prediction": "believed", "gt": "geglaubt"}, {"input_prompt": "Input: logic\nOutput:", "test_query": "logic", "prediction": "logic\n================\n\n### logic gates\n\nlogic gates", "cleaned_prediction": "logic", "gt": "Logik"}, {"input_prompt": "Input: males\nOutput:", "test_query": "males", "prediction": "```\n['male','male', '", "cleaned_prediction": "```", "gt": "m\u00e4nnlich"}, {"input_prompt": "Input: telephone\nOutput:", "test_query": "telephone", "prediction": "\"hello, how are you?\"\ninput: cat", "cleaned_prediction": "\"hello, how are you?\"", "gt": "telefon"}, {"input_prompt": "Input: underground\nOutput:", "test_query": "underground", "prediction": "'underground' (no change)\nexplanation:", "cleaned_prediction": "'underground' (no change)", "gt": "U-Bahn"}, {"input_prompt": "Input: never\nOutput:", "test_query": "never", "prediction": "never\nexplanation: the loop will run indefinitely because", "cleaned_prediction": "never", "gt": "niemals"}, {"input_prompt": "Input: ranked\nOutput:", "test_query": "ranked", "prediction": "ranked\nduration: 1 minute\ndescription:", "cleaned_prediction": "ranked", "gt": "rangiert"}, {"input_prompt": "Input: tasmania\nOutput:", "test_query": "tasmania", "prediction": "tasmania\ninput: tasmania\noutput: tasmania", "cleaned_prediction": "tasmania", "gt": "Tasmanien"}, {"input_prompt": "Input: school\nOutput:", "test_query": "school", "prediction": "\"school\"\ninput: \"bicycle\"\noutput", "cleaned_prediction": "\"school\"", "gt": "schule"}, {"input_prompt": "Input: syrian\nOutput:", "test_query": "syrian", "prediction": "'syrian' is the adjective form of '", "cleaned_prediction": "'syrian' is the adjective form of '", "gt": "syrisch"}, {"input_prompt": "Input: referee\nOutput:", "test_query": "referee", "prediction": "\"referee\"\ninput: referee\noutput:", "cleaned_prediction": "\"referee\"", "gt": "schiedsrichter"}, {"input_prompt": "Input: singer\nOutput:", "test_query": "singer", "prediction": "a singer is a person who sings, typically as", "cleaned_prediction": "a singer is a person who sings, typically as", "gt": "s\u00e4nger"}, {"input_prompt": "Input: revert\nOutput:", "test_query": "revert", "prediction": "revert\ninput: hello\noutput: hello", "cleaned_prediction": "revert", "gt": "zur\u00fcckkehren"}, {"input_prompt": "Input: exactly\nOutput:", "test_query": "exactly", "prediction": "exactly\ninput: exactly\noutput: exactly", "cleaned_prediction": "exactly", "gt": "genau"}, {"input_prompt": "Input: instruments\nOutput:", "test_query": "instruments", "prediction": "instruments\n\n## step 1: define the problem", "cleaned_prediction": "instruments", "gt": "Instrumente"}, {"input_prompt": "Input: substantial\nOutput:", "test_query": "substantial", "prediction": "substantial\nmeaning: considerable in amount, degree", "cleaned_prediction": "substantial", "gt": "wesentlich"}, {"input_prompt": "Input: unions\nOutput:", "test_query": "unions", "prediction": "unions\npractice: unions\n1. a union", "cleaned_prediction": "unions", "gt": "Gewerkschaften"}, {"input_prompt": "Input: piano\nOutput:", "test_query": "piano", "prediction": "music\nthis is a simple example of a model", "cleaned_prediction": "music", "gt": "klavier"}, {"input_prompt": "Input: captured\nOutput:", "test_query": "captured", "prediction": "captured\nduration: 0.01 s", "cleaned_prediction": "captured", "gt": "gefangen"}, {"input_prompt": "Input: poor\nOutput:", "test_query": "poor", "prediction": "poor\ninput: rich\noutput: rich", "cleaned_prediction": "poor", "gt": "arm"}, {"input_prompt": "Input: arbitration\nOutput:", "test_query": "arbitration", "prediction": "arbitration\ntypes: dispute resolution, mediation, negotiation", "cleaned_prediction": "arbitration", "gt": "Schlichtung"}, {"input_prompt": "Input: cheers\nOutput:", "test_query": "cheers", "prediction": "the most popular cheers to get the crowd pumped up", "cleaned_prediction": "the most popular cheers to get the crowd pumped up", "gt": "prost"}, {"input_prompt": "Input: door\nOutput:", "test_query": "door", "prediction": "0\ninput: door\noutput:", "cleaned_prediction": "0", "gt": "t\u00fcr"}, {"input_prompt": "Input: waters\nOutput:", "test_query": "waters", "prediction": "\"waters\"\ninput: water\noutput: \"", "cleaned_prediction": "\"waters\"", "gt": "wasser"}, {"input_prompt": "Input: incumbent\nOutput:", "test_query": "incumbent", "prediction": "incumbent\ndefinition: (noun) a person who", "cleaned_prediction": "incumbent", "gt": "Amtsinhaber"}, {"input_prompt": "Input: something\nOutput:", "test_query": "something", "prediction": "something\ni have been feeling very anxious lately,", "cleaned_prediction": "something", "gt": "etwas"}, {"input_prompt": "Input: ancient\nOutput:", "test_query": "ancient", "prediction": "old\ndefinition: having existed since the distant past", "cleaned_prediction": "old", "gt": "alt"}, {"input_prompt": "Input: requirements\nOutput:", "test_query": "requirements", "prediction": "requirements\nproblem: the requirements for the project were", "cleaned_prediction": "requirements", "gt": "anforderungen"}, {"input_prompt": "Input: replacing\nOutput:", "test_query": "replacing", "prediction": "replacing\ndefinition: to put or take something in", "cleaned_prediction": "replacing", "gt": "ersetzen"}, {"input_prompt": "Input: pioneer\nOutput:", "test_query": "pioneer", "prediction": "pioneer (noun) - a person who is one", "cleaned_prediction": "pioneer (noun) - a person who is one", "gt": "Pionier"}, {"input_prompt": "Input: usually\nOutput:", "test_query": "usually", "prediction": "usually\ndefinition: in the normal way or to", "cleaned_prediction": "usually", "gt": "gew\u00f6hnlich"}, {"input_prompt": "Input: padding\nOutput:", "test_query": "padding", "prediction": "padding\n===========================\n\n**padding: the uns", "cleaned_prediction": "padding", "gt": "Polsterung"}, {"input_prompt": "Input: academic\nOutput:", "test_query": "academic", "prediction": "academic\ninput: researcher\noutput: researcher", "cleaned_prediction": "academic", "gt": "akademisch"}, {"input_prompt": "Input: network\nOutput:", "test_query": "network", "prediction": "a list of dictionaries where each dictionary contains the node", "cleaned_prediction": "a list of dictionaries where each dictionary contains the node", "gt": "netzwerk"}, {"input_prompt": "Input: burns\nOutput:", "test_query": "burns", "prediction": "0\nexplanation: the number 0 is", "cleaned_prediction": "0", "gt": "verbrennungen"}, {"input_prompt": "Input: travels\nOutput:", "test_query": "travels", "prediction": "travel\ninput: traveler\noutput: travel", "cleaned_prediction": "travel", "gt": "Reisen"}, {"input_prompt": "Input: promised\nOutput:", "test_query": "promised", "prediction": "promised\ntime complexity: o(1)\nspace", "cleaned_prediction": "promised", "gt": "versprochen"}, {"input_prompt": "Input: faculty\nOutput:", "test_query": "faculty", "prediction": "faculty\ninput: faculty\noutput: faculty", "cleaned_prediction": "faculty", "gt": "fakult\u00e4t"}, {"input_prompt": "Input: centered\nOutput:", "test_query": "centered", "prediction": "centered\n==\n\ninput: centered\noutput:", "cleaned_prediction": "centered", "gt": "zentriert"}, {"input_prompt": "Input: coins\nOutput:", "test_query": "coins", "prediction": "minimum number of coins to make the amount\n\ndef", "cleaned_prediction": "minimum number of coins to make the amount", "gt": "m\u00fcnzen"}, {"input_prompt": "Input: accident\nOutput:", "test_query": "accident", "prediction": "accident\ninput: accident\noutput: accident", "cleaned_prediction": "accident", "gt": "unfall"}, {"input_prompt": "Input: she\nOutput:", "test_query": "she", "prediction": "she\ninput: hello\noutput: hello", "cleaned_prediction": "she", "gt": "sie"}, {"input_prompt": "Input: springs\nOutput:", "test_query": "springs", "prediction": "springs\ntypes: materials\ntypes: objects", "cleaned_prediction": "springs", "gt": "Federn"}, {"input_prompt": "Input: coffee\nOutput:", "test_query": "coffee", "prediction": "0\n\ninput: water\noutput:", "cleaned_prediction": "0", "gt": "kaffee"}, {"input_prompt": "Input: railways\nOutput:", "test_query": "railways", "prediction": "railways\ncode: ``` def longestincreasingpath(r", "cleaned_prediction": "railways", "gt": "Eisenbahnen"}, {"input_prompt": "Input: followed\nOutput:", "test_query": "followed", "prediction": "followed\nexplanation: the string \"followed\"", "cleaned_prediction": "followed", "gt": "gefolgt"}, {"input_prompt": "Input: qualification\nOutput:", "test_query": "qualification", "prediction": "2\nexplanation: the number of ways to", "cleaned_prediction": "2", "gt": "Qualifikation"}, {"input_prompt": "Input: prime\nOutput:", "test_query": "prime", "prediction": "list of prime numbers\nexample: prime_numbers(", "cleaned_prediction": "list of prime numbers", "gt": "prim\u00e4r"}, {"input_prompt": "Input: boat\nOutput:", "test_query": "boat", "prediction": "a boat is a watercraft designed to float on", "cleaned_prediction": "a boat is a watercraft designed to float on", "gt": "Boot"}, {"input_prompt": "Input: joined\nOutput:", "test_query": "joined", "prediction": "joined\noutput for input 'joined' is '", "cleaned_prediction": "joined", "gt": "beigetreten"}, {"input_prompt": "Input: comedian\nOutput:", "test_query": "comedian", "prediction": "a comedian is a person who creates and performs comedic", "cleaned_prediction": "a comedian is a person who creates and performs comedic", "gt": "Komiker"}, {"input_prompt": "Input: disappeared\nOutput:", "test_query": "disappeared", "prediction": "disappeared\ninput: aa\noutput: a", "cleaned_prediction": "disappeared", "gt": "verschwunden"}, {"input_prompt": "Input: guess\nOutput:", "test_query": "guess", "prediction": "[1, 2, 3,", "cleaned_prediction": "[1, 2, 3,", "gt": "raten"}, {"input_prompt": "Input: define\nOutput:", "test_query": "define", "prediction": "define\ndefinition: to specify the meaning of a", "cleaned_prediction": "define", "gt": "definieren"}, {"input_prompt": "Input: returned\nOutput:", "test_query": "returned", "prediction": "returned\ndefinition: (verb) to give or", "cleaned_prediction": "returned", "gt": "zur\u00fcckgegeben"}, {"input_prompt": "Input: varieties\nOutput:", "test_query": "varieties", "prediction": "varieties\ntasks to be performed:\n1. create", "cleaned_prediction": "varieties", "gt": "sorten"}, {"input_prompt": "Input: scientists\nOutput:", "test_query": "scientists", "prediction": "scientists\ninput: scientists\noutput: scientists", "cleaned_prediction": "scientists", "gt": "Wissenschaftler"}, {"input_prompt": "Input: recognised\nOutput:", "test_query": "recognised", "prediction": "recognised\nspelling: rec-o-g-n", "cleaned_prediction": "recognised", "gt": "erkannt"}, {"input_prompt": "Input: fortune\nOutput:", "test_query": "fortune", "prediction": "you will soon find yourself in a situation where you", "cleaned_prediction": "you will soon find yourself in a situation where you", "gt": "gl\u00fcck"}, {"input_prompt": "Input: nominate\nOutput:", "test_query": "nominate", "prediction": "nominate\ncapitalized: nominate", "cleaned_prediction": "nominate", "gt": "nominieren"}, {"input_prompt": "Input: tournaments\nOutput:", "test_query": "tournaments", "prediction": "list of all possible paths in the tournament tree", "cleaned_prediction": "list of all possible paths in the tournament tree", "gt": "Turniere"}, {"input_prompt": "Input: selling\nOutput:", "test_query": "selling", "prediction": "selling\ndefinition: (verb) to give or", "cleaned_prediction": "selling", "gt": "verkaufen"}, {"input_prompt": "Input: connect\nOutput:", "test_query": "connect", "prediction": "connect\ndescription: \n================\nconnect\n---------------", "cleaned_prediction": "connect", "gt": "verbinden"}, {"input_prompt": "Input: metro\nOutput:", "test_query": "metro", "prediction": "\"metro\"\n\ninput: kaiju\noutput", "cleaned_prediction": "\"metro\"", "gt": "U-Bahn"}, {"input_prompt": "Input: statistical\nOutput:", "test_query": "statistical", "prediction": "statistical\n========================================================\n\na statistical analysis of the", "cleaned_prediction": "statistical", "gt": "statistisch"}, {"input_prompt": "Input: utility\nOutput:", "test_query": "utility", "prediction": "utility\nerror: error: expected input to be", "cleaned_prediction": "utility", "gt": "N\u00fctzlichkeit"}, {"input_prompt": "Input: advanced\nOutput:", "test_query": "advanced", "prediction": "advanced\nduration: 1 minute\nproblem:", "cleaned_prediction": "advanced", "gt": "fortgeschritten"}, {"input_prompt": "Input: hosting\nOutput:", "test_query": "hosting", "prediction": "\"hosting\"\ninput: \"hello\"\noutput", "cleaned_prediction": "\"hosting\"", "gt": "Gastgeber"}, {"input_prompt": "Input: independence\nOutput:", "test_query": "independence", "prediction": "interdependence\nwhat is the relationship between independence and", "cleaned_prediction": "interdependence", "gt": "unabh\u00e4ngigkeit"}, {"input_prompt": "Input: massive\nOutput:", "test_query": "massive", "prediction": "\"massive\"\ninput: small\noutput:", "cleaned_prediction": "\"massive\"", "gt": "massiv"}, {"input_prompt": "Input: reviewed\nOutput:", "test_query": "reviewed", "prediction": "reviewed\ninput: reviewer\noutput: reviewer", "cleaned_prediction": "reviewed", "gt": "\u00fcberpr\u00fcft"}, {"input_prompt": "Input: latter\nOutput:", "test_query": "latter", "prediction": "latter\nexplanation: the word \"latter\"", "cleaned_prediction": "latter", "gt": "sp\u00e4ter"}, {"input_prompt": "Input: tactical\nOutput:", "test_query": "tactical", "prediction": "tactical\n================\n\n# tactical operations\n\n## overview", "cleaned_prediction": "tactical", "gt": "taktisch"}, {"input_prompt": "Input: comments\nOutput:", "test_query": "comments", "prediction": "comments\ninput: comments\noutput: comments", "cleaned_prediction": "comments", "gt": "kommentare"}, {"input_prompt": "Input: commenced\nOutput:", "test_query": "commenced", "prediction": "commenced\n\ninput: completed\noutput: completed", "cleaned_prediction": "commenced", "gt": "begonnen"}, {"input_prompt": "Input: apple\nOutput:", "test_query": "apple", "prediction": "apple\n\ninput: apple\noutput: apple", "cleaned_prediction": "apple", "gt": "apfel"}, {"input_prompt": "Input: sources\nOutput:", "test_query": "sources", "prediction": "sources\ncontainer: \npurpose: \ndescription:", "cleaned_prediction": "sources", "gt": "quellen"}, {"input_prompt": "Input: concert\nOutput:", "test_query": "concert", "prediction": "a concert is a live performance of music by one", "cleaned_prediction": "a concert is a live performance of music by one", "gt": "konzert"}, {"input_prompt": "Input: vector\nOutput:", "test_query": "vector", "prediction": "vector\ndetermine if a given vector is a", "cleaned_prediction": "vector", "gt": "vektor"}, {"input_prompt": "Input: sun\nOutput:", "test_query": "sun", "prediction": "sun\ninput: moon\noutput: moon", "cleaned_prediction": "sun", "gt": "sonne"}, {"input_prompt": "Input: playing\nOutput:", "test_query": "playing", "prediction": "play\ninput: playing\noutput: play", "cleaned_prediction": "play", "gt": "spielen"}, {"input_prompt": "Input: alliance\nOutput:", "test_query": "alliance", "prediction": "alliance\ndefinition: a coalition of two or more", "cleaned_prediction": "alliance", "gt": "allianz"}, {"input_prompt": "Input: revenge\nOutput:", "test_query": "revenge", "prediction": "the desire for revenge is a natural human emotion,", "cleaned_prediction": "the desire for revenge is a natural human emotion,", "gt": "Rache"}, {"input_prompt": "Input: cartoon\nOutput:", "test_query": "cartoon", "prediction": "cartoon\ninput: animation\noutput: animation", "cleaned_prediction": "cartoon", "gt": "zeichentrickfilm"}, {"input_prompt": "Input: circulation\nOutput:", "test_query": "circulation", "prediction": "circulation\nsyllables: cir-cu-la", "cleaned_prediction": "circulation", "gt": "Umlauf"}, {"input_prompt": "Input: conventions\nOutput:", "test_query": "conventions", "prediction": "conventions\npopular conventions\nthere are many popular", "cleaned_prediction": "conventions", "gt": "Konventionen"}, {"input_prompt": "Input: seem\nOutput:", "test_query": "seem", "prediction": "seem\noutput: seem\noutput: seem", "cleaned_prediction": "seem", "gt": "scheinen"}, {"input_prompt": "Input: collapse\nOutput:", "test_query": "collapse", "prediction": "collapse\n================\n### description\nthe `collapse", "cleaned_prediction": "collapse", "gt": "zusammenbruch"}, {"input_prompt": "Input: adopted\nOutput:", "test_query": "adopted", "prediction": "adopted\ndefinition: take (a child) into", "cleaned_prediction": "adopted", "gt": "adoptiert"}, {"input_prompt": "Input: things\nOutput:", "test_query": "things", "prediction": "things\ninput: things\noutput: things", "cleaned_prediction": "things", "gt": "Dinge"}, {"input_prompt": "Input: designs\nOutput:", "test_query": "designs", "prediction": "designs\nproblem: write a function that takes in", "cleaned_prediction": "designs", "gt": "Entw\u00fcrfe"}, {"input_prompt": "Input: inspector\nOutput:", "test_query": "inspector", "prediction": "\"the inspector is a 2020 american psychological", "cleaned_prediction": "\"the inspector is a 2020 american psychological", "gt": "Inspektor"}, {"input_prompt": "Input: films\nOutput:", "test_query": "films", "prediction": "a list of films that are not part of the", "cleaned_prediction": "a list of films that are not part of the", "gt": "filme"}, {"input_prompt": "Input: structure\nOutput:", "test_query": "structure", "prediction": "structure\nfunction determines the number of elements in a", "cleaned_prediction": "structure", "gt": "struktur"}, {"input_prompt": "Input: same\nOutput:", "test_query": "same", "prediction": "same\nexplanation: the only difference between the two", "cleaned_prediction": "same", "gt": "gleich"}, {"input_prompt": "Input: volume\nOutput:", "test_query": "volume", "prediction": "volume\nretrieves a list of all volumes", "cleaned_prediction": "volume", "gt": "lautst\u00e4rke"}, {"input_prompt": "Input: square\nOutput:", "test_query": "square", "prediction": "square\ninput: triangle\noutput: triangle", "cleaned_prediction": "square", "gt": "quadrat"}, {"input_prompt": "Input: honorary\nOutput:", "test_query": "honorary", "prediction": "honorary\nresult: the word \"honorary\"", "cleaned_prediction": "honorary", "gt": "ehrenamtlich"}, {"input_prompt": "Input: papers\nOutput:", "test_query": "papers", "prediction": "papers\nin the context of scientific research, papers", "cleaned_prediction": "papers", "gt": "papiere"}, {"input_prompt": "Input: effort\nOutput:", "test_query": "effort", "prediction": "results\nin the context of business, especially in", "cleaned_prediction": "results", "gt": "anstrengung"}, {"input_prompt": "Input: serbia\nOutput:", "test_query": "serbia", "prediction": "serbia\ninput: albania\noutput:", "cleaned_prediction": "serbia", "gt": "Serbien"}, {"input_prompt": "Input: compared\nOutput:", "test_query": "compared", "prediction": "compared\ninput: comparison\noutput: comparison", "cleaned_prediction": "compared", "gt": "verglichen"}, {"input_prompt": "Input: medals\nOutput:", "test_query": "medals", "prediction": "medals\ncapitalized: yes\n\nthis text", "cleaned_prediction": "medals", "gt": "medaillen"}, {"input_prompt": "Input: serbian\nOutput:", "test_query": "serbian", "prediction": "srpski\ninput: spanish\noutput:", "cleaned_prediction": "srpski", "gt": "serbisch"}, {"input_prompt": "Input: winds\nOutput:", "test_query": "winds", "prediction": "wind speed, wind direction, wind gusts", "cleaned_prediction": "wind speed, wind direction, wind gusts", "gt": "winde"}, {"input_prompt": "Input: hospital\nOutput:", "test_query": "hospital", "prediction": "a hospital is a healthcare institution providing patient care by", "cleaned_prediction": "a hospital is a healthcare institution providing patient care by", "gt": "krankenhaus"}, {"input_prompt": "Input: duck\nOutput:", "test_query": "duck", "prediction": "\"quack!\"\n\ninput: cat\noutput:", "cleaned_prediction": "\"quack!\"", "gt": "ente"}, {"input_prompt": "Input: albanian\nOutput:", "test_query": "albanian", "prediction": "albanian is a romance language spoken by approximately", "cleaned_prediction": "albanian is a romance language spoken by approximately", "gt": "albanisch"}, {"input_prompt": "Input: storage\nOutput:", "test_query": "storage", "prediction": "storage\nhome > storage > external hard drives", "cleaned_prediction": "storage", "gt": "lagerung"}, {"input_prompt": "Input: actress\nOutput:", "test_query": "actress", "prediction": "a person who acts in a play, movie,", "cleaned_prediction": "a person who acts in a play, movie,", "gt": "schauspielerin"}, {"input_prompt": "Input: essays\nOutput:", "test_query": "essays", "prediction": "articles\nthe impact of social media on mental health", "cleaned_prediction": "articles", "gt": "aufs\u00e4tze"}, {"input_prompt": "Input: affect\nOutput:", "test_query": "affect", "prediction": "affect\nexplanation: the word \"affect\"", "cleaned_prediction": "affect", "gt": "beeinflussen"}, {"input_prompt": "Input: descent\nOutput:", "test_query": "descent", "prediction": "descent\ndiscussion: descent is a noun that", "cleaned_prediction": "descent", "gt": "Abstammung"}, {"input_prompt": "Input: wet\nOutput:", "test_query": "wet", "prediction": "wet\ninput: wetter\noutput: wet", "cleaned_prediction": "wet", "gt": "nass"}, {"input_prompt": "Input: communities\nOutput:", "test_query": "communities", "prediction": "communities\nstatus: proposed\ndate: 201", "cleaned_prediction": "communities", "gt": "gemeinschaften"}, {"input_prompt": "Input: rankings\nOutput:", "test_query": "rankings", "prediction": "the number of unique teams that have been ranked", "cleaned_prediction": "the number of unique teams that have been ranked", "gt": "Ranglisten"}, {"input_prompt": "Input: holding\nOutput:", "test_query": "holding", "prediction": "\"holding\"\ninput: \"holding\"\noutput:", "cleaned_prediction": "\"holding\"", "gt": "halten"}, {"input_prompt": "Input: authorities\nOutput:", "test_query": "authorities", "prediction": "authorities\ntopics: authorities\nthe authorities have been", "cleaned_prediction": "authorities", "gt": "Beh\u00f6rden"}, {"input_prompt": "Input: pure\nOutput:", "test_query": "pure", "prediction": "pure\nduration: 0:00:00", "cleaned_prediction": "pure", "gt": "rein"}, {"input_prompt": "Input: vary\nOutput:", "test_query": "vary", "prediction": "vary\ntarget: vary\n\n## step 1", "cleaned_prediction": "vary", "gt": "variieren"}, {"input_prompt": "Input: direction\nOutput:", "test_query": "direction", "prediction": "direction\nexamples:\n- \"up\" and \"", "cleaned_prediction": "direction", "gt": "richtung"}, {"input_prompt": "Input: few\nOutput:", "test_query": "few", "prediction": "few\nexplanation: the word \u201cfew\u201d is", "cleaned_prediction": "few", "gt": "wenige"}, {"input_prompt": "Input: celebrate\nOutput:", "test_query": "celebrate", "prediction": "celebrate good times, come on!\ncelebration", "cleaned_prediction": "celebrate good times, come on!", "gt": "feiern"}, {"input_prompt": "Input: cargo\nOutput:", "test_query": "cargo", "prediction": "- 1. cargo\n- 2", "cleaned_prediction": "- 1. cargo", "gt": "fracht"}, {"input_prompt": "Input: tough\nOutput:", "test_query": "tough", "prediction": "'tough'\ninput: tough\noutput:", "cleaned_prediction": "'tough'", "gt": "hart"}, {"input_prompt": "Input: allowed\nOutput:", "test_query": "allowed", "prediction": "allowed\n\ninput: hello\noutput: hello", "cleaned_prediction": "allowed", "gt": "erlaubt"}, {"input_prompt": "Input: brought\nOutput:", "test_query": "brought", "prediction": "brought\ndiscussion: this word is a regular verb", "cleaned_prediction": "brought", "gt": "gebracht"}, {"input_prompt": "Input: stars\nOutput:", "test_query": "stars", "prediction": "- **stars:** 10\n- **", "cleaned_prediction": "- **stars:** 10", "gt": "sterne"}, {"input_prompt": "Input: ways\nOutput:", "test_query": "ways", "prediction": "ways\nproblem: \ngiven an array of integers", "cleaned_prediction": "ways", "gt": "wege"}, {"input_prompt": "Input: happens\nOutput:", "test_query": "happens", "prediction": "happens\ndiffence: \n\nthe input and output", "cleaned_prediction": "happens", "gt": "passiert"}, {"input_prompt": "Input: foods\nOutput:", "test_query": "foods", "prediction": "{food: 1}\nexplanation: the input", "cleaned_prediction": "{food: 1}", "gt": "lebensmittel"}, {"input_prompt": "Input: belonging\nOutput:", "test_query": "belonging", "prediction": "belonging is a sense of being connected to", "cleaned_prediction": "belonging is a sense of being connected to", "gt": "zugeh\u00f6rigkeit"}, {"input_prompt": "Input: profit\nOutput:", "test_query": "profit", "prediction": "a dictionary mapping each stock to its corresponding profit", "cleaned_prediction": "a dictionary mapping each stock to its corresponding profit", "gt": "Gewinn"}, {"input_prompt": "Input: managers\nOutput:", "test_query": "managers", "prediction": "['manager1','manager2','manager", "cleaned_prediction": "['manager1','manager2','manager", "gt": "Manager"}, {"input_prompt": "Input: shorter\nOutput:", "test_query": "shorter", "prediction": "shorter\ninput: longer\noutput: longer", "cleaned_prediction": "shorter", "gt": "k\u00fcrzer"}, {"input_prompt": "Input: ship\nOutput:", "test_query": "ship", "prediction": "\"the ship is in the harbor.\"\ninput:", "cleaned_prediction": "\"the ship is in the harbor.\"", "gt": "schiff"}, {"input_prompt": "Input: alcohol\nOutput:", "test_query": "alcohol", "prediction": "a hangover, which is a group of symptoms", "cleaned_prediction": "a hangover, which is a group of symptoms", "gt": "alkohol"}, {"input_prompt": "Input: lifetime\nOutput:", "test_query": "lifetime", "prediction": "lifetime\nduration: 3 minutes 20 seconds", "cleaned_prediction": "lifetime", "gt": "lebenszeit"}, {"input_prompt": "Input: brother\nOutput:", "test_query": "brother", "prediction": "brother\n\ninput: sister\noutput: sister", "cleaned_prediction": "brother", "gt": "bruder"}, {"input_prompt": "Input: biography\nOutput:", "test_query": "biography", "prediction": "writer, author, novelist, playwright, poet,", "cleaned_prediction": "writer, author, novelist, playwright, poet,", "gt": "Biografie"}, {"input_prompt": "Input: independently\nOutput:", "test_query": "independently", "prediction": "independently\ndependence is a key concept in", "cleaned_prediction": "independently", "gt": "unabh\u00e4ngig"}, {"input_prompt": "Input: specialist\nOutput:", "test_query": "specialist", "prediction": "specialist\ndefinition: a person with a high level", "cleaned_prediction": "specialist", "gt": "spezialist"}, {"input_prompt": "Input: lodge\nOutput:", "test_query": "lodge", "prediction": "lodge\ninput: log\noutput: log", "cleaned_prediction": "lodge", "gt": "h\u00fctte"}, {"input_prompt": "Input: birds\nOutput:", "test_query": "birds", "prediction": "\"the birds are flying high in the sky.\"", "cleaned_prediction": "\"the birds are flying high in the sky.\"", "gt": "v\u00f6gel"}, {"input_prompt": "Input: defense\nOutput:", "test_query": "defense", "prediction": "defense\n================\n\n### defense\n\na defensive strategy", "cleaned_prediction": "defense", "gt": "Verteidigung"}, {"input_prompt": "Input: technology\nOutput:", "test_query": "technology", "prediction": "human interaction\ninput: data\noutput: insights", "cleaned_prediction": "human interaction", "gt": "technologie"}, {"input_prompt": "Input: admit\nOutput:", "test_query": "admit", "prediction": "admit\ninput: admit\noutput: admit", "cleaned_prediction": "admit", "gt": "zugeben"}, {"input_prompt": "Input: served\nOutput:", "test_query": "served", "prediction": "served\ndefinition: (verb) to give service", "cleaned_prediction": "served", "gt": "bedient"}, {"input_prompt": "Input: tend\nOutput:", "test_query": "tend", "prediction": "tend\ninput: eeeeeeeeeeeeeeeeeeeee", "cleaned_prediction": "tend", "gt": "neigen"}, {"input_prompt": "Input: chilean\nOutput:", "test_query": "chilean", "prediction": "chilean\ninput: spanish\noutput: spanish", "cleaned_prediction": "chilean", "gt": "chilenisch"}, {"input_prompt": "Input: saved\nOutput:", "test_query": "saved", "prediction": "saved\nduration: 0:00:00", "cleaned_prediction": "saved", "gt": "gespeichert"}, {"input_prompt": "Input: without\nOutput:", "test_query": "without", "prediction": "with\ninput: with\noutput: without", "cleaned_prediction": "with", "gt": "ohne"}, {"input_prompt": "Input: decades\nOutput:", "test_query": "decades", "prediction": "a list of the most common decade(s) in", "cleaned_prediction": "a list of the most common decade(s) in", "gt": "jahrzehnte"}, {"input_prompt": "Input: notice\nOutput:", "test_query": "notice", "prediction": "notice\nerror: invalid input\ninput: notice", "cleaned_prediction": "notice", "gt": "bemerken"}, {"input_prompt": "Input: opponents\nOutput:", "test_query": "opponents", "prediction": "1. a list of possible opponents, sorted", "cleaned_prediction": "1. a list of possible opponents, sorted", "gt": "Gegner"}, {"input_prompt": "Input: reserves\nOutput:", "test_query": "reserves", "prediction": "reserves\ntasks:\n1. create a function `", "cleaned_prediction": "reserves", "gt": "reserven"}, {"input_prompt": "Input: particular\nOutput:", "test_query": "particular", "prediction": "particular\ninput: particular\noutput: particular", "cleaned_prediction": "particular", "gt": "besonders"}, {"input_prompt": "Input: provided\nOutput:", "test_query": "provided", "prediction": "output\nerror: the error is that the output", "cleaned_prediction": "output", "gt": "bereitgestellt"}, {"input_prompt": "Input: sector\nOutput:", "test_query": "sector", "prediction": "sector\ntasks:\n1.  the user is", "cleaned_prediction": "sector", "gt": "sektor"}, {"input_prompt": "Input: sure\nOutput:", "test_query": "sure", "prediction": "1\nexplanation: the string \"sure\"", "cleaned_prediction": "1", "gt": "sicher"}, {"input_prompt": "Input: opinions\nOutput:", "test_query": "opinions", "prediction": "opinions\noutput: opinions\noutput: opinions", "cleaned_prediction": "opinions", "gt": "meinungen"}, {"input_prompt": "Input: simply\nOutput:", "test_query": "simply", "prediction": "simply\nexplanation: \nthe input string is simply", "cleaned_prediction": "simply", "gt": "einfach"}, {"input_prompt": "Input: edit\nOutput:", "test_query": "edit", "prediction": "edit\ndefinition: (verb) make something new", "cleaned_prediction": "edit", "gt": "bearbeiten"}, {"input_prompt": "Input: boundaries\nOutput:", "test_query": "boundaries", "prediction": "an array of 3d points representing the vertices", "cleaned_prediction": "an array of 3d points representing the vertices", "gt": "Grenzen"}, {"input_prompt": "Input: scholarly\nOutput:", "test_query": "scholarly", "prediction": "scholarly\ndefinition: (of a person) learned", "cleaned_prediction": "scholarly", "gt": "gelehrt"}, {"input_prompt": "Input: expensive\nOutput:", "test_query": "expensive", "prediction": "the word \"expensive\" contains 9 letters", "cleaned_prediction": "the word \"expensive\" contains 9 letters", "gt": "teuer"}, {"input_prompt": "Input: such\nOutput:", "test_query": "such", "prediction": "such\nexplanation: the string \"such\" is", "cleaned_prediction": "such", "gt": "solche"}, {"input_prompt": "Input: streams\nOutput:", "test_query": "streams", "prediction": "streams\ntasks:\n- create a new stream", "cleaned_prediction": "streams", "gt": "Str\u00f6me"}, {"input_prompt": "Input: draw\nOutput:", "test_query": "draw", "prediction": "draw\nexpectation: the program should suggest \"", "cleaned_prediction": "draw", "gt": "zeichnen"}, {"input_prompt": "Input: vehicles\nOutput:", "test_query": "vehicles", "prediction": "a dictionary of vehicles with their respective speeds\nspeed", "cleaned_prediction": "a dictionary of vehicles with their respective speeds", "gt": "Fahrzeuge"}, {"input_prompt": "Input: prevented\nOutput:", "test_query": "prevented", "prediction": "prevented\ndefinition: to prevent something from happening or", "cleaned_prediction": "prevented", "gt": "verhindert"}, {"input_prompt": "Input: alive\nOutput:", "test_query": "alive", "prediction": "alive\nduration: 0.0001 sec", "cleaned_prediction": "alive", "gt": "lebendig"}, {"input_prompt": "Input: dream\nOutput:", "test_query": "dream", "prediction": "dream\ninput: real\noutput: real", "cleaned_prediction": "dream", "gt": "traum"}, {"input_prompt": "Input: determine\nOutput:", "test_query": "determine", "prediction": "determine\ncorrected: determine\nexplanation: the", "cleaned_prediction": "determine", "gt": "bestimmen"}, {"input_prompt": "Input: branch\nOutput:", "test_query": "branch", "prediction": "branch\nduration: 5 seconds\nspeed:", "cleaned_prediction": "branch", "gt": "zweig"}, {"input_prompt": "Input: visit\nOutput:", "test_query": "visit", "prediction": "\"visit\"\ninput: hello\noutput: \"", "cleaned_prediction": "\"visit\"", "gt": "besuchen"}, {"input_prompt": "Input: reflect\nOutput:", "test_query": "reflect", "prediction": "reflect\ndiscussion:\nthe word \"reflect\" has", "cleaned_prediction": "reflect", "gt": "widerspiegeln"}, {"input_prompt": "Input: sheep\nOutput:", "test_query": "sheep", "prediction": "sheep\ninput: tree\noutput: tree", "cleaned_prediction": "sheep", "gt": "schaf"}, {"input_prompt": "Input: edited\nOutput:", "test_query": "edited", "prediction": "edited\nthe word edited has 6 letters.", "cleaned_prediction": "edited", "gt": "bearbeitet"}, {"input_prompt": "Input: especially\nOutput:", "test_query": "especially", "prediction": "especially\nespecially especially especially especially especially especially especially especially", "cleaned_prediction": "especially", "gt": "besonders"}, {"input_prompt": "Input: prize\nOutput:", "test_query": "prize", "prediction": "prize\ntitle case\n\ninput: the quick brown", "cleaned_prediction": "prize", "gt": "preis"}, {"input_prompt": "Input: unity\nOutput:", "test_query": "unity", "prediction": "unity\nfinding the determinant of a matrix in", "cleaned_prediction": "unity", "gt": "Einheit"}, {"input_prompt": "Input: bavaria\nOutput:", "test_query": "bavaria", "prediction": "bavaria\ninput: rome\noutput:", "cleaned_prediction": "bavaria", "gt": "Bayern"}, {"input_prompt": "Input: actual\nOutput:", "test_query": "actual", "prediction": "actual\nexamples:\n- input: [1,", "cleaned_prediction": "actual", "gt": "tats\u00e4chlich"}, {"input_prompt": "Input: numbered\nOutput:", "test_query": "numbered", "prediction": "numbered\nduration: 3 minutes\nsummary:", "cleaned_prediction": "numbered", "gt": "nummeriert"}, {"input_prompt": "Input: storm\nOutput:", "test_query": "storm", "prediction": "stormy\n\ninput: rainbow\noutput: colorful", "cleaned_prediction": "stormy", "gt": "sturm"}, {"input_prompt": "Input: leads\nOutput:", "test_query": "leads", "prediction": "leads\nduration: 1\ndescription:", "cleaned_prediction": "leads", "gt": "f\u00fchrt"}, {"input_prompt": "Input: cape\nOutput:", "test_query": "cape", "prediction": "'cape' is neither a verb nor a", "cleaned_prediction": "'cape' is neither a verb nor a", "gt": "Umhang"}, {"input_prompt": "Input: reformed\nOutput:", "test_query": "reformed", "prediction": "reformed\nexplanation: the word \"reformed", "cleaned_prediction": "reformed", "gt": "reformiert"}, {"input_prompt": "Input: referenced\nOutput:", "test_query": "referenced", "prediction": "1\nexplanation: the number 1 is", "cleaned_prediction": "1", "gt": "bezogen"}, {"input_prompt": "Input: covers\nOutput:", "test_query": "covers", "prediction": "covers\ncapitalization: title case\nthe word", "cleaned_prediction": "covers", "gt": "Bez\u00fcge"}, {"input_prompt": "Input: argument\nOutput:", "test_query": "argument", "prediction": "output\n\n# problem\nwe are given a list", "cleaned_prediction": "output", "gt": "streit"}, {"input_prompt": "Input: identification\nOutput:", "test_query": "identification", "prediction": "identification\nspecies: homo sapiens\ntype:", "cleaned_prediction": "identification", "gt": "Identifikation"}, {"input_prompt": "Input: relative\nOutput:", "test_query": "relative", "prediction": "absolute\n================\n\n### problem: absolute positioning", "cleaned_prediction": "absolute", "gt": "verwandter"}, {"input_prompt": "Input: damage\nOutput:", "test_query": "damage", "prediction": "damage\n```python\ndef damage_calculator(d", "cleaned_prediction": "damage", "gt": "schaden"}, {"input_prompt": "Input: controls\nOutput:", "test_query": "controls", "prediction": "controls\nfailed to parse (png image): failed", "cleaned_prediction": "controls", "gt": "steuert"}, {"input_prompt": "Input: cleanup\nOutput:", "test_query": "cleanup", "prediction": "cleanup\ntime complexity: o(n) where n", "cleaned_prediction": "cleanup", "gt": "aufr\u00e4umen"}, {"input_prompt": "Input: agricultural\nOutput:", "test_query": "agricultural", "prediction": "agricultural\nagree with the suggestion to add a", "cleaned_prediction": "agricultural", "gt": "landwirtschaftlich"}, {"input_prompt": "Input: fewer\nOutput:", "test_query": "fewer", "prediction": "fewer\ndefinition: (adverb) in a", "cleaned_prediction": "fewer", "gt": "weniger"}, {"input_prompt": "Input: moth\nOutput:", "test_query": "moth", "prediction": "moth\ninput: the\noutput: the", "cleaned_prediction": "moth", "gt": "motte"}, {"input_prompt": "Input: print\nOutput:", "test_query": "print", "prediction": "prints\ninput: test\noutput: tests", "cleaned_prediction": "prints", "gt": "drucken"}, {"input_prompt": "Input: voyage\nOutput:", "test_query": "voyage", "prediction": "\"voyage\" is a noun. it", "cleaned_prediction": "\"voyage\" is a noun. it", "gt": "Reise"}, {"input_prompt": "Input: thus\nOutput:", "test_query": "thus", "prediction": "thus\ninput: 1\noutput:", "cleaned_prediction": "thus", "gt": "somit"}, {"input_prompt": "Input: eventually\nOutput:", "test_query": "eventually", "prediction": "eventually\ninput: eventually\noutput: eventually", "cleaned_prediction": "eventually", "gt": "schlie\u00dflich"}, {"input_prompt": "Input: colonel\nOutput:", "test_query": "colonel", "prediction": "the title of colonel is a senior military", "cleaned_prediction": "the title of colonel is a senior military", "gt": "oberst"}, {"input_prompt": "Input: mountains\nOutput:", "test_query": "mountains", "prediction": "\"the mountains are majestic and awe-inspiring.\"", "cleaned_prediction": "\"the mountains are majestic and awe-inspiring.\"", "gt": "berge"}, {"input_prompt": "Input: tanks\nOutput:", "test_query": "tanks", "prediction": "tanks\nexplanation: the word \"tanks\"", "cleaned_prediction": "tanks", "gt": "Panzer"}, {"input_prompt": "Input: remains\nOutput:", "test_query": "remains", "prediction": "remain\nspelling: r-e-m-a-i", "cleaned_prediction": "remain", "gt": "bleibt"}, {"input_prompt": "Input: detailed\nOutput:", "test_query": "detailed", "prediction": "detailed\nglossary: detailed\ndetailed definition", "cleaned_prediction": "detailed", "gt": "detailliert"}, {"input_prompt": "Input: professionals\nOutput:", "test_query": "professionals", "prediction": "professionals\nprofessionals are experts in a particular", "cleaned_prediction": "professionals", "gt": "Profis"}, {"input_prompt": "Input: produce\nOutput:", "test_query": "produce", "prediction": "produce\ndefinition: (verb) to bring something", "cleaned_prediction": "produce", "gt": "produzieren"}, {"input_prompt": "Input: jamaica\nOutput:", "test_query": "jamaica", "prediction": "jamaica is a country in the caribbean sea. it", "cleaned_prediction": "jamaica is a country in the caribbean sea. it", "gt": "Jamaika"}, {"input_prompt": "Input: copy\nOutput:", "test_query": "copy", "prediction": "copy\ninput: \n[\n  {\n    \"", "cleaned_prediction": "copy", "gt": "kopieren"}, {"input_prompt": "Input: continued\nOutput:", "test_query": "continued", "prediction": "continued\ntime complexity: o(n)\nspace complexity", "cleaned_prediction": "continued", "gt": "fortgesetzt"}, {"input_prompt": "Input: diplomatic\nOutput:", "test_query": "diplomatic", "prediction": "diplomatic\nthe word diplomatic has 9 letters.", "cleaned_prediction": "diplomatic", "gt": "diplomatisch"}, {"input_prompt": "Input: lecture\nOutput:", "test_query": "lecture", "prediction": "lecture\ninput: lecture\noutput: lecture", "cleaned_prediction": "lecture", "gt": "vorlesung"}, {"input_prompt": "Input: content\nOutput:", "test_query": "content", "prediction": "content\nauthor: sheng liu\ndate:", "cleaned_prediction": "content", "gt": "inhalt"}, {"input_prompt": "Input: progress\nOutput:", "test_query": "progress", "prediction": "progress\npackage: com.android.server.am\ntype", "cleaned_prediction": "progress", "gt": "Fortschritt"}, {"input_prompt": "Input: licensing\nOutput:", "test_query": "licensing", "prediction": "license\ninput: licenses\noutput: licenses", "cleaned_prediction": "license", "gt": "Lizenzierung"}, {"input_prompt": "Input: gauge\nOutput:", "test_query": "gauge", "prediction": "gauge\ncategory: electronics\nmodality: text", "cleaned_prediction": "gauge", "gt": "messger\u00e4t"}, {"input_prompt": "Input: sample\nOutput:", "test_query": "sample", "prediction": "sample\n---\ninput: sample\noutput: sample", "cleaned_prediction": "sample", "gt": "beispiel"}, {"input_prompt": "Input: politically\nOutput:", "test_query": "politically", "prediction": "politically\ndefinition: (adverb) invol", "cleaned_prediction": "politically", "gt": "politisch"}, {"input_prompt": "Input: analysis\nOutput:", "test_query": "analysis", "prediction": "analysis\ntypes: quantitative, qualitative\nmethods:", "cleaned_prediction": "analysis", "gt": "Analyse"}, {"input_prompt": "Input: servant\nOutput:", "test_query": "servant", "prediction": "a servant is a person who serves another person,", "cleaned_prediction": "a servant is a person who serves another person,", "gt": "Diener"}, {"input_prompt": "Input: brown\nOutput:", "test_query": "brown", "prediction": "brown\n\nexplanation: the given word \"brown\"", "cleaned_prediction": "brown", "gt": "braun"}, {"input_prompt": "Input: agencies\nOutput:", "test_query": "agencies", "prediction": "agencies\nfunctions:\n- `get_agencies`:", "cleaned_prediction": "agencies", "gt": "Agenturen"}, {"input_prompt": "Input: calling\nOutput:", "test_query": "calling", "prediction": "calling\nduration: 1 second\ndescription:", "cleaned_prediction": "calling", "gt": "anrufen"}, {"input_prompt": "Input: exclusively\nOutput:", "test_query": "exclusively", "prediction": "exclusively\nexplanation:\nthe word \"exclusively", "cleaned_prediction": "exclusively", "gt": "ausschlie\u00dflich"}, {"input_prompt": "Input: shot\nOutput:", "test_query": "shot", "prediction": "shot\ninput: shots\noutput: shots", "cleaned_prediction": "shot", "gt": "schuss"}, {"input_prompt": "Input: historic\nOutput:", "test_query": "historic", "prediction": "historic\nchange: none\nthe word \"historic", "cleaned_prediction": "historic", "gt": "historisch"}, {"input_prompt": "Input: thought\nOutput:", "test_query": "thought", "prediction": "thought\ninput: cat\noutput: cat", "cleaned_prediction": "thought", "gt": "gedanke"}, {"input_prompt": "Input: refuge\nOutput:", "test_query": "refuge", "prediction": "refuge\nrefuge is a noun that refers to", "cleaned_prediction": "refuge", "gt": "Zuflucht"}, {"input_prompt": "Input: manage\nOutput:", "test_query": "manage", "prediction": "2023-02-20\ndate:", "cleaned_prediction": "2023-02-20", "gt": "verwalten"}, {"input_prompt": "Input: tribute\nOutput:", "test_query": "tribute", "prediction": "tribute\ntime complexity: o(1)\nspace", "cleaned_prediction": "tribute", "gt": "Tribut"}, {"input_prompt": "Input: lawyer\nOutput:", "test_query": "lawyer", "prediction": "\"lawyers are skilled in the law and are", "cleaned_prediction": "\"lawyers are skilled in the law and are", "gt": "Anwalt"}, {"input_prompt": "Input: remainder\nOutput:", "test_query": "remainder", "prediction": "the number of times you would need to double the", "cleaned_prediction": "the number of times you would need to double the", "gt": "Rest"}, {"input_prompt": "Input: institute\nOutput:", "test_query": "institute", "prediction": "institute\ninput: institution\noutput: institution", "cleaned_prediction": "institute", "gt": "Institut"}, {"input_prompt": "Input: manor\nOutput:", "test_query": "manor", "prediction": "the word \"manor\" is a noun", "cleaned_prediction": "the word \"manor\" is a noun", "gt": "Herrenhaus"}, {"input_prompt": "Input: truth\nOutput:", "test_query": "truth", "prediction": "truth\ninput: false\noutput: false", "cleaned_prediction": "truth", "gt": "wahrheit"}, {"input_prompt": "Input: recorded\nOutput:", "test_query": "recorded", "prediction": "recorded\nduration: 1:04:26", "cleaned_prediction": "recorded", "gt": "aufgezeichnet"}, {"input_prompt": "Input: mercury\nOutput:", "test_query": "mercury", "prediction": "\"mercury is a planet in the solar system", "cleaned_prediction": "\"mercury is a planet in the solar system", "gt": "Merkur"}, {"input_prompt": "Input: called\nOutput:", "test_query": "called", "prediction": "called\ndifficulty: 1\n\nexplanation: the", "cleaned_prediction": "called", "gt": "genannt"}, {"input_prompt": "Input: lap\nOutput:", "test_query": "lap", "prediction": "\"lap\"\n\ninput: lap\noutput:", "cleaned_prediction": "\"lap\"", "gt": "scho\u00df"}, {"input_prompt": "Input: son\nOutput:", "test_query": "son", "prediction": "\"son\"\n\ninput: hello\noutput: \"", "cleaned_prediction": "\"son\"", "gt": "sohn"}, {"input_prompt": "Input: appearances\nOutput:", "test_query": "appearances", "prediction": "'appearances'\n---\n\nfunction getword(word)", "cleaned_prediction": "'appearances'", "gt": "Erscheinungen"}, {"input_prompt": "Input: close\nOutput:", "test_query": "close", "prediction": "close\ninput: \"close\"\noutput: \"", "cleaned_prediction": "close", "gt": "schlie\u00dfen"}, {"input_prompt": "Input: actions\nOutput:", "test_query": "actions", "prediction": "output\nerror: expected return value to be of", "cleaned_prediction": "output", "gt": "Aktionen"}, {"input_prompt": "Input: colors\nOutput:", "test_query": "colors", "prediction": "an array of integers representing the rgb values of the", "cleaned_prediction": "an array of integers representing the rgb values of the", "gt": "farben"}, {"input_prompt": "Input: organisations\nOutput:", "test_query": "organisations", "prediction": "data\norganisation: organisation\ndata: data", "cleaned_prediction": "data", "gt": "Organisationen"}, {"input_prompt": "Input: populated\nOutput:", "test_query": "populated", "prediction": "populated\nduration: 1 min\nlanguage:", "cleaned_prediction": "populated", "gt": "bev\u00f6lkert"}, {"input_prompt": "Input: charge\nOutput:", "test_query": "charge", "prediction": "charge\nmodel: #b7b7b", "cleaned_prediction": "charge", "gt": "aufladen"}, {"input_prompt": "Input: heir\nOutput:", "test_query": "heir", "prediction": "'heir'\ninput: racecar\noutput", "cleaned_prediction": "'heir'", "gt": "Erbe"}, {"input_prompt": "Input: individuals\nOutput:", "test_query": "individuals", "prediction": "individuals\ntraining examples: (individuals, individuals", "cleaned_prediction": "individuals", "gt": "Einzelpersonen"}, {"input_prompt": "Input: generals\nOutput:", "test_query": "generals", "prediction": "generals\nexplanation: the string \"generals\"", "cleaned_prediction": "generals", "gt": "gener\u00e4le"}, {"input_prompt": "Input: opened\nOutput:", "test_query": "opened", "prediction": "opened\noutput: opened\nexplanation: the", "cleaned_prediction": "opened", "gt": "ge\u00f6ffnet"}, {"input_prompt": "Input: shops\nOutput:", "test_query": "shops", "prediction": "shops\nexplanation: the string \"shops\" is", "cleaned_prediction": "shops", "gt": "gesch\u00e4fte"}, {"input_prompt": "Input: aside\nOutput:", "test_query": "aside", "prediction": "aside\ninput: aside\noutput: aside", "cleaned_prediction": "aside", "gt": "beiseite"}, {"input_prompt": "Input: collections\nOutput:", "test_query": "collections", "prediction": "collections\ntask: write a function that takes a", "cleaned_prediction": "collections", "gt": "sammlungen"}, {"input_prompt": "Input: below\nOutput:", "test_query": "below", "prediction": "below\nexplanation: the input string is already a", "cleaned_prediction": "below", "gt": "unten"}, {"input_prompt": "Input: infinite\nOutput:", "test_query": "infinite", "prediction": "infinite\nexplanation: the sequence of fibonacci numbers is", "cleaned_prediction": "infinite", "gt": "unendlich"}, {"input_prompt": "Input: chase\nOutput:", "test_query": "chase", "prediction": "chase\ninput: race\noutput: race", "cleaned_prediction": "chase", "gt": "jagen"}, {"input_prompt": "Input: tape\nOutput:", "test_query": "tape", "prediction": "tape\nthe problem: given a tape, find", "cleaned_prediction": "tape", "gt": "band"}, {"input_prompt": "Input: prayer\nOutput:", "test_query": "prayer", "prediction": "\"prayer\" is a form of worship that", "cleaned_prediction": "\"prayer\" is a form of worship that", "gt": "Gebet"}, {"input_prompt": "Input: performing\nOutput:", "test_query": "performing", "prediction": "performing\nperformance of a task or activity, especially", "cleaned_prediction": "performing", "gt": "auff\u00fchren"}, {"input_prompt": "Input: crop\nOutput:", "test_query": "crop", "prediction": "crops\ninput: crops\noutput: crop", "cleaned_prediction": "crops", "gt": "Ernte"}, {"input_prompt": "Input: mills\nOutput:", "test_query": "mills", "prediction": "mill\ndefault units: length\n1 mill =", "cleaned_prediction": "mill", "gt": "m\u00fchlen"}, {"input_prompt": "Input: explains\nOutput:", "test_query": "explains", "prediction": "explains\ninput: explain\noutput: explain", "cleaned_prediction": "explains", "gt": "erkl\u00e4rt"}, {"input_prompt": "Input: policies\nOutput:", "test_query": "policies", "prediction": "policies\nlanguages:\n1. c\n2.", "cleaned_prediction": "policies", "gt": "Richtlinien"}, {"input_prompt": "Input: point\nOutput:", "test_query": "point", "prediction": "a list of tuples of the form (point,", "cleaned_prediction": "a list of tuples of the form (point,", "gt": "punkt"}, {"input_prompt": "Input: throw\nOutput:", "test_query": "throw", "prediction": "throw\ninput: the\noutput: the", "cleaned_prediction": "throw", "gt": "werfen"}, {"input_prompt": "Input: crazy\nOutput:", "test_query": "crazy", "prediction": "crazy\ndefinition: (adjective) extremely or", "cleaned_prediction": "crazy", "gt": "verr\u00fcckt"}, {"input_prompt": "Input: bosnia\nOutput:", "test_query": "bosnia", "prediction": "\"bosnia and herzegovina\"\ninput", "cleaned_prediction": "\"bosnia and herzegovina\"", "gt": "Bosnien"}, {"input_prompt": "Input: mines\nOutput:", "test_query": "mines", "prediction": "mines\n\nexplanation: the input string \"mines", "cleaned_prediction": "mines", "gt": "meins"}, {"input_prompt": "Input: oriented\nOutput:", "test_query": "oriented", "prediction": "oriented\nlearning: supervised\nlanguage: python", "cleaned_prediction": "oriented", "gt": "orientiert"}, {"input_prompt": "Input: too\nOutput:", "test_query": "too", "prediction": "too\nexplanation: the word \"too\" is", "cleaned_prediction": "too", "gt": "auch"}, {"input_prompt": "Input: copyrighted\nOutput:", "test_query": "copyrighted", "prediction": "copyrighted\n================\ufffd\ncopyrighted material, such", "cleaned_prediction": "copyrighted", "gt": "urheberrechtlich gesch\u00fctzt"}, {"input_prompt": "Input: hull\nOutput:", "test_query": "hull", "prediction": "hull\npurpose: this is a simple test of", "cleaned_prediction": "hull", "gt": "Rumpf"}, {"input_prompt": "Input: knee\nOutput:", "test_query": "knee", "prediction": "\"knee\" is a joint that connects the", "cleaned_prediction": "\"knee\" is a joint that connects the", "gt": "knie"}, {"input_prompt": "Input: seems\nOutput:", "test_query": "seems", "prediction": "seems\nthis word has a single syllable and", "cleaned_prediction": "seems", "gt": "scheint"}, {"input_prompt": "Input: germans\nOutput:", "test_query": "germans", "prediction": "\"i don't understand what you're saying.\"", "cleaned_prediction": "\"i don't understand what you're saying.\"", "gt": "Deutsche"}, {"input_prompt": "Input: bits\nOutput:", "test_query": "bits", "prediction": "bits\ndescription: this function takes a binary number", "cleaned_prediction": "bits", "gt": "St\u00fccke"}, {"input_prompt": "Input: closer\nOutput:", "test_query": "closer", "prediction": "closer\ndefinition: (adjective) being or", "cleaned_prediction": "closer", "gt": "n\u00e4her"}, {"input_prompt": "Input: working\nOutput:", "test_query": "working", "prediction": "working\nduration: 0:00:00", "cleaned_prediction": "working", "gt": "arbeiten"}, {"input_prompt": "Input: comprehensive\nOutput:", "test_query": "comprehensive", "prediction": "comprehensive\ndefinition: (of a description or account", "cleaned_prediction": "comprehensive", "gt": "umfassend"}, {"input_prompt": "Input: measurement\nOutput:", "test_query": "measurement", "prediction": "measurement\ntypes of tasks: data processing\ndescription", "cleaned_prediction": "measurement", "gt": "messung"}, {"input_prompt": "Input: circuit\nOutput:", "test_query": "circuit", "prediction": "circuit\ncompare the similarity between the output of the", "cleaned_prediction": "circuit", "gt": "schaltkreis"}, {"input_prompt": "Input: flowers\nOutput:", "test_query": "flowers", "prediction": "\"flowers are beautiful. they are often used", "cleaned_prediction": "\"flowers are beautiful. they are often used", "gt": "blumen"}, {"input_prompt": "Input: perhaps\nOutput:", "test_query": "perhaps", "prediction": "maybe\ndefinition: (adverb) used to", "cleaned_prediction": "maybe", "gt": "vielleicht"}, {"input_prompt": "Input: daughters\nOutput:", "test_query": "daughters", "prediction": "daughters\ninput: sons\noutput: sons", "cleaned_prediction": "daughters", "gt": "t\u00f6chter"}, {"input_prompt": "Input: figures\nOutput:", "test_query": "figures", "prediction": "figures\nexplanation: the input list is already sorted", "cleaned_prediction": "figures", "gt": "zahlen"}, {"input_prompt": "Input: travelled\nOutput:", "test_query": "travelled", "prediction": "'travelled' is a valid word.\ndefinition", "cleaned_prediction": "'travelled' is a valid word.", "gt": "gereist"}, {"input_prompt": "Input: revised\nOutput:", "test_query": "revised", "prediction": "revised\nrevised input\nrevised output", "cleaned_prediction": "revised", "gt": "\u00fcberarbeitet"}, {"input_prompt": "Input: angry\nOutput:", "test_query": "angry", "prediction": "\"the word 'angry' is an adjective", "cleaned_prediction": "\"the word 'angry' is an adjective", "gt": "w\u00fctend"}, {"input_prompt": "Input: asks\nOutput:", "test_query": "asks", "prediction": "asks\nexplanation: the input is a string", "cleaned_prediction": "asks", "gt": "fragt"}, {"input_prompt": "Input: spots\nOutput:", "test_query": "spots", "prediction": "a list of tuples, where each tuple contains the", "cleaned_prediction": "a list of tuples, where each tuple contains the", "gt": "flecken"}, {"input_prompt": "Input: displays\nOutput:", "test_query": "displays", "prediction": "displays\npackage: gnome-shell\ntitle: displays", "cleaned_prediction": "displays", "gt": "anzeigen"}, {"input_prompt": "Input: albums\nOutput:", "test_query": "albums", "prediction": "1. \"the dark side of the moon", "cleaned_prediction": "1. \"the dark side of the moon", "gt": "Alben"}, {"input_prompt": "Input: held\nOutput:", "test_query": "held", "prediction": "held\nduration: 2 seconds\ndescription:", "cleaned_prediction": "held", "gt": "gehalten"}, {"input_prompt": "Input: names\nOutput:", "test_query": "names", "prediction": "- a list of tuples, where each tuple", "cleaned_prediction": "- a list of tuples, where each tuple", "gt": "namen"}, {"input_prompt": "Input: autumn\nOutput:", "test_query": "autumn", "prediction": "5\n\nexplanation: the word autumn has", "cleaned_prediction": "5", "gt": "Herbst"}, {"input_prompt": "Input: novel\nOutput:", "test_query": "novel", "prediction": "novel\ndefinition: a fictional story written in prose", "cleaned_prediction": "novel", "gt": "roman"}, {"input_prompt": "Input: prove\nOutput:", "test_query": "prove", "prediction": "prove\nexplanation: the word \"prove\" is", "cleaned_prediction": "prove", "gt": "beweisen"}, {"input_prompt": "Input: canadian\nOutput:", "test_query": "canadian", "prediction": "canada\ninput: usa\noutput: usa", "cleaned_prediction": "canada", "gt": "kanadisch"}, {"input_prompt": "Input: disorder\nOutput:", "test_query": "disorder", "prediction": "dis-order\ninput: order\noutput: or", "cleaned_prediction": "dis-order", "gt": "St\u00f6rung"}, {"input_prompt": "Input: draft\nOutput:", "test_query": "draft", "prediction": "draft\ntopics:\n1. the concept of time", "cleaned_prediction": "draft", "gt": "Entwurf"}, {"input_prompt": "Input: diocese\nOutput:", "test_query": "diocese", "prediction": "diocese\ncapitalization: title\ncontraction", "cleaned_prediction": "diocese", "gt": "bistum"}, {"input_prompt": "Input: minority\nOutput:", "test_query": "minority", "prediction": "minority\ndefinition: a group of people who are", "cleaned_prediction": "minority", "gt": "Minderheit"}, {"input_prompt": "Input: sculpture\nOutput:", "test_query": "sculpture", "prediction": "sculpture\nthe sculpture was created by a local artist", "cleaned_prediction": "sculpture", "gt": "Skulptur"}, {"input_prompt": "Input: sick\nOutput:", "test_query": "sick", "prediction": "sick\ninput: happy\noutput: happy", "cleaned_prediction": "sick", "gt": "krank"}, {"input_prompt": "Input: arms\nOutput:", "test_query": "arms", "prediction": "arms\ninput: arms arms\noutput: arms", "cleaned_prediction": "arms", "gt": "arme"}, {"input_prompt": "Input: frontier\nOutput:", "test_query": "frontier", "prediction": "frontier\ninput: \"frontier\"\noutput:", "cleaned_prediction": "frontier", "gt": "grenze"}, {"input_prompt": "Input: champions\nOutput:", "test_query": "champions", "prediction": "champions\ninput: champions league\noutput: league", "cleaned_prediction": "champions", "gt": "Meister"}, {"input_prompt": "Input: tone\nOutput:", "test_query": "tone", "prediction": "tone\nthe tone of a sound is its perceived", "cleaned_prediction": "tone", "gt": "Ton"}, {"input_prompt": "Input: faster\nOutput:", "test_query": "faster", "prediction": "faster\nexplanation: the word \"faster\"", "cleaned_prediction": "faster", "gt": "schneller"}, {"input_prompt": "Input: hit\nOutput:", "test_query": "hit", "prediction": "hit\ndefinition: (verb) to strike against", "cleaned_prediction": "hit", "gt": "schlagen"}, {"input_prompt": "Input: associate\nOutput:", "test_query": "associate", "prediction": "associate\nthe word associate has 9 letters:", "cleaned_prediction": "associate", "gt": "verbunden"}, {"input_prompt": "Input: rich\nOutput:", "test_query": "rich", "prediction": "rich\ninput: richard\noutput: rich", "cleaned_prediction": "rich", "gt": "reich"}, {"input_prompt": "Input: capitol\nOutput:", "test_query": "capitol", "prediction": "capitol\nexplanation: the word is already a", "cleaned_prediction": "capitol", "gt": "Hauptstadt"}, {"input_prompt": "Input: hunter\nOutput:", "test_query": "hunter", "prediction": "\"the hunter is a noun, which is a", "cleaned_prediction": "\"the hunter is a noun, which is a", "gt": "j\u00e4ger"}, {"input_prompt": "Input: organized\nOutput:", "test_query": "organized", "prediction": "organized\ndefinition: arranged in a logical and systematic", "cleaned_prediction": "organized", "gt": "organisiert"}, {"input_prompt": "Input: off\nOutput:", "test_query": "off", "prediction": "off\nrecursion: 0\nmemory:", "cleaned_prediction": "off", "gt": "aus"}, {"input_prompt": "Input: lutheran\nOutput:", "test_query": "lutheran", "prediction": "lutheran\ncorrected: lutheran\nexplanation: the", "cleaned_prediction": "lutheran", "gt": "lutherisch"}, {"input_prompt": "Input: soon\nOutput:", "test_query": "soon", "prediction": "soon\ndefinition: in a short time; used", "cleaned_prediction": "soon", "gt": "bald"}, {"input_prompt": "Input: engagement\nOutput:", "test_query": "engagement", "prediction": "engagement\ntopics: engagement\nthe concept of engagement", "cleaned_prediction": "engagement", "gt": "Verlobung"}, {"input_prompt": "Input: boundary\nOutput:", "test_query": "boundary", "prediction": "boundary\ndefinition: a boundary is a line that", "cleaned_prediction": "boundary", "gt": "Grenze"}, {"input_prompt": "Input: vote\nOutput:", "test_query": "vote", "prediction": "vote\ndefinition: a vote is a decision made", "cleaned_prediction": "vote", "gt": "stimme"}, {"input_prompt": "Input: sitting\nOutput:", "test_query": "sitting", "prediction": "\"sitting\" is a verb.\ndefinition:", "cleaned_prediction": "\"sitting\" is a verb.", "gt": "sitzend"}, {"input_prompt": "Input: skull\nOutput:", "test_query": "skull", "prediction": "the skull is a bony structure in the head", "cleaned_prediction": "the skull is a bony structure in the head", "gt": "Sch\u00e4del"}, {"input_prompt": "Input: author\nOutput:", "test_query": "author", "prediction": "a list of books written by the given author.", "cleaned_prediction": "a list of books written by the given author.", "gt": "autor"}, {"input_prompt": "Input: conspiracy\nOutput:", "test_query": "conspiracy", "prediction": "the term conspiracy refers to a secret plan or agreement", "cleaned_prediction": "the term conspiracy refers to a secret plan or agreement", "gt": "Verschw\u00f6rung"}, {"input_prompt": "Input: part\nOutput:", "test_query": "part", "prediction": "part\n```\nimport { part } from './", "cleaned_prediction": "part", "gt": "teil"}, {"input_prompt": "Input: starts\nOutput:", "test_query": "starts", "prediction": "starts\nexplanation: the string \"starts\" spelled", "cleaned_prediction": "starts", "gt": "sterne"}, {"input_prompt": "Input: likewise\nOutput:", "test_query": "likewise", "prediction": "likewise\nlikewise is a word that is pronounced", "cleaned_prediction": "likewise", "gt": "ebenfalls"}, {"input_prompt": "Input: equal\nOutput:", "test_query": "equal", "prediction": "equal\n\ninput: hello\noutput: hello", "cleaned_prediction": "equal", "gt": "gleich"}, {"input_prompt": "Input: under\nOutput:", "test_query": "under", "prediction": "under\nexplanation: the word \"under\" spelled", "cleaned_prediction": "under", "gt": "unter"}, {"input_prompt": "Input: quickly\nOutput:", "test_query": "quickly", "prediction": "quickly\ndefinition: at a rapid pace; with", "cleaned_prediction": "quickly", "gt": "schnell"}, {"input_prompt": "Input: formats\nOutput:", "test_query": "formats", "prediction": "formats\ninterviewer: formats\na format is", "cleaned_prediction": "formats", "gt": "Formate"}, {"input_prompt": "Input: documents\nOutput:", "test_query": "documents", "prediction": "documents\ntasks:\n- define a function that takes", "cleaned_prediction": "documents", "gt": "dokumente"}, {"input_prompt": "Input: divisions\nOutput:", "test_query": "divisions", "prediction": "a table with the following columns: \"division\",", "cleaned_prediction": "a table with the following columns: \"division\",", "gt": "Abteilungen"}, {"input_prompt": "Input: god\nOutput:", "test_query": "god", "prediction": "the word \"god\" is a popular term in", "cleaned_prediction": "the word \"god\" is a popular term in", "gt": "Gott"}, {"input_prompt": "Input: page\nOutput:", "test_query": "page", "prediction": "page\ntests: page\nrequires: page", "cleaned_prediction": "page", "gt": "seite"}, {"input_prompt": "Input: responses\nOutput:", "test_query": "responses", "prediction": "a dictionary of response counts\ndef count_responses(res", "cleaned_prediction": "a dictionary of response counts", "gt": "antworten"}, {"input_prompt": "Input: victory\nOutput:", "test_query": "victory", "prediction": "victory\ninput: defeat\noutput: defeat", "cleaned_prediction": "victory", "gt": "sieg"}, {"input_prompt": "Input: computers\nOutput:", "test_query": "computers", "prediction": "computers\ncategory: objects\ndescription: a computer", "cleaned_prediction": "computers", "gt": "Computer"}, {"input_prompt": "Input: archives\nOutput:", "test_query": "archives", "prediction": "archives\nexplanation: the input string \"archives\"", "cleaned_prediction": "archives", "gt": "Archive"}, {"input_prompt": "Input: files\nOutput:", "test_query": "files", "prediction": "files\ntasks:\ntask1\ntask2", "cleaned_prediction": "files", "gt": "dateien"}, {"input_prompt": "Input: sec\nOutput:", "test_query": "sec", "prediction": "sec\nduration: 0:00\nvolume", "cleaned_prediction": "sec", "gt": "Sekunde"}, {"input_prompt": "Input: increasingly\nOutput:", "test_query": "increasingly", "prediction": "increasingly\ndefinition: (adverb) in an", "cleaned_prediction": "increasingly", "gt": "zunehmend"}, {"input_prompt": "Input: perceived\nOutput:", "test_query": "perceived", "prediction": "perceived\ndefinition: the process of perceiving something", "cleaned_prediction": "perceived", "gt": "wahrgenommen"}, {"input_prompt": "Input: volunteers\nOutput:", "test_query": "volunteers", "prediction": "volunteers\n\ninput: volunteers\noutput: volunteers", "cleaned_prediction": "volunteers", "gt": "Freiwillige"}, {"input_prompt": "Input: strength\nOutput:", "test_query": "strength", "prediction": "strength\nerror: the term'strength' is", "cleaned_prediction": "strength", "gt": "st\u00e4rke"}, {"input_prompt": "Input: ace\nOutput:", "test_query": "ace", "prediction": "3\nexplanation: the string \"ace\"", "cleaned_prediction": "3", "gt": "Ass"}, {"input_prompt": "Input: coalition\nOutput:", "test_query": "coalition", "prediction": "coalition\nmodel architecture: this model is based on", "cleaned_prediction": "coalition", "gt": "Koalition"}, {"input_prompt": "Input: team\nOutput:", "test_query": "team", "prediction": "\"the team has 10 players.\"\nexplanation:", "cleaned_prediction": "\"the team has 10 players.\"", "gt": "mannschaft"}, {"input_prompt": "Input: novelist\nOutput:", "test_query": "novelist", "prediction": "a person who writes novels, which are long,", "cleaned_prediction": "a person who writes novels, which are long,", "gt": "Romanautor"}, {"input_prompt": "Input: fast\nOutput:", "test_query": "fast", "prediction": "fast\ninput: fast---car\noutput:", "cleaned_prediction": "fast", "gt": "schnell"}, {"input_prompt": "Input: composition\nOutput:", "test_query": "composition", "prediction": "composition\nproblem: find the sum of the products", "cleaned_prediction": "composition", "gt": "Komposition"}, {"input_prompt": "Input: former\nOutput:", "test_query": "former", "prediction": "ex-former\nexplanation: the word \"former", "cleaned_prediction": "ex-former", "gt": "ehemaliger"}, {"input_prompt": "Input: vessels\nOutput:", "test_query": "vessels", "prediction": "vessels\ninput: ships\noutput: ships", "cleaned_prediction": "vessels", "gt": "Gef\u00e4\u00dfe"}, {"input_prompt": "Input: involvement\nOutput:", "test_query": "involvement", "prediction": "involvement\nthemes: social media, social networks,", "cleaned_prediction": "involvement", "gt": "beteiligung"}, {"input_prompt": "Input: mechanics\nOutput:", "test_query": "mechanics", "prediction": "3d printing\ntopic: 3d", "cleaned_prediction": "3d printing", "gt": "mechanik"}, {"input_prompt": "Input: summit\nOutput:", "test_query": "summit", "prediction": "summit\nsummit is a noun. definition of", "cleaned_prediction": "summit", "gt": "Gipfel"}, {"input_prompt": "Input: argentine\nOutput:", "test_query": "argentine", "prediction": "argentine\ncorrected: argentine\nexplanation", "cleaned_prediction": "argentine", "gt": "Argentinier"}, {"input_prompt": "Input: positive\nOutput:", "test_query": "positive", "prediction": "positive\nrules:\n- if the input is a", "cleaned_prediction": "positive", "gt": "positiv"}, {"input_prompt": "Input: background\nOutput:", "test_query": "background", "prediction": "background\ninput: background\noutput: background", "cleaned_prediction": "background", "gt": "hintergrund"}, {"input_prompt": "Input: funeral\nOutput:", "test_query": "funeral", "prediction": "\"the deceased person's body is being placed in", "cleaned_prediction": "\"the deceased person's body is being placed in", "gt": "beerdigung"}, {"input_prompt": "Input: inspired\nOutput:", "test_query": "inspired", "prediction": "inspired\ninspired by the work of the pioneers", "cleaned_prediction": "inspired", "gt": "inspiriert"}, {"input_prompt": "Input: components\nOutput:", "test_query": "components", "prediction": "html\n---\n\nimport { h } from 'vue", "cleaned_prediction": "html", "gt": "komponenten"}, {"input_prompt": "Input: object\nOutput:", "test_query": "object", "prediction": "string\nfunction description:\nthis function takes an object", "cleaned_prediction": "string", "gt": "objekt"}, {"input_prompt": "Input: warsaw\nOutput:", "test_query": "warsaw", "prediction": "warsaw\nexplanation: the input string \"wars", "cleaned_prediction": "warsaw", "gt": "Warschau"}, {"input_prompt": "Input: male\nOutput:", "test_query": "male", "prediction": "{\n  \"name\": \"john\",\n  \"", "cleaned_prediction": "{", "gt": "m\u00e4nnlich"}, {"input_prompt": "Input: opera\nOutput:", "test_query": "opera", "prediction": "opera is a world-renowned italian art form,", "cleaned_prediction": "opera is a world-renowned italian art form,", "gt": "Oper."}, {"input_prompt": "Input: definitely\nOutput:", "test_query": "definitely", "prediction": "\"definitely\"\ninput: not\noutput:", "cleaned_prediction": "\"definitely\"", "gt": "definitiv"}, {"input_prompt": "Input: printed\nOutput:", "test_query": "printed", "prediction": "printed\nexplanation: the input is a single word", "cleaned_prediction": "printed", "gt": "gedruckt"}, {"input_prompt": "Input: join\nOutput:", "test_query": "join", "prediction": "join\n================\n\n### join\n\n`join`", "cleaned_prediction": "join", "gt": "beitreten"}, {"input_prompt": "Input: permission\nOutput:", "test_query": "permission", "prediction": "permission\n-------------------\n### permission\n#### description", "cleaned_prediction": "permission", "gt": "Erlaubnis"}, {"input_prompt": "Input: touch\nOutput:", "test_query": "touch", "prediction": "touch\nissues: #1\n\n## step", "cleaned_prediction": "touch", "gt": "ber\u00fchren"}, {"input_prompt": "Input: involved\nOutput:", "test_query": "involved", "prediction": "involved\nerror: the input \"involved\"", "cleaned_prediction": "involved", "gt": "beteiligt"}, {"input_prompt": "Input: strongly\nOutput:", "test_query": "strongly", "prediction": "strongly\ninput: strongly\noutput:", "cleaned_prediction": "strongly", "gt": "stark"}, {"input_prompt": "Input: three\nOutput:", "test_query": "three", "prediction": "9\nexplanation: the cube of 3", "cleaned_prediction": "9", "gt": "drei"}, {"input_prompt": "Input: allied\nOutput:", "test_query": "allied", "prediction": "\"allied\"\ninput: allied\noutput:", "cleaned_prediction": "\"allied\"", "gt": "verb\u00fcndet"}, {"input_prompt": "Input: free\nOutput:", "test_query": "free", "prediction": "free\nconstraints: free\n\n## step 1", "cleaned_prediction": "free", "gt": "frei"}, {"input_prompt": "Input: regiments\nOutput:", "test_query": "regiments", "prediction": "regiments\nexplanation:\nthe word \"regiments", "cleaned_prediction": "regiments", "gt": "Regimenter"}, {"input_prompt": "Input: religious\nOutput:", "test_query": "religious", "prediction": "religious\n```\nimport random\n\ndef generate_random", "cleaned_prediction": "religious", "gt": "religi\u00f6s"}, {"input_prompt": "Input: continuous\nOutput:", "test_query": "continuous", "prediction": "continuous\nmemory: continuous\nperformance: continuous", "cleaned_prediction": "continuous", "gt": "kontinuierlich"}, {"input_prompt": "Input: usage\nOutput:", "test_query": "usage", "prediction": "usage\nerror: invalid usage\ninput: usage", "cleaned_prediction": "usage", "gt": "Verwendung"}, {"input_prompt": "Input: airports\nOutput:", "test_query": "airports", "prediction": "```\n[\n  [\"atl\", \"", "cleaned_prediction": "```", "gt": "Flugh\u00e4fen"}, {"input_prompt": "Input: convoy\nOutput:", "test_query": "convoy", "prediction": "convoy\n---\n\nfunction to create a new convoy with", "cleaned_prediction": "convoy", "gt": "konvoi"}, {"input_prompt": "Input: effect\nOutput:", "test_query": "effect", "prediction": "effect\npackages: base\nprediction: a function", "cleaned_prediction": "effect", "gt": "Effekt"}, {"input_prompt": "Input: victims\nOutput:", "test_query": "victims", "prediction": "victims\nexplanation: the word \"victims", "cleaned_prediction": "victims", "gt": "Opfer"}, {"input_prompt": "Input: carefully\nOutput:", "test_query": "carefully", "prediction": "\"carefully\" is a word. it is", "cleaned_prediction": "\"carefully\" is a word. it is", "gt": "vorsichtig"}, {"input_prompt": "Input: box\nOutput:", "test_query": "box", "prediction": "box\ninput: box\noutput: box", "cleaned_prediction": "box", "gt": "kiste"}, {"input_prompt": "Input: coaches\nOutput:", "test_query": "coaches", "prediction": "1. coaches are trained to be effective", "cleaned_prediction": "1. coaches are trained to be effective", "gt": "Trainer"}, {"input_prompt": "Input: drives\nOutput:", "test_query": "drives", "prediction": "drives\ninput: drives\noutput: drives", "cleaned_prediction": "drives", "gt": "f\u00e4hrt"}, {"input_prompt": "Input: fighters\nOutput:", "test_query": "fighters", "prediction": "fighters\nthe output is a list of all the", "cleaned_prediction": "fighters", "gt": "k\u00e4mpfer"}, {"input_prompt": "Input: southern\nOutput:", "test_query": "southern", "prediction": "'s' is the southernmost letter\ninput", "cleaned_prediction": "'s' is the southernmost letter", "gt": "s\u00fcdlich"}, {"input_prompt": "Input: investigate\nOutput:", "test_query": "investigate", "prediction": "investigate\nparaphrase: investigate\nsyn", "cleaned_prediction": "investigate", "gt": "untersuchen"}, {"input_prompt": "Input: costs\nOutput:", "test_query": "costs", "prediction": "a set of optimal solutions for each cost level", "cleaned_prediction": "a set of optimal solutions for each cost level", "gt": "kosten"}, {"input_prompt": "Input: found\nOutput:", "test_query": "found", "prediction": "found\ninput: search\noutput: search", "cleaned_prediction": "found", "gt": "gefunden"}, {"input_prompt": "Input: injuries\nOutput:", "test_query": "injuries", "prediction": "injury\nthe singular form of the noun \"in", "cleaned_prediction": "injury", "gt": "Verletzungen"}, {"input_prompt": "Input: club\nOutput:", "test_query": "club", "prediction": "the word \"club\" is a noun.", "cleaned_prediction": "the word \"club\" is a noun.", "gt": "klub"}, {"input_prompt": "Input: nobility\nOutput:", "test_query": "nobility", "prediction": "nobility\ndefinition: a person of noble birth", "cleaned_prediction": "nobility", "gt": "Adel"}, {"input_prompt": "Input: dictionary\nOutput:", "test_query": "dictionary", "prediction": "list of strings\n\nthe function takes a dictionary as", "cleaned_prediction": "list of strings", "gt": "w\u00f6rterbuch"}, {"input_prompt": "Input: review\nOutput:", "test_query": "review", "prediction": "1\nexplanation: the review is positive,", "cleaned_prediction": "1", "gt": "\u00fcberpr\u00fcfung"}, {"input_prompt": "Input: obviously\nOutput:", "test_query": "obviously", "prediction": "obviously\ndefinition: in a way that is clear", "cleaned_prediction": "obviously", "gt": "offensichtlich"}, {"input_prompt": "Input: famous\nOutput:", "test_query": "famous", "prediction": "'the famous person is a celebrity.'\ninput:", "cleaned_prediction": "'the famous person is a celebrity.'", "gt": "ber\u00fchmt"}, {"input_prompt": "Input: flights\nOutput:", "test_query": "flights", "prediction": "res\nexplanation: the graph is represented as an", "cleaned_prediction": "res", "gt": "fl\u00fcge"}, {"input_prompt": "Input: need\nOutput:", "test_query": "need", "prediction": "need\ndefinition: the state of needing something or", "cleaned_prediction": "need", "gt": "brauchen"}, {"input_prompt": "Input: vampire\nOutput:", "test_query": "vampire", "prediction": "vampire\ninput: wolfman\noutput: wolf", "cleaned_prediction": "vampire", "gt": "Vampir"}, {"input_prompt": "Input: thermal\nOutput:", "test_query": "thermal", "prediction": "thermal\nspecies: thermal\nthermal conductivity of", "cleaned_prediction": "thermal", "gt": "thermisch"}, {"input_prompt": "Input: cut\nOutput:", "test_query": "cut", "prediction": "cut\ndefinition: to cut something (such as", "cleaned_prediction": "cut", "gt": "schneiden"}, {"input_prompt": "Input: gross\nOutput:", "test_query": "gross", "prediction": "gross\ninput: net\noutput: net", "cleaned_prediction": "gross", "gt": "eklig"}, {"input_prompt": "Input: slovak\nOutput:", "test_query": "slovak", "prediction": "slovensk\u00fd\ninput: slovenian", "cleaned_prediction": "slovensk\u00fd", "gt": "slowakisch"}, {"input_prompt": "Input: medieval\nOutput:", "test_query": "medieval", "prediction": "medieval\ninput: medieval\noutput: medieval", "cleaned_prediction": "medieval", "gt": "mittelalterlich"}, {"input_prompt": "Input: award\nOutput:", "test_query": "award", "prediction": "award\ninput: award\noutput: award", "cleaned_prediction": "award", "gt": "auszeichnung"}, {"input_prompt": "Input: generated\nOutput:", "test_query": "generated", "prediction": "1\nexplanation: this is a simple problem", "cleaned_prediction": "1", "gt": "erzeugt"}, {"input_prompt": "Input: grave\nOutput:", "test_query": "grave", "prediction": "grave\n\ninput: grave\noutput: grave", "cleaned_prediction": "grave", "gt": "Grab"}, {"input_prompt": "Input: north\nOutput:", "test_query": "north", "prediction": "0\ninput: south\noutput:", "cleaned_prediction": "0", "gt": "norden"}, {"input_prompt": "Input: meetings\nOutput:", "test_query": "meetings", "prediction": "meetings\nrules:\n- the meetings are sorted by", "cleaned_prediction": "meetings", "gt": "Treffen"}, {"input_prompt": "Input: colleges\nOutput:", "test_query": "colleges", "prediction": "colleges\ninput: universities\noutput: universities", "cleaned_prediction": "colleges", "gt": "Hochschulen"}, {"input_prompt": "Input: discussed\nOutput:", "test_query": "discussed", "prediction": "discussed\nwals code: 96\nmean", "cleaned_prediction": "discussed", "gt": "besprochen"}]}