{"score": {"exact_match": 0.0}, "result": [{"input_prompt": "Input: brook\nOutput:", "test_query": "brook", "prediction": "brook is a common english surname, and", "cleaned_prediction": "brook is a common english surname, and", "gt": "bach"}, {"input_prompt": "Input: suggesting\nOutput:", "test_query": "suggesting", "prediction": "i have a suggestion. you could use a paper", "cleaned_prediction": "i have a suggestion. you could use a paper", "gt": "vorschlagen"}, {"input_prompt": "Input: vocals\nOutput:", "test_query": "vocals", "prediction": "audio\nwatermark: \"sing it lo", "cleaned_prediction": "audio", "gt": "Gesang"}, {"input_prompt": "Input: released\nOutput:", "test_query": "released", "prediction": "released\n================\nreleased\n------------\n\nreleased is", "cleaned_prediction": "released", "gt": "freigegeben"}, {"input_prompt": "Input: preference\nOutput:", "test_query": "preference", "prediction": "preferences\nerror: incorrect verb usage\nexplanation:", "cleaned_prediction": "preferences", "gt": "vorliebe"}, {"input_prompt": "Input: polish\nOutput:", "test_query": "polish", "prediction": "polish\ninput: polish\noutput: polish", "cleaned_prediction": "polish", "gt": "polieren"}, {"input_prompt": "Input: fellow\nOutput:", "test_query": "fellow", "prediction": "fellow\ninput: fellowship\noutput: fellowship", "cleaned_prediction": "fellow", "gt": "kamerad"}, {"input_prompt": "Input: october\nOutput:", "test_query": "october", "prediction": "\"october is the tenth month of the year.\"", "cleaned_prediction": "\"october is the tenth month of the year.\"", "gt": "Oktober"}, {"input_prompt": "Input: subsequently\nOutput:", "test_query": "subsequently", "prediction": "subsequently\nexplanation: the word \"subsequently\"", "cleaned_prediction": "subsequently", "gt": "anschlie\u00dfend"}, {"input_prompt": "Input: works\nOutput:", "test_query": "works", "prediction": "works\ninput: test\noutput: test", "cleaned_prediction": "works", "gt": "arbeiten"}, {"input_prompt": "Input: sequel\nOutput:", "test_query": "sequel", "prediction": "this is a sequel, a follow-up to a", "cleaned_prediction": "this is a sequel, a follow-up to a", "gt": "fortsetzung"}, {"input_prompt": "Input: bio\nOutput:", "test_query": "bio", "prediction": "bio\ninput: https://www.youtube.com/watch", "cleaned_prediction": "bio", "gt": "Lebenslauf"}, {"input_prompt": "Input: stand\nOutput:", "test_query": "stand", "prediction": "stand (verb) or stands (verb)\ninput", "cleaned_prediction": "stand (verb) or stands (verb)", "gt": "stehen"}, {"input_prompt": "Input: thread\nOutput:", "test_query": "thread", "prediction": "thread\npackage: python\ndate: 202", "cleaned_prediction": "thread", "gt": "faden"}, {"input_prompt": "Input: dragon\nOutput:", "test_query": "dragon", "prediction": "dragon\ndragon (chinese)\ndragon (japanese", "cleaned_prediction": "dragon", "gt": "drache"}, {"input_prompt": "Input: mediation\nOutput:", "test_query": "mediation", "prediction": "mediation\ncategory: social sciences\ndescription: med", "cleaned_prediction": "mediation", "gt": "Vermittlung"}, {"input_prompt": "Input: this\nOutput:", "test_query": "this", "prediction": "this\ndescription: returns the object itself.\nthe", "cleaned_prediction": "this", "gt": "dieses"}, {"input_prompt": "Input: returns\nOutput:", "test_query": "returns", "prediction": "returns\nerror: valueerror: invalid literal for int", "cleaned_prediction": "returns", "gt": "R\u00fcckgaben"}, {"input_prompt": "Input: championship\nOutput:", "test_query": "championship", "prediction": "championship\ninput: championships\noutput: championships", "cleaned_prediction": "championship", "gt": "meisterschaft"}, {"input_prompt": "Input: deployed\nOutput:", "test_query": "deployed", "prediction": "deployed\nduration: 0ms\nmemory:", "cleaned_prediction": "deployed", "gt": "eingesetzt"}, {"input_prompt": "Input: borders\nOutput:", "test_query": "borders", "prediction": "border\nexplanation: the plural form of \"border", "cleaned_prediction": "border", "gt": "grenzen"}, {"input_prompt": "Input: globe\nOutput:", "test_query": "globe", "prediction": "1\nexplanation: the globe is a spherical", "cleaned_prediction": "1", "gt": "globus"}, {"input_prompt": "Input: employees\nOutput:", "test_query": "employees", "prediction": "[1, 2, 3,", "cleaned_prediction": "[1, 2, 3,", "gt": "mitarbeiter"}, {"input_prompt": "Input: talks\nOutput:", "test_query": "talks", "prediction": "talk\n1. a conversation, especially a formal", "cleaned_prediction": "talk", "gt": "gespr\u00e4che"}, {"input_prompt": "Input: write\nOutput:", "test_query": "write", "prediction": "the word \"write\" is a verb that means", "cleaned_prediction": "the word \"write\" is a verb that means", "gt": "schreiben"}, {"input_prompt": "Input: restored\nOutput:", "test_query": "restored", "prediction": "restored\nrevision: 1\nrevision comment:", "cleaned_prediction": "restored", "gt": "wiederhergestellt"}, {"input_prompt": "Input: commanding\nOutput:", "test_query": "commanding", "prediction": "commanding\ndefinition: (of a person) giving", "cleaned_prediction": "commanding", "gt": "befehlend"}, {"input_prompt": "Input: prisoner\nOutput:", "test_query": "prisoner", "prediction": "prisoner\n\ninput: police officer\noutput:", "cleaned_prediction": "prisoner", "gt": "gefangener"}, {"input_prompt": "Input: violence\nOutput:", "test_query": "violence", "prediction": "violence\nthe word \"violence\" is a", "cleaned_prediction": "violence", "gt": "Gewalt"}, {"input_prompt": "Input: egypt\nOutput:", "test_query": "egypt", "prediction": "egypt\n\ninput: abc\noutput: abc", "cleaned_prediction": "egypt", "gt": "\u00c4gypten"}, {"input_prompt": "Input: clean\nOutput:", "test_query": "clean", "prediction": "clean\nexplanation: the string \"clean\" is", "cleaned_prediction": "clean", "gt": "sauber"}, {"input_prompt": "Input: stages\nOutput:", "test_query": "stages", "prediction": "{\n  \"stage1\": [\"1\", \"", "cleaned_prediction": "{", "gt": "Stufen"}, {"input_prompt": "Input: naples\nOutput:", "test_query": "naples", "prediction": "\"naples is a city located in the", "cleaned_prediction": "\"naples is a city located in the", "gt": "Neapel"}, {"input_prompt": "Input: language\nOutput:", "test_query": "language", "prediction": "language\ncomparing the input and output, we", "cleaned_prediction": "language", "gt": "sprache"}, {"input_prompt": "Input: cap\nOutput:", "test_query": "cap", "prediction": "\"cap\"\ninput: \"apple\"\noutput:", "cleaned_prediction": "\"cap\"", "gt": "m\u00fctze"}, {"input_prompt": "Input: painter\nOutput:", "test_query": "painter", "prediction": "painter\ninput: painter\noutput: painter", "cleaned_prediction": "painter", "gt": "maler"}, {"input_prompt": "Input: custom\nOutput:", "test_query": "custom", "prediction": "custom\nduration: 1\ndescription: custom", "cleaned_prediction": "custom", "gt": "brauch"}, {"input_prompt": "Input: glass\nOutput:", "test_query": "glass", "prediction": "glass\nchange: 1\nchange:", "cleaned_prediction": "glass", "gt": "glas"}, {"input_prompt": "Input: naturally\nOutput:", "test_query": "naturally", "prediction": "naturally\nvariations:\n- naturally\n- naturally", "cleaned_prediction": "naturally", "gt": "nat\u00fcrlich"}, {"input_prompt": "Input: months\nOutput:", "test_query": "months", "prediction": "a list of the number of days in each month", "cleaned_prediction": "a list of the number of days in each month", "gt": "Monate"}, {"input_prompt": "Input: these\nOutput:", "test_query": "these", "prediction": "these\ninput: those\noutput: those", "cleaned_prediction": "these", "gt": "diese"}, {"input_prompt": "Input: quantity\nOutput:", "test_query": "quantity", "prediction": "quantity \u00d7 2.5\nthis problem is", "cleaned_prediction": "quantity \u00d7 2.5", "gt": "Menge"}, {"input_prompt": "Input: charges\nOutput:", "test_query": "charges", "prediction": "output\ninput: charges\noutput: output", "cleaned_prediction": "output", "gt": "geb\u00fchren"}, {"input_prompt": "Input: #the\nOutput:", "test_query": "#the", "prediction": "#the\ninput: #the\noutput:", "cleaned_prediction": "#the", "gt": "das"}, {"input_prompt": "Input: cult\nOutput:", "test_query": "cult", "prediction": "cult\noutput: cult\noutput: cult", "cleaned_prediction": "cult", "gt": "Kult"}, {"input_prompt": "Input: structures\nOutput:", "test_query": "structures", "prediction": "structures\nlanguage: python\nproblem: define a", "cleaned_prediction": "structures", "gt": "strukturen"}, {"input_prompt": "Input: versions\nOutput:", "test_query": "versions", "prediction": "version 1.1.0\nversions:", "cleaned_prediction": "version 1.1.0", "gt": "Versionen"}, {"input_prompt": "Input: come\nOutput:", "test_query": "come", "prediction": "come\ninput:  hello\noutput: hello", "cleaned_prediction": "come", "gt": "kommen"}, {"input_prompt": "Input: queen\nOutput:", "test_query": "queen", "prediction": "the queen is a symbol of power and royalty in", "cleaned_prediction": "the queen is a symbol of power and royalty in", "gt": "k\u00f6nigin"}, {"input_prompt": "Input: big\nOutput:", "test_query": "big", "prediction": "big\ninput: small\noutput: small", "cleaned_prediction": "big", "gt": "gro\u00df"}, {"input_prompt": "Input: citations\nOutput:", "test_query": "citations", "prediction": "int\nexplanation:\n[3,0,6", "cleaned_prediction": "int", "gt": "Zitate"}, {"input_prompt": "Input: consideration\nOutput:", "test_query": "consideration", "prediction": "consideration\ntopics: consideration\nconsideration is", "cleaned_prediction": "consideration", "gt": "Ber\u00fccksichtigung"}, {"input_prompt": "Input: animated\nOutput:", "test_query": "animated", "prediction": "animated\nerror: parse error. invalid input type", "cleaned_prediction": "animated", "gt": "animiert"}, {"input_prompt": "Input: explanation\nOutput:", "test_query": "explanation", "prediction": "explanation\na 2d array is a collection", "cleaned_prediction": "explanation", "gt": "Erkl\u00e4rung"}, {"input_prompt": "Input: hip\nOutput:", "test_query": "hip", "prediction": "hip\n================\n### hip hop\n\n#### definition", "cleaned_prediction": "hip", "gt": "H\u00fcfte"}, {"input_prompt": "Input: existed\nOutput:", "test_query": "existed", "prediction": "existed\ninput: notthere\noutput: not", "cleaned_prediction": "existed", "gt": "existiert"}, {"input_prompt": "Input: legislative\nOutput:", "test_query": "legislative", "prediction": "legislative\nenacted: 2015\nleg", "cleaned_prediction": "legislative", "gt": "gesetzgebend"}, {"input_prompt": "Input: operational\nOutput:", "test_query": "operational", "prediction": "operational\ndefinition: (of a system or equipment", "cleaned_prediction": "operational", "gt": "betriebsbereit"}, {"input_prompt": "Input: love\nOutput:", "test_query": "love", "prediction": "\"love is the answer, and you know that", "cleaned_prediction": "\"love is the answer, and you know that", "gt": "liebe"}, {"input_prompt": "Input: checking\nOutput:", "test_query": "checking", "prediction": "check\ninput: testing\noutput: test", "cleaned_prediction": "check", "gt": "\u00fcberpr\u00fcfen"}, {"input_prompt": "Input: manufacturer\nOutput:", "test_query": "manufacturer", "prediction": "manufacturer\ninput: manufacturer\noutput: manufacturer", "cleaned_prediction": "manufacturer", "gt": "hersteller"}, {"input_prompt": "Input: gay\nOutput:", "test_query": "gay", "prediction": "gay is a term used to describe a person who", "cleaned_prediction": "gay is a term used to describe a person who", "gt": "schwul"}, {"input_prompt": "Input: rate\nOutput:", "test_query": "rate", "prediction": "rate\nfailed to read the coverage data from the", "cleaned_prediction": "rate", "gt": "bewerten"}, {"input_prompt": "Input: centuries\nOutput:", "test_query": "centuries", "prediction": "string\ninput: 19\noutput: \"", "cleaned_prediction": "string", "gt": "Jahrhunderte"}, {"input_prompt": "Input: lose\nOutput:", "test_query": "lose", "prediction": "the word \"lose\" is a valid english word", "cleaned_prediction": "the word \"lose\" is a valid english word", "gt": "verlieren"}, {"input_prompt": "Input: error\nOutput:", "test_query": "error", "prediction": "error\nexplanation: the input is an error message", "cleaned_prediction": "error", "gt": "Fehler"}, {"input_prompt": "Input: uses\nOutput:", "test_query": "uses", "prediction": "uses\nerror: the use of the word '", "cleaned_prediction": "uses", "gt": "verwendet"}, {"input_prompt": "Input: automatically\nOutput:", "test_query": "automatically", "prediction": "automatically\nproblem: automatically\ndefinition: (ad", "cleaned_prediction": "automatically", "gt": "automatisch"}, {"input_prompt": "Input: replaced\nOutput:", "test_query": "replaced", "prediction": "replaced\nwikipedia: replaced\nreplaced", "cleaned_prediction": "replaced", "gt": "ersetzt"}, {"input_prompt": "Input: ability\nOutput:", "test_query": "ability", "prediction": "ability\ninput: ability\noutput: ability", "cleaned_prediction": "ability", "gt": "F\u00e4higkeit"}, {"input_prompt": "Input: university\nOutput:", "test_query": "university", "prediction": "\"university is a higher education institution that provides undergraduate", "cleaned_prediction": "\"university is a higher education institution that provides undergraduate", "gt": "universit\u00e4t"}, {"input_prompt": "Input: excellence\nOutput:", "test_query": "excellence", "prediction": "excellence\ndefinition: a state or quality of being", "cleaned_prediction": "excellence", "gt": "Exzellenz"}, {"input_prompt": "Input: trek\nOutput:", "test_query": "trek", "prediction": "\"trek\" is a noun. it can", "cleaned_prediction": "\"trek\" is a noun. it can", "gt": "Wanderung"}, {"input_prompt": "Input: showed\nOutput:", "test_query": "showed", "prediction": "showed\ninput: showed\noutput: showed", "cleaned_prediction": "showed", "gt": "gezeigt"}, {"input_prompt": "Input: ammunition\nOutput:", "test_query": "ammunition", "prediction": "ammunition\n1. the bullets fired from a", "cleaned_prediction": "ammunition", "gt": "munition"}, {"input_prompt": "Input: rush\nOutput:", "test_query": "rush", "prediction": "```\n['r', 'u', '", "cleaned_prediction": "```", "gt": "eilen"}, {"input_prompt": "Input: easily\nOutput:", "test_query": "easily", "prediction": "easily\nexplanation: the word \"easily\"", "cleaned_prediction": "easily", "gt": "leicht"}, {"input_prompt": "Input: gaelic\nOutput:", "test_query": "gaelic", "prediction": "gaelic\nthe gaelic language is a", "cleaned_prediction": "gaelic", "gt": "g\u00e4lisch"}, {"input_prompt": "Input: needs\nOutput:", "test_query": "needs", "prediction": "needs\nconstraints: \n1 <= needs.length <=", "cleaned_prediction": "needs", "gt": "bed\u00fcrfnisse"}, {"input_prompt": "Input: maps\nOutput:", "test_query": "maps", "prediction": "maps\nrules:\n- the function should return a", "cleaned_prediction": "maps", "gt": "karten"}, {"input_prompt": "Input: trains\nOutput:", "test_query": "trains", "prediction": "train\ninput: books\noutput: book", "cleaned_prediction": "train", "gt": "Z\u00fcge"}, {"input_prompt": "Input: intensity\nOutput:", "test_query": "intensity", "prediction": "intensity\nthreshold: 1\nhysteres", "cleaned_prediction": "intensity", "gt": "Intensit\u00e4t"}, {"input_prompt": "Input: week\nOutput:", "test_query": "week", "prediction": "\"week\"\ninput: 2\noutput:", "cleaned_prediction": "\"week\"", "gt": "woche"}, {"input_prompt": "Input: directions\nOutput:", "test_query": "directions", "prediction": "directions\nfunction description:\nwrite a function that takes", "cleaned_prediction": "directions", "gt": "richtungen"}, {"input_prompt": "Input: jets\nOutput:", "test_query": "jets", "prediction": "jets\nduration: 3:00\nlabel", "cleaned_prediction": "jets", "gt": "D\u00fcsenjets"}, {"input_prompt": "Input: horse\nOutput:", "test_query": "horse", "prediction": "horses are a group of equines of", "cleaned_prediction": "horses are a group of equines of", "gt": "pferd"}, {"input_prompt": "Input: privacy\nOutput:", "test_query": "privacy", "prediction": "privacy\n##### step 1: understand the concept", "cleaned_prediction": "privacy", "gt": "Privatsph\u00e4re"}, {"input_prompt": "Input: couple\nOutput:", "test_query": "couple", "prediction": "2\nexplanation: there are 2 people", "cleaned_prediction": "2", "gt": "paar"}, {"input_prompt": "Input: belgian\nOutput:", "test_query": "belgian", "prediction": "belgian\ninput: french\noutput: french", "cleaned_prediction": "belgian", "gt": "belgisch"}, {"input_prompt": "Input: editions\nOutput:", "test_query": "editions", "prediction": "\"editions\"\ninput: a\noutput:", "cleaned_prediction": "\"editions\"", "gt": "Ausgaben"}, {"input_prompt": "Input: publishers\nOutput:", "test_query": "publishers", "prediction": "publishers\ncategory: entities\ndescription: this action", "cleaned_prediction": "publishers", "gt": "verleger"}, {"input_prompt": "Input: rural\nOutput:", "test_query": "rural", "prediction": "rural\ndefinition: (of a place or area", "cleaned_prediction": "rural", "gt": "l\u00e4ndlich"}, {"input_prompt": "Input: mysterious\nOutput:", "test_query": "mysterious", "prediction": "'the word \"mysterious\" has 10", "cleaned_prediction": "'the word \"mysterious\" has 10", "gt": "geheimnisvoll"}, {"input_prompt": "Input: believed\nOutput:", "test_query": "believed", "prediction": "believed\nsynonyms: accepted, acknowledged, conceded", "cleaned_prediction": "believed", "gt": "geglaubt"}, {"input_prompt": "Input: logic\nOutput:", "test_query": "logic", "prediction": "logic\n```\ndef find_3sum(nums", "cleaned_prediction": "logic", "gt": "Logik"}, {"input_prompt": "Input: males\nOutput:", "test_query": "males", "prediction": "{'male': 1, 'female':", "cleaned_prediction": "{'male': 1, 'female':", "gt": "m\u00e4nnlich"}, {"input_prompt": "Input: telephone\nOutput:", "test_query": "telephone", "prediction": "4\nexplanation: the number of letters in", "cleaned_prediction": "4", "gt": "telefon"}, {"input_prompt": "Input: underground\nOutput:", "test_query": "underground", "prediction": "'underground'\noutput: underground\noutput:", "cleaned_prediction": "'underground'", "gt": "U-Bahn"}, {"input_prompt": "Input: never\nOutput:", "test_query": "never", "prediction": "never\nexplanation: the function always returns \"never", "cleaned_prediction": "never", "gt": "niemals"}, {"input_prompt": "Input: ranked\nOutput:", "test_query": "ranked", "prediction": "ranked\nduration: 4:47\nsummary", "cleaned_prediction": "ranked", "gt": "rangiert"}, {"input_prompt": "Input: tasmania\nOutput:", "test_query": "tasmania", "prediction": "tasmania\ninput: tazmania\noutput:", "cleaned_prediction": "tasmania", "gt": "Tasmanien"}, {"input_prompt": "Input: school\nOutput:", "test_query": "school", "prediction": "1.\tthere are many types of schools", "cleaned_prediction": "1.\tthere are many types of schools", "gt": "schule"}, {"input_prompt": "Input: syrian\nOutput:", "test_query": "syrian", "prediction": "1. the syrian arab republic, commonly known", "cleaned_prediction": "1. the syrian arab republic, commonly known", "gt": "syrisch"}, {"input_prompt": "Input: referee\nOutput:", "test_query": "referee", "prediction": "\"the referee is responsible for enforcing the rules of", "cleaned_prediction": "\"the referee is responsible for enforcing the rules of", "gt": "schiedsrichter"}, {"input_prompt": "Input: singer\nOutput:", "test_query": "singer", "prediction": "{\"name\": \"singer\", \"age\":", "cleaned_prediction": "{\"name\": \"singer\", \"age\":", "gt": "s\u00e4nger"}, {"input_prompt": "Input: revert\nOutput:", "test_query": "revert", "prediction": "revert\nexplanation: the string \"revert\"", "cleaned_prediction": "revert", "gt": "zur\u00fcckkehren"}, {"input_prompt": "Input: exactly\nOutput:", "test_query": "exactly", "prediction": "exactly\n\ninput: exactly\noutput: exactly", "cleaned_prediction": "exactly", "gt": "genau"}, {"input_prompt": "Input: instruments\nOutput:", "test_query": "instruments", "prediction": "instruments\n\nthe given code is a simple function that", "cleaned_prediction": "instruments", "gt": "Instrumente"}, {"input_prompt": "Input: substantial\nOutput:", "test_query": "substantial", "prediction": "substantial\nmeaning: having a great deal of", "cleaned_prediction": "substantial", "gt": "wesentlich"}, {"input_prompt": "Input: unions\nOutput:", "test_query": "unions", "prediction": "unions\ncontent: the word \"union\" has", "cleaned_prediction": "unions", "gt": "Gewerkschaften"}, {"input_prompt": "Input: piano\nOutput:", "test_query": "piano", "prediction": "music\nhow does a piano produce music?\na", "cleaned_prediction": "music", "gt": "klavier"}, {"input_prompt": "Input: captured\nOutput:", "test_query": "captured", "prediction": "captured\nduration: 0.02 s", "cleaned_prediction": "captured", "gt": "gefangen"}, {"input_prompt": "Input: poor\nOutput:", "test_query": "poor", "prediction": "poor\ninput: rich\noutput: rich", "cleaned_prediction": "poor", "gt": "arm"}, {"input_prompt": "Input: arbitration\nOutput:", "test_query": "arbitration", "prediction": "arbitration\nrelated to: mediation, negotiation, conflict", "cleaned_prediction": "arbitration", "gt": "Schlichtung"}, {"input_prompt": "Input: cheers\nOutput:", "test_query": "cheers", "prediction": "cheers\ninput: beer\noutput: beer", "cleaned_prediction": "cheers", "gt": "prost"}, {"input_prompt": "Input: door\nOutput:", "test_query": "door", "prediction": "door\n\ndef capitalize_first_letter(s):\n    return", "cleaned_prediction": "door", "gt": "t\u00fcr"}, {"input_prompt": "Input: waters\nOutput:", "test_query": "waters", "prediction": "\"waters\"\ninput: water\noutput: \"", "cleaned_prediction": "\"waters\"", "gt": "wasser"}, {"input_prompt": "Input: incumbent\nOutput:", "test_query": "incumbent", "prediction": "\"the incumbent is a politician who has been elected", "cleaned_prediction": "\"the incumbent is a politician who has been elected", "gt": "Amtsinhaber"}, {"input_prompt": "Input: something\nOutput:", "test_query": "something", "prediction": "something else\nthis is a description of a transformation", "cleaned_prediction": "something else", "gt": "etwas"}, {"input_prompt": "Input: ancient\nOutput:", "test_query": "ancient", "prediction": "ancient\ndefinition: (adjective) having existed", "cleaned_prediction": "ancient", "gt": "alt"}, {"input_prompt": "Input: requirements\nOutput:", "test_query": "requirements", "prediction": "requirements\ndetermines the maximum number of non-over", "cleaned_prediction": "requirements", "gt": "anforderungen"}, {"input_prompt": "Input: replacing\nOutput:", "test_query": "replacing", "prediction": "replacing\ndefinition: (verb) to take the", "cleaned_prediction": "replacing", "gt": "ersetzen"}, {"input_prompt": "Input: pioneer\nOutput:", "test_query": "pioneer", "prediction": "(noun) a person who pioneers or settles a", "cleaned_prediction": "(noun) a person who pioneers or settles a", "gt": "Pionier"}, {"input_prompt": "Input: usually\nOutput:", "test_query": "usually", "prediction": "usually\ndefinition: in a usual or customary manner", "cleaned_prediction": "usually", "gt": "gew\u00f6hnlich"}, {"input_prompt": "Input: padding\nOutput:", "test_query": "padding", "prediction": "padding\n==========================\n\n### padding\n\npadding is", "cleaned_prediction": "padding", "gt": "Polsterung"}, {"input_prompt": "Input: academic\nOutput:", "test_query": "academic", "prediction": "academic\ninput: academician\noutput: academic", "cleaned_prediction": "academic", "gt": "akademisch"}, {"input_prompt": "Input: network\nOutput:", "test_query": "network", "prediction": "network\nautocorrelation\nautocor", "cleaned_prediction": "network", "gt": "netzwerk"}, {"input_prompt": "Input: burns\nOutput:", "test_query": "burns", "prediction": "burns\nin a small village, there lived a", "cleaned_prediction": "burns", "gt": "verbrennungen"}, {"input_prompt": "Input: travels\nOutput:", "test_query": "travels", "prediction": "travel\noutput: travel\noutput: travels", "cleaned_prediction": "travel", "gt": "Reisen"}, {"input_prompt": "Input: promised\nOutput:", "test_query": "promised", "prediction": "promised\ntime: o(1)\nspace:", "cleaned_prediction": "promised", "gt": "versprochen"}, {"input_prompt": "Input: faculty\nOutput:", "test_query": "faculty", "prediction": "faculty\ninput: student\noutput: student", "cleaned_prediction": "faculty", "gt": "fakult\u00e4t"}, {"input_prompt": "Input: centered\nOutput:", "test_query": "centered", "prediction": "centered\noutput: centered\noutput: centered", "cleaned_prediction": "centered", "gt": "zentriert"}, {"input_prompt": "Input: coins\nOutput:", "test_query": "coins", "prediction": "minimum number of coins needed\n\ndef min_coins", "cleaned_prediction": "minimum number of coins needed", "gt": "m\u00fcnzen"}, {"input_prompt": "Input: accident\nOutput:", "test_query": "accident", "prediction": "accident\ninput: crash\noutput: crash", "cleaned_prediction": "accident", "gt": "unfall"}, {"input_prompt": "Input: she\nOutput:", "test_query": "she", "prediction": "she\n\ninput: hello\noutput: hello", "cleaned_prediction": "she", "gt": "sie"}, {"input_prompt": "Input: springs\nOutput:", "test_query": "springs", "prediction": "springs\ntypes: gardening\nfunctions: identify,", "cleaned_prediction": "springs", "gt": "Federn"}, {"input_prompt": "Input: coffee\nOutput:", "test_query": "coffee", "prediction": "coffee\ninput: book\noutput: book", "cleaned_prediction": "coffee", "gt": "kaffee"}, {"input_prompt": "Input: railways\nOutput:", "test_query": "railways", "prediction": "train\ninput: aircraft\noutput: plane", "cleaned_prediction": "train", "gt": "Eisenbahnen"}, {"input_prompt": "Input: followed\nOutput:", "test_query": "followed", "prediction": "followed\nduration: 0 ms\nrunt", "cleaned_prediction": "followed", "gt": "gefolgt"}, {"input_prompt": "Input: qualification\nOutput:", "test_query": "qualification", "prediction": "\u201ci think you're a great candidate for this", "cleaned_prediction": "\u201ci think you're a great candidate for this", "gt": "Qualifikation"}, {"input_prompt": "Input: prime\nOutput:", "test_query": "prime", "prediction": "prime number\nrules:\n1. the number is", "cleaned_prediction": "prime number", "gt": "prim\u00e4r"}, {"input_prompt": "Input: boat\nOutput:", "test_query": "boat", "prediction": "the boat is in the water.\n\ninput: car", "cleaned_prediction": "the boat is in the water.", "gt": "Boot"}, {"input_prompt": "Input: joined\nOutput:", "test_query": "joined", "prediction": "joined\nduration: 0:00:00", "cleaned_prediction": "joined", "gt": "beigetreten"}, {"input_prompt": "Input: comedian\nOutput:", "test_query": "comedian", "prediction": "#1: louis c.k.\n#2:", "cleaned_prediction": "#1: louis c.k.", "gt": "Komiker"}, {"input_prompt": "Input: disappeared\nOutput:", "test_query": "disappeared", "prediction": "disappeared\nexplanation: the string \"disappeared\"", "cleaned_prediction": "disappeared", "gt": "verschwunden"}, {"input_prompt": "Input: guess\nOutput:", "test_query": "guess", "prediction": "a list of possible solutions\n\"\"\"\ndef possible_s", "cleaned_prediction": "a list of possible solutions", "gt": "raten"}, {"input_prompt": "Input: define\nOutput:", "test_query": "define", "prediction": "verb. to define is to state or describe the", "cleaned_prediction": "verb. to define is to state or describe the", "gt": "definieren"}, {"input_prompt": "Input: returned\nOutput:", "test_query": "returned", "prediction": "returned\ndefinition: (verb) go or come", "cleaned_prediction": "returned", "gt": "zur\u00fcckgegeben"}, {"input_prompt": "Input: varieties\nOutput:", "test_query": "varieties", "prediction": "varieties of wine, beer, and spirits\ntypes", "cleaned_prediction": "varieties of wine, beer, and spirits", "gt": "sorten"}, {"input_prompt": "Input: scientists\nOutput:", "test_query": "scientists", "prediction": "scientists\ninput: researchers\noutput: researchers", "cleaned_prediction": "scientists", "gt": "Wissenschaftler"}, {"input_prompt": "Input: recognised\nOutput:", "test_query": "recognised", "prediction": "recognized\ncorrected: recognised\ninput: recognize", "cleaned_prediction": "recognized", "gt": "erkannt"}, {"input_prompt": "Input: fortune\nOutput:", "test_query": "fortune", "prediction": "1\nexplanation: we can simply return", "cleaned_prediction": "1", "gt": "gl\u00fcck"}, {"input_prompt": "Input: nominate\nOutput:", "test_query": "nominate", "prediction": "nominate\ncapitalization: title case\ninput", "cleaned_prediction": "nominate", "gt": "nominieren"}, {"input_prompt": "Input: tournaments\nOutput:", "test_query": "tournaments", "prediction": "a list of players and their corresponding tournament results", "cleaned_prediction": "a list of players and their corresponding tournament results", "gt": "Turniere"}, {"input_prompt": "Input: selling\nOutput:", "test_query": "selling", "prediction": "'selling'\ninput: hello\noutput: '", "cleaned_prediction": "'selling'", "gt": "verkaufen"}, {"input_prompt": "Input: connect\nOutput:", "test_query": "connect", "prediction": "connect\ninput: function\noutput: function", "cleaned_prediction": "connect", "gt": "verbinden"}, {"input_prompt": "Input: metro\nOutput:", "test_query": "metro", "prediction": "\"the metro is a type of underground rapid transit", "cleaned_prediction": "\"the metro is a type of underground rapid transit", "gt": "U-Bahn"}, {"input_prompt": "Input: statistical\nOutput:", "test_query": "statistical", "prediction": "statistical\nspecies: homo sapiens\naverage lifespan", "cleaned_prediction": "statistical", "gt": "statistisch"}, {"input_prompt": "Input: utility\nOutput:", "test_query": "utility", "prediction": "utility\nspecies: human\noccupation: utility", "cleaned_prediction": "utility", "gt": "N\u00fctzlichkeit"}, {"input_prompt": "Input: advanced\nOutput:", "test_query": "advanced", "prediction": "\"advanced\"\ninput: beginner\noutput: \"", "cleaned_prediction": "\"advanced\"", "gt": "fortgeschritten"}, {"input_prompt": "Input: hosting\nOutput:", "test_query": "hosting", "prediction": "hosting\nduration: 1ms\nexplanation:", "cleaned_prediction": "hosting", "gt": "Gastgeber"}, {"input_prompt": "Input: independence\nOutput:", "test_query": "independence", "prediction": "independence\n=========================\n\n### description\n\nthis function", "cleaned_prediction": "independence", "gt": "unabh\u00e4ngigkeit"}, {"input_prompt": "Input: massive\nOutput:", "test_query": "massive", "prediction": "massive\ndiscussion:\nthe word \"massive\"", "cleaned_prediction": "massive", "gt": "massiv"}, {"input_prompt": "Input: reviewed\nOutput:", "test_query": "reviewed", "prediction": "reviewed\ninput: reviewer\noutput: reviewer", "cleaned_prediction": "reviewed", "gt": "\u00fcberpr\u00fcft"}, {"input_prompt": "Input: latter\nOutput:", "test_query": "latter", "prediction": "latter\nexplanation: the string is the same when", "cleaned_prediction": "latter", "gt": "sp\u00e4ter"}, {"input_prompt": "Input: tactical\nOutput:", "test_query": "tactical", "prediction": "tactical\n================\n\n# tactical analysis\n\n## overview", "cleaned_prediction": "tactical", "gt": "taktisch"}, {"input_prompt": "Input: comments\nOutput:", "test_query": "comments", "prediction": "comments\nthe problem is to determine the number of", "cleaned_prediction": "comments", "gt": "kommentare"}, {"input_prompt": "Input: commenced\nOutput:", "test_query": "commenced", "prediction": "commenced\ninput: begun\noutput: begun", "cleaned_prediction": "commenced", "gt": "begonnen"}, {"input_prompt": "Input: apple\nOutput:", "test_query": "apple", "prediction": "{\"apple\": 1}\n\ninput: banana", "cleaned_prediction": "{\"apple\": 1}", "gt": "apfel"}, {"input_prompt": "Input: sources\nOutput:", "test_query": "sources", "prediction": "sources\ncontainer: source\n\nthe `sources`", "cleaned_prediction": "sources", "gt": "quellen"}, {"input_prompt": "Input: concert\nOutput:", "test_query": "concert", "prediction": "the concert was a huge success. the crowd was", "cleaned_prediction": "the concert was a huge success. the crowd was", "gt": "konzert"}, {"input_prompt": "Input: vector\nOutput:", "test_query": "vector", "prediction": "vector\ndetermine if a vector is a valid", "cleaned_prediction": "vector", "gt": "vektor"}, {"input_prompt": "Input: sun\nOutput:", "test_query": "sun", "prediction": "sun\nexplanation: the word \"sun\" has", "cleaned_prediction": "sun", "gt": "sonne"}, {"input_prompt": "Input: playing\nOutput:", "test_query": "playing", "prediction": "playing\ndefinition: the present participle of \"", "cleaned_prediction": "playing", "gt": "spielen"}, {"input_prompt": "Input: alliance\nOutput:", "test_query": "alliance", "prediction": "alliance\ninput: abcdef\noutput: abc", "cleaned_prediction": "alliance", "gt": "allianz"}, {"input_prompt": "Input: revenge\nOutput:", "test_query": "revenge", "prediction": "a vengeful person is someone who seeks revenge", "cleaned_prediction": "a vengeful person is someone who seeks revenge", "gt": "Rache"}, {"input_prompt": "Input: cartoon\nOutput:", "test_query": "cartoon", "prediction": "cartoon (no change)\nreasoning skill: the", "cleaned_prediction": "cartoon (no change)", "gt": "zeichentrickfilm"}, {"input_prompt": "Input: circulation\nOutput:", "test_query": "circulation", "prediction": "circulation\n.syntactic\nthe word \"circ", "cleaned_prediction": "circulation", "gt": "Umlauf"}, {"input_prompt": "Input: conventions\nOutput:", "test_query": "conventions", "prediction": "conventions\npopular conventions\nthere are many popular", "cleaned_prediction": "conventions", "gt": "Konventionen"}, {"input_prompt": "Input: seem\nOutput:", "test_query": "seem", "prediction": "seem\ninput: seems\noutput: seems", "cleaned_prediction": "seem", "gt": "scheinen"}, {"input_prompt": "Input: collapse\nOutput:", "test_query": "collapse", "prediction": "collapse\n================\n### description\n\nthe `collapse", "cleaned_prediction": "collapse", "gt": "zusammenbruch"}, {"input_prompt": "Input: adopted\nOutput:", "test_query": "adopted", "prediction": "adopted\ndefinition: past tense of adopt", "cleaned_prediction": "adopted", "gt": "adoptiert"}, {"input_prompt": "Input: things\nOutput:", "test_query": "things", "prediction": "things\ninput: things\noutput: things", "cleaned_prediction": "things", "gt": "Dinge"}, {"input_prompt": "Input: designs\nOutput:", "test_query": "designs", "prediction": "designs\nproblem: write a python function to calculate", "cleaned_prediction": "designs", "gt": "Entw\u00fcrfe"}, {"input_prompt": "Input: inspector\nOutput:", "test_query": "inspector", "prediction": "\"inspector gadget\"\ninput: dog\noutput", "cleaned_prediction": "\"inspector gadget\"", "gt": "Inspektor"}, {"input_prompt": "Input: films\nOutput:", "test_query": "films", "prediction": "2013 film\nthe world's end is", "cleaned_prediction": "2013 film", "gt": "filme"}, {"input_prompt": "Input: structure\nOutput:", "test_query": "structure", "prediction": "string\nfunction should return a string that represents the", "cleaned_prediction": "string", "gt": "struktur"}, {"input_prompt": "Input: same\nOutput:", "test_query": "same", "prediction": "same\nexplanation: the input is a list of", "cleaned_prediction": "same", "gt": "gleich"}, {"input_prompt": "Input: volume\nOutput:", "test_query": "volume", "prediction": "volume\nretrieves the current volume level of", "cleaned_prediction": "volume", "gt": "lautst\u00e4rke"}, {"input_prompt": "Input: square\nOutput:", "test_query": "square", "prediction": "square\n\ninput: circle\noutput: circle", "cleaned_prediction": "square", "gt": "quadrat"}, {"input_prompt": "Input: honorary\nOutput:", "test_query": "honorary", "prediction": "honorary\ndefinition: given a string of words,", "cleaned_prediction": "honorary", "gt": "ehrenamtlich"}, {"input_prompt": "Input: papers\nOutput:", "test_query": "papers", "prediction": "papers\na paper is a thin, flexible material", "cleaned_prediction": "papers", "gt": "papiere"}, {"input_prompt": "Input: effort\nOutput:", "test_query": "effort", "prediction": "performance\neffort is the energy and resources expended", "cleaned_prediction": "performance", "gt": "anstrengung"}, {"input_prompt": "Input: serbia\nOutput:", "test_query": "serbia", "prediction": "serbia\ninput: china\noutput: china", "cleaned_prediction": "serbia", "gt": "Serbien"}, {"input_prompt": "Input: compared\nOutput:", "test_query": "compared", "prediction": "compared\ninput: compare\noutput: compare", "cleaned_prediction": "compared", "gt": "verglichen"}, {"input_prompt": "Input: medals\nOutput:", "test_query": "medals", "prediction": "medals are a symbol of achievement and prestige", "cleaned_prediction": "medals are a symbol of achievement and prestige", "gt": "medaillen"}, {"input_prompt": "Input: serbian\nOutput:", "test_query": "serbian", "prediction": "serbian is a south slavic language spoken by ser", "cleaned_prediction": "serbian is a south slavic language spoken by ser", "gt": "serbisch"}, {"input_prompt": "Input: winds\nOutput:", "test_query": "winds", "prediction": "a string describing the winds\nrules:\n- the", "cleaned_prediction": "a string describing the winds", "gt": "winde"}, {"input_prompt": "Input: hospital\nOutput:", "test_query": "hospital", "prediction": "hospital\n\ninput: university\noutput: university", "cleaned_prediction": "hospital", "gt": "krankenhaus"}, {"input_prompt": "Input: duck\nOutput:", "test_query": "duck", "prediction": "duck, duck, duck, duck,", "cleaned_prediction": "duck, duck, duck, duck,", "gt": "ente"}, {"input_prompt": "Input: albanian\nOutput:", "test_query": "albanian", "prediction": "shpresa\ninput: french\noutput:", "cleaned_prediction": "shpresa", "gt": "albanisch"}, {"input_prompt": "Input: storage\nOutput:", "test_query": "storage", "prediction": "storage\nhome\n# problem: write a python", "cleaned_prediction": "storage", "gt": "lagerung"}, {"input_prompt": "Input: actress\nOutput:", "test_query": "actress", "prediction": "a person who acts in a play, movie,", "cleaned_prediction": "a person who acts in a play, movie,", "gt": "schauspielerin"}, {"input_prompt": "Input: essays\nOutput:", "test_query": "essays", "prediction": "essays\nthe benefits of online education\nthe rise", "cleaned_prediction": "essays", "gt": "aufs\u00e4tze"}, {"input_prompt": "Input: affect\nOutput:", "test_query": "affect", "prediction": "affect\n=====\n\naffect is a verb that", "cleaned_prediction": "affect", "gt": "beeinflussen"}, {"input_prompt": "Input: descent\nOutput:", "test_query": "descent", "prediction": "descent\ndescription: this is a noun, a", "cleaned_prediction": "descent", "gt": "Abstammung"}, {"input_prompt": "Input: wet\nOutput:", "test_query": "wet", "prediction": "wet\ninput: wettest\noutput: wet", "cleaned_prediction": "wet", "gt": "nass"}, {"input_prompt": "Input: communities\nOutput:", "test_query": "communities", "prediction": "community, members\ndescription: this function takes in", "cleaned_prediction": "community, members", "gt": "gemeinschaften"}, {"input_prompt": "Input: rankings\nOutput:", "test_query": "rankings", "prediction": "rank\nexplanation: this problem is a variation of", "cleaned_prediction": "rank", "gt": "Ranglisten"}, {"input_prompt": "Input: holding\nOutput:", "test_query": "holding", "prediction": "\"holding\"\nexpected output: \"holding\"\nexplanation", "cleaned_prediction": "\"holding\"", "gt": "halten"}, {"input_prompt": "Input: authorities\nOutput:", "test_query": "authorities", "prediction": "authorities\ntopics: government & politics\nthe government", "cleaned_prediction": "authorities", "gt": "Beh\u00f6rden"}, {"input_prompt": "Input: pure\nOutput:", "test_query": "pure", "prediction": "pure\ndiscussion: the input is already in the", "cleaned_prediction": "pure", "gt": "rein"}, {"input_prompt": "Input: vary\nOutput:", "test_query": "vary", "prediction": "vary\nsynonyms: alter, change, fluct", "cleaned_prediction": "vary", "gt": "variieren"}, {"input_prompt": "Input: direction\nOutput:", "test_query": "direction", "prediction": "the number of steps you need to take to reach", "cleaned_prediction": "the number of steps you need to take to reach", "gt": "richtung"}, {"input_prompt": "Input: few\nOutput:", "test_query": "few", "prediction": "3\nexplanation: in the given array [", "cleaned_prediction": "3", "gt": "wenige"}, {"input_prompt": "Input: celebrate\nOutput:", "test_query": "celebrate", "prediction": "it is a joyous occasion. celebrate with", "cleaned_prediction": "it is a joyous occasion. celebrate with", "gt": "feiern"}, {"input_prompt": "Input: cargo\nOutput:", "test_query": "cargo", "prediction": "\"i am a little teapot short and stout", "cleaned_prediction": "\"i am a little teapot short and stout", "gt": "fracht"}, {"input_prompt": "Input: tough\nOutput:", "test_query": "tough", "prediction": "'tough'\ninput: cat\noutput:", "cleaned_prediction": "'tough'", "gt": "hart"}, {"input_prompt": "Input: allowed\nOutput:", "test_query": "allowed", "prediction": "allowed\ninput: alllowed\noutput:", "cleaned_prediction": "allowed", "gt": "erlaubt"}, {"input_prompt": "Input: brought\nOutput:", "test_query": "brought", "prediction": "brought\ncorrected: brought\n\ninput", "cleaned_prediction": "brought", "gt": "gebracht"}, {"input_prompt": "Input: stars\nOutput:", "test_query": "stars", "prediction": "\"the stars are shining brightly in the night sky", "cleaned_prediction": "\"the stars are shining brightly in the night sky", "gt": "sterne"}, {"input_prompt": "Input: ways\nOutput:", "test_query": "ways", "prediction": "ways\nproblem: this problem is asking us to", "cleaned_prediction": "ways", "gt": "wege"}, {"input_prompt": "Input: happens\nOutput:", "test_query": "happens", "prediction": "happens\ndiffence: \n\nthe input and output", "cleaned_prediction": "happens", "gt": "passiert"}, {"input_prompt": "Input: foods\nOutput:", "test_query": "foods", "prediction": "[1, 1, 0,", "cleaned_prediction": "[1, 1, 0,", "gt": "lebensmittel"}, {"input_prompt": "Input: belonging\nOutput:", "test_query": "belonging", "prediction": "belonging\ndefinition: a feeling of being part of", "cleaned_prediction": "belonging", "gt": "zugeh\u00f6rigkeit"}, {"input_prompt": "Input: profit\nOutput:", "test_query": "profit", "prediction": "profit\n\n# problem\na company is considering an", "cleaned_prediction": "profit", "gt": "Gewinn"}, {"input_prompt": "Input: managers\nOutput:", "test_query": "managers", "prediction": "```\n[\n  [\"john\", \"manager", "cleaned_prediction": "```", "gt": "Manager"}, {"input_prompt": "Input: shorter\nOutput:", "test_query": "shorter", "prediction": "shorter\ninput: python\noutput: python", "cleaned_prediction": "shorter", "gt": "k\u00fcrzer"}, {"input_prompt": "Input: ship\nOutput:", "test_query": "ship", "prediction": "ship\n\ninput: shiping\noutput: shipping", "cleaned_prediction": "ship", "gt": "schiff"}, {"input_prompt": "Input: alcohol\nOutput:", "test_query": "alcohol", "prediction": "0.00\ninput: water\noutput", "cleaned_prediction": "0.00", "gt": "alkohol"}, {"input_prompt": "Input: lifetime\nOutput:", "test_query": "lifetime", "prediction": "lifetime\nduration: 3 minutes\na man", "cleaned_prediction": "lifetime", "gt": "lebenszeit"}, {"input_prompt": "Input: brother\nOutput:", "test_query": "brother", "prediction": "brother\n\ninput: father\noutput: father", "cleaned_prediction": "brother", "gt": "bruder"}, {"input_prompt": "Input: biography\nOutput:", "test_query": "biography", "prediction": "mary lou retton is an american former artistic gymn", "cleaned_prediction": "mary lou retton is an american former artistic gymn", "gt": "Biografie"}, {"input_prompt": "Input: independently\nOutput:", "test_query": "independently", "prediction": "independently\ndependent on: independently\ndefinition:", "cleaned_prediction": "independently", "gt": "unabh\u00e4ngig"}, {"input_prompt": "Input: specialist\nOutput:", "test_query": "specialist", "prediction": "specialist\ndefinition: (noun) a person who", "cleaned_prediction": "specialist", "gt": "spezialist"}, {"input_prompt": "Input: lodge\nOutput:", "test_query": "lodge", "prediction": "(lodge) n. a building, especially", "cleaned_prediction": "(lodge) n. a building, especially", "gt": "h\u00fctte"}, {"input_prompt": "Input: birds\nOutput:", "test_query": "birds", "prediction": "\"birds are beautiful. i love them.\"", "cleaned_prediction": "\"birds are beautiful. i love them.\"", "gt": "v\u00f6gel"}, {"input_prompt": "Input: defense\nOutput:", "test_query": "defense", "prediction": "defense\n================\n\n### defense\n\ndefense is a", "cleaned_prediction": "defense", "gt": "Verteidigung"}, {"input_prompt": "Input: technology\nOutput:", "test_query": "technology", "prediction": "innovation\ninnovation is not just about new ideas", "cleaned_prediction": "innovation", "gt": "technologie"}, {"input_prompt": "Input: admit\nOutput:", "test_query": "admit", "prediction": "admit\ninput: admit\noutput: admit", "cleaned_prediction": "admit", "gt": "zugeben"}, {"input_prompt": "Input: served\nOutput:", "test_query": "served", "prediction": "served\ndefinition: (verb) to give service", "cleaned_prediction": "served", "gt": "bedient"}, {"input_prompt": "Input: tend\nOutput:", "test_query": "tend", "prediction": "tend\ninput: dente\noutput: d", "cleaned_prediction": "tend", "gt": "neigen"}, {"input_prompt": "Input: chilean\nOutput:", "test_query": "chilean", "prediction": "chilean\ntranslation: chilean\npron", "cleaned_prediction": "chilean", "gt": "chilenisch"}, {"input_prompt": "Input: saved\nOutput:", "test_query": "saved", "prediction": "saved\nexamples:\n\n```\ninput: \"hello", "cleaned_prediction": "saved", "gt": "gespeichert"}, {"input_prompt": "Input: without\nOutput:", "test_query": "without", "prediction": "with\n\ninput: without\noutput: with", "cleaned_prediction": "with", "gt": "ohne"}, {"input_prompt": "Input: decades\nOutput:", "test_query": "decades", "prediction": "a list of the most common words in the text", "cleaned_prediction": "a list of the most common words in the text", "gt": "jahrzehnte"}, {"input_prompt": "Input: notice\nOutput:", "test_query": "notice", "prediction": "notice\nerror: no error\ninput: notice", "cleaned_prediction": "notice", "gt": "bemerken"}, {"input_prompt": "Input: opponents\nOutput:", "test_query": "opponents", "prediction": "opponents\nfunctions: convert_to_int_list\ndescription", "cleaned_prediction": "opponents", "gt": "Gegner"}, {"input_prompt": "Input: reserves\nOutput:", "test_query": "reserves", "prediction": "1\nexplanation: \nthe first row [", "cleaned_prediction": "1", "gt": "reserven"}, {"input_prompt": "Input: particular\nOutput:", "test_query": "particular", "prediction": "particular\ninput: general\noutput: general", "cleaned_prediction": "particular", "gt": "besonders"}, {"input_prompt": "Input: provided\nOutput:", "test_query": "provided", "prediction": "- `response` object\n- `error", "cleaned_prediction": "- `response` object", "gt": "bereitgestellt"}, {"input_prompt": "Input: sector\nOutput:", "test_query": "sector", "prediction": "a list of tuples, where each tuple contains a", "cleaned_prediction": "a list of tuples, where each tuple contains a", "gt": "sektor"}, {"input_prompt": "Input: sure\nOutput:", "test_query": "sure", "prediction": "sure\ndefinition: i am certain. i know", "cleaned_prediction": "sure", "gt": "sicher"}, {"input_prompt": "Input: opinions\nOutput:", "test_query": "opinions", "prediction": "opinions\noutput: opinions\noutput: opinions", "cleaned_prediction": "opinions", "gt": "meinungen"}, {"input_prompt": "Input: simply\nOutput:", "test_query": "simply", "prediction": "simply\nexplanation: the word \"simply\"", "cleaned_prediction": "simply", "gt": "einfach"}, {"input_prompt": "Input: edit\nOutput:", "test_query": "edit", "prediction": "edit\ndefinition: a written or printed version of", "cleaned_prediction": "edit", "gt": "bearbeiten"}, {"input_prompt": "Input: boundaries\nOutput:", "test_query": "boundaries", "prediction": "a matrix of 2d coordinates of points that", "cleaned_prediction": "a matrix of 2d coordinates of points that", "gt": "Grenzen"}, {"input_prompt": "Input: scholarly\nOutput:", "test_query": "scholarly", "prediction": "scholarly\ndefinition: relating to or characteristic of scholars", "cleaned_prediction": "scholarly", "gt": "gelehrt"}, {"input_prompt": "Input: expensive\nOutput:", "test_query": "expensive", "prediction": "the word \"expensive\" is a", "cleaned_prediction": "the word \"expensive\" is a", "gt": "teuer"}, {"input_prompt": "Input: such\nOutput:", "test_query": "such", "prediction": "such\ndefinition: (adverb) to a", "cleaned_prediction": "such", "gt": "solche"}, {"input_prompt": "Input: streams\nOutput:", "test_query": "streams", "prediction": "streams\ntasks:\n- find the most frequent word", "cleaned_prediction": "streams", "gt": "Str\u00f6me"}, {"input_prompt": "Input: draw\nOutput:", "test_query": "draw", "prediction": "draw\nexpectation: the program should return an", "cleaned_prediction": "draw", "gt": "zeichnen"}, {"input_prompt": "Input: vehicles\nOutput:", "test_query": "vehicles", "prediction": "vehicle\ninput: vehicles\noutput: vehicle", "cleaned_prediction": "vehicle", "gt": "Fahrzeuge"}, {"input_prompt": "Input: prevented\nOutput:", "test_query": "prevented", "prediction": "prevented\ndefinition: to stop or prevent something from", "cleaned_prediction": "prevented", "gt": "verhindert"}, {"input_prompt": "Input: alive\nOutput:", "test_query": "alive", "prediction": "alive\nduration: 2.5 seconds", "cleaned_prediction": "alive", "gt": "lebendig"}, {"input_prompt": "Input: dream\nOutput:", "test_query": "dream", "prediction": "dream\nexplanation: the word \"dream\" is", "cleaned_prediction": "dream", "gt": "traum"}, {"input_prompt": "Input: determine\nOutput:", "test_query": "determine", "prediction": "determine\nspeed: 400\nacceleration:", "cleaned_prediction": "determine", "gt": "bestimmen"}, {"input_prompt": "Input: branch\nOutput:", "test_query": "branch", "prediction": "branch\ntopics: branches\nthe term \"branch", "cleaned_prediction": "branch", "gt": "zweig"}, {"input_prompt": "Input: visit\nOutput:", "test_query": "visit", "prediction": "visit\ncapitalization: proper\npart of speech", "cleaned_prediction": "visit", "gt": "besuchen"}, {"input_prompt": "Input: reflect\nOutput:", "test_query": "reflect", "prediction": "reflection\nhomophones\nhomophones are", "cleaned_prediction": "reflection", "gt": "widerspiegeln"}, {"input_prompt": "Input: sheep\nOutput:", "test_query": "sheep", "prediction": "\"i love sheep. they are so fluffy.\"", "cleaned_prediction": "\"i love sheep. they are so fluffy.\"", "gt": "schaf"}, {"input_prompt": "Input: edited\nOutput:", "test_query": "edited", "prediction": "edited\nthe word \"edited\" is spelled the", "cleaned_prediction": "edited", "gt": "bearbeitet"}, {"input_prompt": "Input: especially\nOutput:", "test_query": "especially", "prediction": "especially\n1. especially\n1.1.", "cleaned_prediction": "especially", "gt": "besonders"}, {"input_prompt": "Input: prize\nOutput:", "test_query": "prize", "prediction": "prize\n\nexplanation:\nthe input string \"prize", "cleaned_prediction": "prize", "gt": "preis"}, {"input_prompt": "Input: unity\nOutput:", "test_query": "unity", "prediction": "unity\ngenerating a random unity matrix\nimport random", "cleaned_prediction": "unity", "gt": "Einheit"}, {"input_prompt": "Input: bavaria\nOutput:", "test_query": "bavaria", "prediction": "bavaria\ninput: hessen\noutput:", "cleaned_prediction": "bavaria", "gt": "Bayern"}, {"input_prompt": "Input: actual\nOutput:", "test_query": "actual", "prediction": "actual\nexamples:\n- input: \"hello,", "cleaned_prediction": "actual", "gt": "tats\u00e4chlich"}, {"input_prompt": "Input: numbered\nOutput:", "test_query": "numbered", "prediction": "numbered\n================================\n\na numbered list of items.", "cleaned_prediction": "numbered", "gt": "nummeriert"}, {"input_prompt": "Input: storm\nOutput:", "test_query": "storm", "prediction": "storm\ninput: stormy\noutput: storm", "cleaned_prediction": "storm", "gt": "sturm"}, {"input_prompt": "Input: leads\nOutput:", "test_query": "leads", "prediction": "leads\ndefined in: /home/travis/build", "cleaned_prediction": "leads", "gt": "f\u00fchrt"}, {"input_prompt": "Input: cape\nOutput:", "test_query": "cape", "prediction": "the cape is a distinctive part of a superhero costume", "cleaned_prediction": "the cape is a distinctive part of a superhero costume", "gt": "Umhang"}, {"input_prompt": "Input: reformed\nOutput:", "test_query": "reformed", "prediction": "reform\ninput: reforming\noutput: reform", "cleaned_prediction": "reform", "gt": "reformiert"}, {"input_prompt": "Input: referenced\nOutput:", "test_query": "referenced", "prediction": "referenced\nrevision: 2\nlevel:", "cleaned_prediction": "referenced", "gt": "bezogen"}, {"input_prompt": "Input: covers\nOutput:", "test_query": "covers", "prediction": "4\nexplanation: we can choose the sets", "cleaned_prediction": "4", "gt": "Bez\u00fcge"}, {"input_prompt": "Input: argument\nOutput:", "test_query": "argument", "prediction": "argument squared\nconstraints:\n-1 <= argument <=", "cleaned_prediction": "argument squared", "gt": "streit"}, {"input_prompt": "Input: identification\nOutput:", "test_query": "identification", "prediction": "identification\nspecies: homo sapiens\ndomain:", "cleaned_prediction": "identification", "gt": "Identifikation"}, {"input_prompt": "Input: relative\nOutput:", "test_query": "relative", "prediction": "absolute\ndifficulty: 3\n\nexplanation: given", "cleaned_prediction": "absolute", "gt": "verwandter"}, {"input_prompt": "Input: damage\nOutput:", "test_query": "damage", "prediction": "damage\nthe output is the same as the input", "cleaned_prediction": "damage", "gt": "schaden"}, {"input_prompt": "Input: controls\nOutput:", "test_query": "controls", "prediction": "controls\nerror: controls\ncontrols are a fundamental", "cleaned_prediction": "controls", "gt": "steuert"}, {"input_prompt": "Input: cleanup\nOutput:", "test_query": "cleanup", "prediction": "cleanup\ninput: clean up\noutput: clean", "cleaned_prediction": "cleanup", "gt": "aufr\u00e4umen"}, {"input_prompt": "Input: agricultural\nOutput:", "test_query": "agricultural", "prediction": "agriculture\ninput: biotech\noutput: bi", "cleaned_prediction": "agriculture", "gt": "landwirtschaftlich"}, {"input_prompt": "Input: fewer\nOutput:", "test_query": "fewer", "prediction": "fewer\ndefinition: less in number or amount;", "cleaned_prediction": "fewer", "gt": "weniger"}, {"input_prompt": "Input: moth\nOutput:", "test_query": "moth", "prediction": "moth\nfinal answer: the final answer is moth", "cleaned_prediction": "moth", "gt": "motte"}, {"input_prompt": "Input: print\nOutput:", "test_query": "print", "prediction": "print\n\nexplanation: the function `to_camel", "cleaned_prediction": "print", "gt": "drucken"}, {"input_prompt": "Input: voyage\nOutput:", "test_query": "voyage", "prediction": "the word voyage has 6 letters: v-o", "cleaned_prediction": "the word voyage has 6 letters: v-o", "gt": "Reise"}, {"input_prompt": "Input: thus\nOutput:", "test_query": "thus", "prediction": "thus\ninput: therefore\noutput: therefore", "cleaned_prediction": "thus", "gt": "somit"}, {"input_prompt": "Input: eventually\nOutput:", "test_query": "eventually", "prediction": "eventually\nthe word \"eventually\" is a", "cleaned_prediction": "eventually", "gt": "schlie\u00dflich"}, {"input_prompt": "Input: colonel\nOutput:", "test_query": "colonel", "prediction": "the word \"colonel\" can be spelled", "cleaned_prediction": "the word \"colonel\" can be spelled", "gt": "oberst"}, {"input_prompt": "Input: mountains\nOutput:", "test_query": "mountains", "prediction": "the mountains\n\ninput: cities\noutput: the", "cleaned_prediction": "the mountains", "gt": "berge"}, {"input_prompt": "Input: tanks\nOutput:", "test_query": "tanks", "prediction": "tanks\ninput: tanks\noutput: tanks", "cleaned_prediction": "tanks", "gt": "Panzer"}, {"input_prompt": "Input: remains\nOutput:", "test_query": "remains", "prediction": "remains\ndefinition: the part of a thing that", "cleaned_prediction": "remains", "gt": "bleibt"}, {"input_prompt": "Input: detailed\nOutput:", "test_query": "detailed", "prediction": "detailed\nglossary: detailed \u00b9", "cleaned_prediction": "detailed", "gt": "detailliert"}, {"input_prompt": "Input: professionals\nOutput:", "test_query": "professionals", "prediction": "professionals\nprofessionals are individuals who have acquired", "cleaned_prediction": "professionals", "gt": "Profis"}, {"input_prompt": "Input: produce\nOutput:", "test_query": "produce", "prediction": "produce\noutput: produce\noutput: produce", "cleaned_prediction": "produce", "gt": "produzieren"}, {"input_prompt": "Input: jamaica\nOutput:", "test_query": "jamaica", "prediction": "jamaica\njamaica is an", "cleaned_prediction": "jamaica", "gt": "Jamaika"}, {"input_prompt": "Input: copy\nOutput:", "test_query": "copy", "prediction": "copy\ninput: paste\noutput: paste", "cleaned_prediction": "copy", "gt": "kopieren"}, {"input_prompt": "Input: continued\nOutput:", "test_query": "continued", "prediction": "continued\nsides: continued\nangle measures:", "cleaned_prediction": "continued", "gt": "fortgesetzt"}, {"input_prompt": "Input: diplomatic\nOutput:", "test_query": "diplomatic", "prediction": "diplomatic\ninput: diplomacy\noutput: diplomacy", "cleaned_prediction": "diplomatic", "gt": "diplomatisch"}, {"input_prompt": "Input: lecture\nOutput:", "test_query": "lecture", "prediction": "# lecture notes\n=====================================\n\n## overview", "cleaned_prediction": "# lecture notes", "gt": "vorlesung"}, {"input_prompt": "Input: content\nOutput:", "test_query": "content", "prediction": "content\n```\nimport { get } from '", "cleaned_prediction": "content", "gt": "inhalt"}, {"input_prompt": "Input: progress\nOutput:", "test_query": "progress", "prediction": "progress\npackage: progress\nparenthesis: (", "cleaned_prediction": "progress", "gt": "Fortschritt"}, {"input_prompt": "Input: licensing\nOutput:", "test_query": "licensing", "prediction": "license\ninput: licenses\noutput: license", "cleaned_prediction": "license", "gt": "Lizenzierung"}, {"input_prompt": "Input: gauge\nOutput:", "test_query": "gauge", "prediction": "gauge\nfiles: gauge.py\nfunctions: gauge", "cleaned_prediction": "gauge", "gt": "messger\u00e4t"}, {"input_prompt": "Input: sample\nOutput:", "test_query": "sample", "prediction": "sample\ninput: sample\noutput: sample", "cleaned_prediction": "sample", "gt": "beispiel"}, {"input_prompt": "Input: politically\nOutput:", "test_query": "politically", "prediction": "politically\ndefinition: (adverb) relating to", "cleaned_prediction": "politically", "gt": "politisch"}, {"input_prompt": "Input: analysis\nOutput:", "test_query": "analysis", "prediction": "analysis\ndefinition: a detailed examination and interpretation of", "cleaned_prediction": "analysis", "gt": "Analyse"}, {"input_prompt": "Input: servant\nOutput:", "test_query": "servant", "prediction": "the role of a servant is to perform various tasks", "cleaned_prediction": "the role of a servant is to perform various tasks", "gt": "Diener"}, {"input_prompt": "Input: brown\nOutput:", "test_query": "brown", "prediction": "3\n\nexplanation: there are 3 words", "cleaned_prediction": "3", "gt": "braun"}, {"input_prompt": "Input: agencies\nOutput:", "test_query": "agencies", "prediction": "agencies\ncountries: afghanistan, albania, algeria,", "cleaned_prediction": "agencies", "gt": "Agenturen"}, {"input_prompt": "Input: calling\nOutput:", "test_query": "calling", "prediction": "calling\nduration: 1 second\ndescription:", "cleaned_prediction": "calling", "gt": "anrufen"}, {"input_prompt": "Input: exclusively\nOutput:", "test_query": "exclusively", "prediction": "exclusively\ninput: exclusively\noutput: exclusively", "cleaned_prediction": "exclusively", "gt": "ausschlie\u00dflich"}, {"input_prompt": "Input: shot\nOutput:", "test_query": "shot", "prediction": "shot\ninput: shots\noutput: shots", "cleaned_prediction": "shot", "gt": "schuss"}, {"input_prompt": "Input: historic\nOutput:", "test_query": "historic", "prediction": "historical\nchange: added -al suffix\nthe", "cleaned_prediction": "historical", "gt": "historisch"}, {"input_prompt": "Input: thought\nOutput:", "test_query": "thought", "prediction": "the word \"thought\" contains 6 letters.", "cleaned_prediction": "the word \"thought\" contains 6 letters.", "gt": "gedanke"}, {"input_prompt": "Input: refuge\nOutput:", "test_query": "refuge", "prediction": "refuge\na place where people can go to be", "cleaned_prediction": "refuge", "gt": "Zuflucht"}, {"input_prompt": "Input: manage\nOutput:", "test_query": "manage", "prediction": "manage\ndefinition: to handle or supervise something or", "cleaned_prediction": "manage", "gt": "verwalten"}, {"input_prompt": "Input: tribute\nOutput:", "test_query": "tribute", "prediction": "\"tribute\"\ninput: 123", "cleaned_prediction": "\"tribute\"", "gt": "Tribut"}, {"input_prompt": "Input: lawyer\nOutput:", "test_query": "lawyer", "prediction": "\"a lawyer is a person who practices law,", "cleaned_prediction": "\"a lawyer is a person who practices law,", "gt": "Anwalt"}, {"input_prompt": "Input: remainder\nOutput:", "test_query": "remainder", "prediction": "the number of steps to get to the remainder", "cleaned_prediction": "the number of steps to get to the remainder", "gt": "Rest"}, {"input_prompt": "Input: institute\nOutput:", "test_query": "institute", "prediction": "institute of advanced study\ninstitute of", "cleaned_prediction": "institute of advanced study", "gt": "Institut"}, {"input_prompt": "Input: manor\nOutput:", "test_query": "manor", "prediction": "manor\nexplanation: the string \"manor", "cleaned_prediction": "manor", "gt": "Herrenhaus"}, {"input_prompt": "Input: truth\nOutput:", "test_query": "truth", "prediction": "truth\nthe story of the world is a complex", "cleaned_prediction": "truth", "gt": "wahrheit"}, {"input_prompt": "Input: recorded\nOutput:", "test_query": "recorded", "prediction": "recorded\nduration: 1:00\nformat", "cleaned_prediction": "recorded", "gt": "aufgezeichnet"}, {"input_prompt": "Input: mercury\nOutput:", "test_query": "mercury", "prediction": "\"mercury is a planet in our solar system", "cleaned_prediction": "\"mercury is a planet in our solar system", "gt": "Merkur"}, {"input_prompt": "Input: called\nOutput:", "test_query": "called", "prediction": "called\n\ninput: hello\noutput: hello", "cleaned_prediction": "called", "gt": "genannt"}, {"input_prompt": "Input: lap\nOutput:", "test_query": "lap", "prediction": "\"lap\"\ninput: \"lap\"\noutput", "cleaned_prediction": "\"lap\"", "gt": "scho\u00df"}, {"input_prompt": "Input: son\nOutput:", "test_query": "son", "prediction": "{\"son\": \"1\"}\nexplanation: there is", "cleaned_prediction": "{\"son\": \"1\"}", "gt": "sohn"}, {"input_prompt": "Input: appearances\nOutput:", "test_query": "appearances", "prediction": "appearances\ndefinition: the number of times a word", "cleaned_prediction": "appearances", "gt": "Erscheinungen"}, {"input_prompt": "Input: close\nOutput:", "test_query": "close", "prediction": "close\nexplanation: the word \"close\" spelled", "cleaned_prediction": "close", "gt": "schlie\u00dfen"}, {"input_prompt": "Input: actions\nOutput:", "test_query": "actions", "prediction": "observations\nmodel: mixture of experts (mo", "cleaned_prediction": "observations", "gt": "Aktionen"}, {"input_prompt": "Input: colors\nOutput:", "test_query": "colors", "prediction": "a string with a list of color names that match", "cleaned_prediction": "a string with a list of color names that match", "gt": "farben"}, {"input_prompt": "Input: organisations\nOutput:", "test_query": "organisations", "prediction": "organisations\nthe following list of organisations is not exhaustive", "cleaned_prediction": "organisations", "gt": "Organisationen"}, {"input_prompt": "Input: populated\nOutput:", "test_query": "populated", "prediction": "populated\nduration: 1\ndefinition: a", "cleaned_prediction": "populated", "gt": "bev\u00f6lkert"}, {"input_prompt": "Input: charge\nOutput:", "test_query": "charge", "prediction": "charge\nmodel type: sequence-to-sequence", "cleaned_prediction": "charge", "gt": "aufladen"}, {"input_prompt": "Input: heir\nOutput:", "test_query": "heir", "prediction": "\"i\" is the first letter of the word", "cleaned_prediction": "\"i\" is the first letter of the word", "gt": "Erbe"}, {"input_prompt": "Input: individuals\nOutput:", "test_query": "individuals", "prediction": "individuals with a specified characteristic\nmethod: this method", "cleaned_prediction": "individuals with a specified characteristic", "gt": "Einzelpersonen"}, {"input_prompt": "Input: generals\nOutput:", "test_query": "generals", "prediction": "4\nexplanation: the minimum number of rounds", "cleaned_prediction": "4", "gt": "gener\u00e4le"}, {"input_prompt": "Input: opened\nOutput:", "test_query": "opened", "prediction": "opened\nexplanation: the word \"opened\" is", "cleaned_prediction": "opened", "gt": "ge\u00f6ffnet"}, {"input_prompt": "Input: shops\nOutput:", "test_query": "shops", "prediction": "shops\n\ninput: a man, a plan,", "cleaned_prediction": "shops", "gt": "gesch\u00e4fte"}, {"input_prompt": "Input: aside\nOutput:", "test_query": "aside", "prediction": "aside\ninput: aside\noutput: aside", "cleaned_prediction": "aside", "gt": "beiseite"}, {"input_prompt": "Input: collections\nOutput:", "test_query": "collections", "prediction": "collections\npurpose: a collection of all the collections", "cleaned_prediction": "collections", "gt": "sammlungen"}, {"input_prompt": "Input: below\nOutput:", "test_query": "below", "prediction": "below\nexplanation: the string \"below\" is", "cleaned_prediction": "below", "gt": "unten"}, {"input_prompt": "Input: infinite\nOutput:", "test_query": "infinite", "prediction": "infinite\nexplanation: the input is an infinite sequence", "cleaned_prediction": "infinite", "gt": "unendlich"}, {"input_prompt": "Input: chase\nOutput:", "test_query": "chase", "prediction": "chase\ncapitalization\nthe input string \"ch", "cleaned_prediction": "chase", "gt": "jagen"}, {"input_prompt": "Input: tape\nOutput:", "test_query": "tape", "prediction": "tape\nmemory: tape\ntime: o(n", "cleaned_prediction": "tape", "gt": "band"}, {"input_prompt": "Input: prayer\nOutput:", "test_query": "prayer", "prediction": "the 5th commandment (exodus", "cleaned_prediction": "the 5th commandment (exodus", "gt": "Gebet"}, {"input_prompt": "Input: performing\nOutput:", "test_query": "performing", "prediction": "performing\nperforming\nperforming\nperforming", "cleaned_prediction": "performing", "gt": "auff\u00fchren"}, {"input_prompt": "Input: crop\nOutput:", "test_query": "crop", "prediction": "agriculture\ninput: grow\noutput: agriculture", "cleaned_prediction": "agriculture", "gt": "Ernte"}, {"input_prompt": "Input: mills\nOutput:", "test_query": "mills", "prediction": "mill\ndefault plural form: none\ndefault singular", "cleaned_prediction": "mill", "gt": "m\u00fchlen"}, {"input_prompt": "Input: explains\nOutput:", "test_query": "explains", "prediction": "explains\ndefinition: (verb) to give a", "cleaned_prediction": "explains", "gt": "erkl\u00e4rt"}, {"input_prompt": "Input: policies\nOutput:", "test_query": "policies", "prediction": "policy\npolicy (noun)\n  1.", "cleaned_prediction": "policy", "gt": "Richtlinien"}, {"input_prompt": "Input: point\nOutput:", "test_query": "point", "prediction": "the distance between the point and the origin\nfunction", "cleaned_prediction": "the distance between the point and the origin", "gt": "punkt"}, {"input_prompt": "Input: throw\nOutput:", "test_query": "throw", "prediction": "\"the word 'throw' is a verb,", "cleaned_prediction": "\"the word 'throw' is a verb,", "gt": "werfen"}, {"input_prompt": "Input: crazy\nOutput:", "test_query": "crazy", "prediction": "\"i'm crazy about you.\"\n\nexplanation: the", "cleaned_prediction": "\"i'm crazy about you.\"", "gt": "verr\u00fcckt"}, {"input_prompt": "Input: bosnia\nOutput:", "test_query": "bosnia", "prediction": "bosnia and herzegovina\nexplanation: bosnia and", "cleaned_prediction": "bosnia and herzegovina", "gt": "Bosnien"}, {"input_prompt": "Input: mines\nOutput:", "test_query": "mines", "prediction": "mines\nfirst, we need to make a copy", "cleaned_prediction": "mines", "gt": "meins"}, {"input_prompt": "Input: oriented\nOutput:", "test_query": "oriented", "prediction": "oriented\nlearning: supervised\nlanguage: python", "cleaned_prediction": "oriented", "gt": "orientiert"}, {"input_prompt": "Input: too\nOutput:", "test_query": "too", "prediction": "too\nexplanation: the word \u201ctoo\u201d is", "cleaned_prediction": "too", "gt": "auch"}, {"input_prompt": "Input: copyrighted\nOutput:", "test_query": "copyrighted", "prediction": "copyrighted\nthe word \"copyrighted\" is a", "cleaned_prediction": "copyrighted", "gt": "urheberrechtlich gesch\u00fctzt"}, {"input_prompt": "Input: hull\nOutput:", "test_query": "hull", "prediction": "hull\noutput: hull\noutput: hull", "cleaned_prediction": "hull", "gt": "Rumpf"}, {"input_prompt": "Input: knee\nOutput:", "test_query": "knee", "prediction": "\"the knee joint is a synovial hinge", "cleaned_prediction": "\"the knee joint is a synovial hinge", "gt": "knie"}, {"input_prompt": "Input: seems\nOutput:", "test_query": "seems", "prediction": "seems\ninput: seems\noutput: seems", "cleaned_prediction": "seems", "gt": "scheint"}, {"input_prompt": "Input: germans\nOutput:", "test_query": "germans", "prediction": "germans\nrule: capitalize the first letter of", "cleaned_prediction": "germans", "gt": "Deutsche"}, {"input_prompt": "Input: bits\nOutput:", "test_query": "bits", "prediction": "string\nthe function should return the binary representation of", "cleaned_prediction": "string", "gt": "St\u00fccke"}, {"input_prompt": "Input: closer\nOutput:", "test_query": "closer", "prediction": "closer\ndefinition: (of a relationship or connection", "cleaned_prediction": "closer", "gt": "n\u00e4her"}, {"input_prompt": "Input: working\nOutput:", "test_query": "working", "prediction": "working\nduration: 1ms\nrounds", "cleaned_prediction": "working", "gt": "arbeiten"}, {"input_prompt": "Input: comprehensive\nOutput:", "test_query": "comprehensive", "prediction": "comprehensive\ndefinition: (of a treatment or approach", "cleaned_prediction": "comprehensive", "gt": "umfassend"}, {"input_prompt": "Input: measurement\nOutput:", "test_query": "measurement", "prediction": "measurement\ntypes of tasks: measurement tasks\nad", "cleaned_prediction": "measurement", "gt": "messung"}, {"input_prompt": "Input: circuit\nOutput:", "test_query": "circuit", "prediction": "circuit\nin this chapter, we will discuss the", "cleaned_prediction": "circuit", "gt": "schaltkreis"}, {"input_prompt": "Input: flowers\nOutput:", "test_query": "flowers", "prediction": "\"you are a beautiful flower.\"\ninput: cat", "cleaned_prediction": "\"you are a beautiful flower.\"", "gt": "blumen"}, {"input_prompt": "Input: perhaps\nOutput:", "test_query": "perhaps", "prediction": "possibly\ndefinition: (adverb) in a", "cleaned_prediction": "possibly", "gt": "vielleicht"}, {"input_prompt": "Input: daughters\nOutput:", "test_query": "daughters", "prediction": "daughters\ninput: daughers\noutput:", "cleaned_prediction": "daughters", "gt": "t\u00f6chter"}, {"input_prompt": "Input: figures\nOutput:", "test_query": "figures", "prediction": "figures with a consistent style\ntactic: use", "cleaned_prediction": "figures with a consistent style", "gt": "zahlen"}, {"input_prompt": "Input: travelled\nOutput:", "test_query": "travelled", "prediction": "travelled\ninput: travelled\noutput: travelled", "cleaned_prediction": "travelled", "gt": "gereist"}, {"input_prompt": "Input: revised\nOutput:", "test_query": "revised", "prediction": "revised\ninput: revised\noutput: revised", "cleaned_prediction": "revised", "gt": "\u00fcberarbeitet"}, {"input_prompt": "Input: angry\nOutput:", "test_query": "angry", "prediction": "\"the word 'angry' is an adjective", "cleaned_prediction": "\"the word 'angry' is an adjective", "gt": "w\u00fctend"}, {"input_prompt": "Input: asks\nOutput:", "test_query": "asks", "prediction": "ask\ninput: asked\noutput: ask", "cleaned_prediction": "ask", "gt": "fragt"}, {"input_prompt": "Input: spots\nOutput:", "test_query": "spots", "prediction": "spots\n\ninput: dogs\noutput: dogs", "cleaned_prediction": "spots", "gt": "flecken"}, {"input_prompt": "Input: displays\nOutput:", "test_query": "displays", "prediction": "displays\nerror: displays\nthe input and output", "cleaned_prediction": "displays", "gt": "anzeigen"}, {"input_prompt": "Input: albums\nOutput:", "test_query": "albums", "prediction": "albums\ninput: \"the dark side of the", "cleaned_prediction": "albums", "gt": "Alben"}, {"input_prompt": "Input: held\nOutput:", "test_query": "held", "prediction": "held\nduration: 1 second\ndescription:", "cleaned_prediction": "held", "gt": "gehalten"}, {"input_prompt": "Input: names\nOutput:", "test_query": "names", "prediction": "names\n\nexample:\ninput: [\"john\",\"mary", "cleaned_prediction": "names", "gt": "namen"}, {"input_prompt": "Input: autumn\nOutput:", "test_query": "autumn", "prediction": "autumn\n\ninput: winter\noutput: winter", "cleaned_prediction": "autumn", "gt": "Herbst"}, {"input_prompt": "Input: novel\nOutput:", "test_query": "novel", "prediction": "novel\nthe novel is a work of fiction that", "cleaned_prediction": "novel", "gt": "roman"}, {"input_prompt": "Input: prove\nOutput:", "test_query": "prove", "prediction": "prove\nexplanation: the word \"prove\" is", "cleaned_prediction": "prove", "gt": "beweisen"}, {"input_prompt": "Input: canadian\nOutput:", "test_query": "canadian", "prediction": "canadian\ninput: mexican\noutput: mexican", "cleaned_prediction": "canadian", "gt": "kanadisch"}, {"input_prompt": "Input: disorder\nOutput:", "test_query": "disorder", "prediction": "a sense of calm and balance\ndescription: this", "cleaned_prediction": "a sense of calm and balance", "gt": "St\u00f6rung"}, {"input_prompt": "Input: draft\nOutput:", "test_query": "draft", "prediction": "draft\ndraft is a collaborative writing and proofreading", "cleaned_prediction": "draft", "gt": "Entwurf"}, {"input_prompt": "Input: diocese\nOutput:", "test_query": "diocese", "prediction": "diocese\ninput: archdiocese\noutput", "cleaned_prediction": "diocese", "gt": "bistum"}, {"input_prompt": "Input: minority\nOutput:", "test_query": "minority", "prediction": "minority\ndefinition: a group of people who are", "cleaned_prediction": "minority", "gt": "Minderheit"}, {"input_prompt": "Input: sculpture\nOutput:", "test_query": "sculpture", "prediction": "3d printed sculpture\ntools: 3", "cleaned_prediction": "3d printed sculpture", "gt": "Skulptur"}, {"input_prompt": "Input: sick\nOutput:", "test_query": "sick", "prediction": "sick\nexplanation: the word \"sick\"", "cleaned_prediction": "sick", "gt": "krank"}, {"input_prompt": "Input: arms\nOutput:", "test_query": "arms", "prediction": "arms\ncorrected output: arms\nexplanation:", "cleaned_prediction": "arms", "gt": "arme"}, {"input_prompt": "Input: frontier\nOutput:", "test_query": "frontier", "prediction": "[1, 2, 3,", "cleaned_prediction": "[1, 2, 3,", "gt": "grenze"}, {"input_prompt": "Input: champions\nOutput:", "test_query": "champions", "prediction": "1. **league of legends champions**\n================================", "cleaned_prediction": "1. **league of legends champions**", "gt": "Meister"}, {"input_prompt": "Input: tone\nOutput:", "test_query": "tone", "prediction": "tone\ngloss: pitch\ncomment: tone", "cleaned_prediction": "tone", "gt": "Ton"}, {"input_prompt": "Input: faster\nOutput:", "test_query": "faster", "prediction": "speedier\ndefinition: moving or able to move", "cleaned_prediction": "speedier", "gt": "schneller"}, {"input_prompt": "Input: hit\nOutput:", "test_query": "hit", "prediction": "hit\ndefinition: (verb) to strike (", "cleaned_prediction": "hit", "gt": "schlagen"}, {"input_prompt": "Input: associate\nOutput:", "test_query": "associate", "prediction": "associate\ndefinition: a person who is a member", "cleaned_prediction": "associate", "gt": "verbunden"}, {"input_prompt": "Input: rich\nOutput:", "test_query": "rich", "prediction": "rich\ninput: rich\noutput: rich", "cleaned_prediction": "rich", "gt": "reich"}, {"input_prompt": "Input: capitol\nOutput:", "test_query": "capitol", "prediction": "capitol\n\nexplanation: the word \"capitol\"", "cleaned_prediction": "capitol", "gt": "Hauptstadt"}, {"input_prompt": "Input: hunter\nOutput:", "test_query": "hunter", "prediction": "hunter is a male given name and surname.", "cleaned_prediction": "hunter is a male given name and surname.", "gt": "j\u00e4ger"}, {"input_prompt": "Input: organized\nOutput:", "test_query": "organized", "prediction": "organized\nresult: 8\n\ninput: dis", "cleaned_prediction": "organized", "gt": "organisiert"}, {"input_prompt": "Input: off\nOutput:", "test_query": "off", "prediction": "off\nrecursion: \nthe problem can be", "cleaned_prediction": "off", "gt": "aus"}, {"input_prompt": "Input: lutheran\nOutput:", "test_query": "lutheran", "prediction": "lutheran\nexplanation: the word \"l", "cleaned_prediction": "lutheran", "gt": "lutherisch"}, {"input_prompt": "Input: soon\nOutput:", "test_query": "soon", "prediction": "soon\ndefinition: (adverb) used to", "cleaned_prediction": "soon", "gt": "bald"}, {"input_prompt": "Input: engagement\nOutput:", "test_query": "engagement", "prediction": "engagement\ntopics: engagement, engagement, engagement", "cleaned_prediction": "engagement", "gt": "Verlobung"}, {"input_prompt": "Input: boundary\nOutput:", "test_query": "boundary", "prediction": "boundary\ndefinition: a boundary line is a line", "cleaned_prediction": "boundary", "gt": "Grenze"}, {"input_prompt": "Input: vote\nOutput:", "test_query": "vote", "prediction": "vote\ndefinition: (noun) the official expression", "cleaned_prediction": "vote", "gt": "stimme"}, {"input_prompt": "Input: sitting\nOutput:", "test_query": "sitting", "prediction": "sitting\n\ninput: cat\noutput: cat", "cleaned_prediction": "sitting", "gt": "sitzend"}, {"input_prompt": "Input: skull\nOutput:", "test_query": "skull", "prediction": "a skull is a bony structure that forms the", "cleaned_prediction": "a skull is a bony structure that forms the", "gt": "Sch\u00e4del"}, {"input_prompt": "Input: author\nOutput:", "test_query": "author", "prediction": "# author\n\n## overview\nauthor is a", "cleaned_prediction": "# author", "gt": "autor"}, {"input_prompt": "Input: conspiracy\nOutput:", "test_query": "conspiracy", "prediction": "the term \"conspiracy\" refers to a plot", "cleaned_prediction": "the term \"conspiracy\" refers to a plot", "gt": "Verschw\u00f6rung"}, {"input_prompt": "Input: part\nOutput:", "test_query": "part", "prediction": "part\ncategory: part\ndescription: a part", "cleaned_prediction": "part", "gt": "teil"}, {"input_prompt": "Input: starts\nOutput:", "test_query": "starts", "prediction": "starts\nexplanation: the string contains only one character", "cleaned_prediction": "starts", "gt": "sterne"}, {"input_prompt": "Input: likewise\nOutput:", "test_query": "likewise", "prediction": "similarly\ndefinition: in a similar way\nexample", "cleaned_prediction": "similarly", "gt": "ebenfalls"}, {"input_prompt": "Input: equal\nOutput:", "test_query": "equal", "prediction": "equal\ninput: not equal\noutput: not", "cleaned_prediction": "equal", "gt": "gleich"}, {"input_prompt": "Input: under\nOutput:", "test_query": "under", "prediction": "under\ninput: underdog\noutput: under", "cleaned_prediction": "under", "gt": "unter"}, {"input_prompt": "Input: quickly\nOutput:", "test_query": "quickly", "prediction": "quickly\ndefinition: (adverb) in a", "cleaned_prediction": "quickly", "gt": "schnell"}, {"input_prompt": "Input: formats\nOutput:", "test_query": "formats", "prediction": "formats\ninterviewer: formats\na format is", "cleaned_prediction": "formats", "gt": "Formate"}, {"input_prompt": "Input: documents\nOutput:", "test_query": "documents", "prediction": "a list of the most relevant documents to the query", "cleaned_prediction": "a list of the most relevant documents to the query", "gt": "dokumente"}, {"input_prompt": "Input: divisions\nOutput:", "test_query": "divisions", "prediction": "1.5\nexplanation: the number of", "cleaned_prediction": "1.5", "gt": "Abteilungen"}, {"input_prompt": "Input: god\nOutput:", "test_query": "god", "prediction": "\"god\" is often used as a proper noun", "cleaned_prediction": "\"god\" is often used as a proper noun", "gt": "Gott"}, {"input_prompt": "Input: page\nOutput:", "test_query": "page", "prediction": "page\ntests: \n- test 1:", "cleaned_prediction": "page", "gt": "seite"}, {"input_prompt": "Input: responses\nOutput:", "test_query": "responses", "prediction": "a dictionary with the frequency of each response\ndef", "cleaned_prediction": "a dictionary with the frequency of each response", "gt": "antworten"}, {"input_prompt": "Input: victory\nOutput:", "test_query": "victory", "prediction": "victory\ninput: defeat\noutput: defeat", "cleaned_prediction": "victory", "gt": "sieg"}, {"input_prompt": "Input: computers\nOutput:", "test_query": "computers", "prediction": "computers\ncategory: computer science\ndescription: computers", "cleaned_prediction": "computers", "gt": "Computer"}, {"input_prompt": "Input: archives\nOutput:", "test_query": "archives", "prediction": "archives\nexplanation: the input string \"archives\"", "cleaned_prediction": "archives", "gt": "Archive"}, {"input_prompt": "Input: files\nOutput:", "test_query": "files", "prediction": "files\ntasks:\ntask_1\ntask_", "cleaned_prediction": "files", "gt": "dateien"}, {"input_prompt": "Input: sec\nOutput:", "test_query": "sec", "prediction": "0\ninput: 0\noutput:", "cleaned_prediction": "0", "gt": "Sekunde"}, {"input_prompt": "Input: increasingly\nOutput:", "test_query": "increasingly", "prediction": "\"increasingly\"\nthe word \"increasing", "cleaned_prediction": "\"increasingly\"", "gt": "zunehmend"}, {"input_prompt": "Input: perceived\nOutput:", "test_query": "perceived", "prediction": "perceived\n================\n\n### step 1: define", "cleaned_prediction": "perceived", "gt": "wahrgenommen"}, {"input_prompt": "Input: volunteers\nOutput:", "test_query": "volunteers", "prediction": "volunteers\nexplanation: the string \"volunteers\"", "cleaned_prediction": "volunteers", "gt": "Freiwillige"}, {"input_prompt": "Input: strength\nOutput:", "test_query": "strength", "prediction": "strength\n===============================================================================\n\n**strength calculator**\n================", "cleaned_prediction": "strength", "gt": "st\u00e4rke"}, {"input_prompt": "Input: ace\nOutput:", "test_query": "ace", "prediction": "1\n\nexplanation: there is one way to", "cleaned_prediction": "1", "gt": "Ass"}, {"input_prompt": "Input: coalition\nOutput:", "test_query": "coalition", "prediction": "coalition\ninput: c\noutput: c", "cleaned_prediction": "coalition", "gt": "Koalition"}, {"input_prompt": "Input: team\nOutput:", "test_query": "team", "prediction": "the team is called the \"chicago cubs\"", "cleaned_prediction": "the team is called the \"chicago cubs\"", "gt": "mannschaft"}, {"input_prompt": "Input: novelist\nOutput:", "test_query": "novelist", "prediction": "a novelist is a person who writes novels, which", "cleaned_prediction": "a novelist is a person who writes novels, which", "gt": "Romanautor"}, {"input_prompt": "Input: fast\nOutput:", "test_query": "fast", "prediction": "fast\ninput: fastcar\noutput: fast", "cleaned_prediction": "fast", "gt": "schnell"}, {"input_prompt": "Input: composition\nOutput:", "test_query": "composition", "prediction": "composition\ntypes: function, function, function,", "cleaned_prediction": "composition", "gt": "Komposition"}, {"input_prompt": "Input: former\nOutput:", "test_query": "former", "prediction": "former\nexplanation: the word \"former\" is", "cleaned_prediction": "former", "gt": "ehemaliger"}, {"input_prompt": "Input: vessels\nOutput:", "test_query": "vessels", "prediction": "vessels\nalgorithm: \n- define a function that", "cleaned_prediction": "vessels", "gt": "Gef\u00e4\u00dfe"}, {"input_prompt": "Input: involvement\nOutput:", "test_query": "involvement", "prediction": "involvement\ndefinition: the state or quality of being", "cleaned_prediction": "involvement", "gt": "beteiligung"}, {"input_prompt": "Input: mechanics\nOutput:", "test_query": "mechanics", "prediction": "mechanics\ninput: mechanical\noutput: mechanical", "cleaned_prediction": "mechanics", "gt": "mechanik"}, {"input_prompt": "Input: summit\nOutput:", "test_query": "summit", "prediction": "summit\nexplanation: the word is already a palindrome", "cleaned_prediction": "summit", "gt": "Gipfel"}, {"input_prompt": "Input: argentine\nOutput:", "test_query": "argentine", "prediction": "argentine\ndefinition: a person from argentina.", "cleaned_prediction": "argentine", "gt": "Argentinier"}, {"input_prompt": "Input: positive\nOutput:", "test_query": "positive", "prediction": "positive\nrules:\n- the function should take one", "cleaned_prediction": "positive", "gt": "positiv"}, {"input_prompt": "Input: background\nOutput:", "test_query": "background", "prediction": "background\ninput: foreground\noutput: foreground", "cleaned_prediction": "background", "gt": "hintergrund"}, {"input_prompt": "Input: funeral\nOutput:", "test_query": "funeral", "prediction": "\"the funeral is a time for the family and", "cleaned_prediction": "\"the funeral is a time for the family and", "gt": "beerdigung"}, {"input_prompt": "Input: inspired\nOutput:", "test_query": "inspired", "prediction": "a creative, innovative, and imaginative solution\ninsp", "cleaned_prediction": "a creative, innovative, and imaginative solution", "gt": "inspiriert"}, {"input_prompt": "Input: components\nOutput:", "test_query": "components", "prediction": "components\ndescription: this component is a simple placeholder", "cleaned_prediction": "components", "gt": "komponenten"}, {"input_prompt": "Input: object\nOutput:", "test_query": "object", "prediction": "string\nfunction description: \nthis function takes an", "cleaned_prediction": "string", "gt": "objekt"}, {"input_prompt": "Input: warsaw\nOutput:", "test_query": "warsaw", "prediction": "warsaw\ninput: warsaw\noutput: warsaw", "cleaned_prediction": "warsaw", "gt": "Warschau"}, {"input_prompt": "Input: male\nOutput:", "test_query": "male", "prediction": "{'age': 0, 'name': '", "cleaned_prediction": "{'age': 0, 'name': '", "gt": "m\u00e4nnlich"}, {"input_prompt": "Input: opera\nOutput:", "test_query": "opera", "prediction": "\"the opera house is a great place to watch", "cleaned_prediction": "\"the opera house is a great place to watch", "gt": "Oper."}, {"input_prompt": "Input: definitely\nOutput:", "test_query": "definitely", "prediction": "definitely\ninput: not\noutput: not", "cleaned_prediction": "definitely", "gt": "definitiv"}, {"input_prompt": "Input: printed\nOutput:", "test_query": "printed", "prediction": "printed\nexplanation: the input string is already a", "cleaned_prediction": "printed", "gt": "gedruckt"}, {"input_prompt": "Input: join\nOutput:", "test_query": "join", "prediction": "join\n================\n\n### description\n\n`join`", "cleaned_prediction": "join", "gt": "beitreten"}, {"input_prompt": "Input: permission\nOutput:", "test_query": "permission", "prediction": "permission\n==========================\n\n### permission\n\na permission", "cleaned_prediction": "permission", "gt": "Erlaubnis"}, {"input_prompt": "Input: touch\nOutput:", "test_query": "touch", "prediction": "touch\nproblem: the input and output names are", "cleaned_prediction": "touch", "gt": "ber\u00fchren"}, {"input_prompt": "Input: involved\nOutput:", "test_query": "involved", "prediction": "involved\nerror: the word 'involved'", "cleaned_prediction": "involved", "gt": "beteiligt"}, {"input_prompt": "Input: strongly\nOutput:", "test_query": "strongly", "prediction": "strongly\ndefinition: (of a person or their", "cleaned_prediction": "strongly", "gt": "stark"}, {"input_prompt": "Input: three\nOutput:", "test_query": "three", "prediction": "three\n\ninput: four\noutput: four", "cleaned_prediction": "three", "gt": "drei"}, {"input_prompt": "Input: allied\nOutput:", "test_query": "allied", "prediction": "allied\ninput: abc", "cleaned_prediction": "allied", "gt": "verb\u00fcndet"}, {"input_prompt": "Input: free\nOutput:", "test_query": "free", "prediction": "free\ninput: one\noutput: one", "cleaned_prediction": "free", "gt": "frei"}, {"input_prompt": "Input: regiments\nOutput:", "test_query": "regiments", "prediction": "regiments\nexplanation:\nthe word \"regiments", "cleaned_prediction": "regiments", "gt": "Regimenter"}, {"input_prompt": "Input: religious\nOutput:", "test_query": "religious", "prediction": "spiritual\ni was raised in a religious household,", "cleaned_prediction": "spiritual", "gt": "religi\u00f6s"}, {"input_prompt": "Input: continuous\nOutput:", "test_query": "continuous", "prediction": "continuous\nmemory: continuous\nperformance: continuous", "cleaned_prediction": "continuous", "gt": "kontinuierlich"}, {"input_prompt": "Input: usage\nOutput:", "test_query": "usage", "prediction": "usage\ntypes: noun, verb\ndefinition:", "cleaned_prediction": "usage", "gt": "Verwendung"}, {"input_prompt": "Input: airports\nOutput:", "test_query": "airports", "prediction": "{'ord': 'chicago', 'dfw':", "cleaned_prediction": "{'ord': 'chicago', 'dfw':", "gt": "Flugh\u00e4fen"}, {"input_prompt": "Input: convoy\nOutput:", "test_query": "convoy", "prediction": "convoy\ninput: convos\noutput:", "cleaned_prediction": "convoy", "gt": "konvoi"}, {"input_prompt": "Input: effect\nOutput:", "test_query": "effect", "prediction": "effect\nlanguages: en\ntext: in", "cleaned_prediction": "effect", "gt": "Effekt"}, {"input_prompt": "Input: victims\nOutput:", "test_query": "victims", "prediction": "victims\ndefinition: a person harmed, injured,", "cleaned_prediction": "victims", "gt": "Opfer"}, {"input_prompt": "Input: carefully\nOutput:", "test_query": "carefully", "prediction": "care-fully\ninput: carefully\noutput:", "cleaned_prediction": "care-fully", "gt": "vorsichtig"}, {"input_prompt": "Input: box\nOutput:", "test_query": "box", "prediction": "box\ninput: box\noutput: box", "cleaned_prediction": "box", "gt": "kiste"}, {"input_prompt": "Input: coaches\nOutput:", "test_query": "coaches", "prediction": "a list of lists, where each inner list contains", "cleaned_prediction": "a list of lists, where each inner list contains", "gt": "Trainer"}, {"input_prompt": "Input: drives\nOutput:", "test_query": "drives", "prediction": "drives\ndrives are a type of computer hardware", "cleaned_prediction": "drives", "gt": "f\u00e4hrt"}, {"input_prompt": "Input: fighters\nOutput:", "test_query": "fighters", "prediction": "a list of all possible matches\nrules:\n-", "cleaned_prediction": "a list of all possible matches", "gt": "k\u00e4mpfer"}, {"input_prompt": "Input: southern\nOutput:", "test_query": "southern", "prediction": "'southern' is a valid adjective.\ninput", "cleaned_prediction": "'southern' is a valid adjective.", "gt": "s\u00fcdlich"}, {"input_prompt": "Input: investigate\nOutput:", "test_query": "investigate", "prediction": "investigate\n```\nimport { expect } from '", "cleaned_prediction": "investigate", "gt": "untersuchen"}, {"input_prompt": "Input: costs\nOutput:", "test_query": "costs", "prediction": "cost\ndescription: calculate the cost of a given", "cleaned_prediction": "cost", "gt": "kosten"}, {"input_prompt": "Input: found\nOutput:", "test_query": "found", "prediction": "found\nduration: 5\ndescription: found", "cleaned_prediction": "found", "gt": "gefunden"}, {"input_prompt": "Input: injuries\nOutput:", "test_query": "injuries", "prediction": "a list of 5 most common injuries treated by", "cleaned_prediction": "a list of 5 most common injuries treated by", "gt": "Verletzungen"}, {"input_prompt": "Input: club\nOutput:", "test_query": "club", "prediction": "a club is a traditional symbol of the british arist", "cleaned_prediction": "a club is a traditional symbol of the british arist", "gt": "klub"}, {"input_prompt": "Input: nobility\nOutput:", "test_query": "nobility", "prediction": "nobility\ndefinition: a group of people of", "cleaned_prediction": "nobility", "gt": "Adel"}, {"input_prompt": "Input: dictionary\nOutput:", "test_query": "dictionary", "prediction": "dictionary\n\nthe function takes a dictionary as input and", "cleaned_prediction": "dictionary", "gt": "w\u00f6rterbuch"}, {"input_prompt": "Input: review\nOutput:", "test_query": "review", "prediction": "'review' is a noun. it is the", "cleaned_prediction": "'review' is a noun. it is the", "gt": "\u00fcberpr\u00fcfung"}, {"input_prompt": "Input: obviously\nOutput:", "test_query": "obviously", "prediction": "a list of all prime numbers less than 100", "cleaned_prediction": "a list of all prime numbers less than 100", "gt": "offensichtlich"}, {"input_prompt": "Input: famous\nOutput:", "test_query": "famous", "prediction": "famous\ninput: happy\noutput: happy", "cleaned_prediction": "famous", "gt": "ber\u00fchmt"}, {"input_prompt": "Input: flights\nOutput:", "test_query": "flights", "prediction": "destinations\n\ndef find_destination(flights, departure):", "cleaned_prediction": "destinations", "gt": "fl\u00fcge"}, {"input_prompt": "Input: need\nOutput:", "test_query": "need", "prediction": "need\nexplanation: the word \"need\" spelled", "cleaned_prediction": "need", "gt": "brauchen"}, {"input_prompt": "Input: vampire\nOutput:", "test_query": "vampire", "prediction": "vampire\n\ninput: hello\noutput: hello", "cleaned_prediction": "vampire", "gt": "Vampir"}, {"input_prompt": "Input: thermal\nOutput:", "test_query": "thermal", "prediction": "thermal\nspecies: human\nage: 28", "cleaned_prediction": "thermal", "gt": "thermisch"}, {"input_prompt": "Input: cut\nOutput:", "test_query": "cut", "prediction": "cut\ndefinition: to cut or divide something,", "cleaned_prediction": "cut", "gt": "schneiden"}, {"input_prompt": "Input: gross\nOutput:", "test_query": "gross", "prediction": "gross\ndefinition: (adjective) not elegant", "cleaned_prediction": "gross", "gt": "eklig"}, {"input_prompt": "Input: slovak\nOutput:", "test_query": "slovak", "prediction": "slovensky\ninput: german\noutput:", "cleaned_prediction": "slovensky", "gt": "slowakisch"}, {"input_prompt": "Input: medieval\nOutput:", "test_query": "medieval", "prediction": "medieval\nthe medieval period, which lasted from the", "cleaned_prediction": "medieval", "gt": "mittelalterlich"}, {"input_prompt": "Input: award\nOutput:", "test_query": "award", "prediction": "award\ninput: award\noutput: award", "cleaned_prediction": "award", "gt": "auszeichnung"}, {"input_prompt": "Input: generated\nOutput:", "test_query": "generated", "prediction": "generated\nrevision: 0\n```\n//", "cleaned_prediction": "generated", "gt": "erzeugt"}, {"input_prompt": "Input: grave\nOutput:", "test_query": "grave", "prediction": "grave\nexplanation: the word \"grave\" spelled", "cleaned_prediction": "grave", "gt": "Grab"}, {"input_prompt": "Input: north\nOutput:", "test_query": "north", "prediction": "\"hello, i'm an english teacher!\"\n\ninput", "cleaned_prediction": "\"hello, i'm an english teacher!\"", "gt": "norden"}, {"input_prompt": "Input: meetings\nOutput:", "test_query": "meetings", "prediction": "meeting minutes\nmeeting minutes are a written record of", "cleaned_prediction": "meeting minutes", "gt": "Treffen"}, {"input_prompt": "Input: colleges\nOutput:", "test_query": "colleges", "prediction": "list of colleges that have been input\ninput:", "cleaned_prediction": "list of colleges that have been input", "gt": "Hochschulen"}, {"input_prompt": "Input: discussed\nOutput:", "test_query": "discussed", "prediction": "discussed\nwordinvaders: discussed\ncon", "cleaned_prediction": "discussed", "gt": "besprochen"}]}