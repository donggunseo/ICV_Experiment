{
    "score": {
        "exact_match": 0.5756929637526652
    },
    "intervention_layer": 15,
    "result": [
        {
            "input_prompt": "Input: printing\nOutput:",
            "test_query": "printing",
            "prediction": "impression\ndefinition: a mark or image left on something",
            "cleaned_prediction": "impression",
            "gt": "impression"
        },
        {
            "input_prompt": "Input: iceland\nOutput:",
            "test_query": "iceland",
            "prediction": "islande\ntranslation: iceland\ninput: iceland",
            "cleaned_prediction": "islande",
            "gt": "Islande"
        },
        {
            "input_prompt": "Input: fault\nOutput:",
            "test_query": "fault",
            "prediction": "d\u00e9faut\nsynonyms: error, mistake, fault",
            "cleaned_prediction": "d\u00e9faut",
            "gt": "faute"
        },
        {
            "input_prompt": "Input: arrest\nOutput:",
            "test_query": "arrest",
            "prediction": "arrest\ninput: arrest\noutput: arrest\ninput",
            "cleaned_prediction": "arrest",
            "gt": "arr\u00eater"
        },
        {
            "input_prompt": "Input: reducing\nOutput:",
            "test_query": "reducing",
            "prediction": "r\u00e9duire\ntranslation: reduce\nsynonyms:",
            "cleaned_prediction": "r\u00e9duire",
            "gt": "r\u00e9duisant"
        },
        {
            "input_prompt": "Input: chart\nOutput:",
            "test_query": "chart",
            "prediction": "tableau\ninput: chart\noutput: tableau\ninput",
            "cleaned_prediction": "tableau",
            "gt": "graphique"
        },
        {
            "input_prompt": "Input: compromise\nOutput:",
            "test_query": "compromise",
            "prediction": "compromis\noutput: compromis\ninput: compromise",
            "cleaned_prediction": "compromis",
            "gt": "compromis"
        },
        {
            "input_prompt": "Input: compared\nOutput:",
            "test_query": "compared",
            "prediction": "compar\u00e9\ninput: comparisons\noutput: comparais",
            "cleaned_prediction": "compar\u00e9",
            "gt": "compar\u00e9"
        },
        {
            "input_prompt": "Input: thousands\nOutput:",
            "test_query": "thousands",
            "prediction": "milliers\ninput: millions\noutput: millions",
            "cleaned_prediction": "milliers",
            "gt": "milliers"
        },
        {
            "input_prompt": "Input: prevent\nOutput:",
            "test_query": "prevent",
            "prediction": "pr\u00e9venir\ntranslation: prevent\nsynonyms for prevent",
            "cleaned_prediction": "pr\u00e9venir",
            "gt": "pr\u00e9venir"
        },
        {
            "input_prompt": "Input: foundation\nOutput:",
            "test_query": "foundation",
            "prediction": "fondation\ninput: foundation\noutput: fondation",
            "cleaned_prediction": "fondation",
            "gt": "fondation"
        },
        {
            "input_prompt": "Input: tribes\nOutput:",
            "test_query": "tribes",
            "prediction": "tribunes\ninput: tribun\noutput: trib",
            "cleaned_prediction": "tribunes",
            "gt": "tribus"
        },
        {
            "input_prompt": "Input: vocals\nOutput:",
            "test_query": "vocals",
            "prediction": "voix\ntranslation: voice\ndefinition: the sound",
            "cleaned_prediction": "voix",
            "gt": "voix"
        },
        {
            "input_prompt": "Input: intermediate\nOutput:",
            "test_query": "intermediate",
            "prediction": "interm\u00e9diaire\nrevision: 1",
            "cleaned_prediction": "interm\u00e9diaire",
            "gt": "interm\u00e9diaire"
        },
        {
            "input_prompt": "Input: gallery\nOutput:",
            "test_query": "gallery",
            "prediction": "galerie\ninput: galleries\noutput: galerie",
            "cleaned_prediction": "galerie",
            "gt": "galerie"
        },
        {
            "input_prompt": "Input: especially\nOutput:",
            "test_query": "especially",
            "prediction": "surtout\nespecially - especially (adverb) to a",
            "cleaned_prediction": "surtout",
            "gt": "particuli\u00e8rement"
        },
        {
            "input_prompt": "Input: arguing\nOutput:",
            "test_query": "arguing",
            "prediction": "argument\nthe word \"arguing\" is a ger",
            "cleaned_prediction": "argument",
            "gt": "se disputer"
        },
        {
            "input_prompt": "Input: conservative\nOutput:",
            "test_query": "conservative",
            "prediction": "conservatoire\nlanguage model bias: the language model may",
            "cleaned_prediction": "conservatoire",
            "gt": "conservateur"
        },
        {
            "input_prompt": "Input: processes\nOutput:",
            "test_query": "processes",
            "prediction": "processus\ntranslation: process\ndefinition: a series",
            "cleaned_prediction": "processus",
            "gt": "processus"
        },
        {
            "input_prompt": "Input: platform\nOutput:",
            "test_query": "platform",
            "prediction": "plateforme\ntranslation: platform\nsynonyms: stage",
            "cleaned_prediction": "plateforme",
            "gt": "plateforme"
        },
        {
            "input_prompt": "Input: scope\nOutput:",
            "test_query": "scope",
            "prediction": "champ\noutput: champ\noutput: champ\noutput",
            "cleaned_prediction": "champ",
            "gt": "port\u00e9e"
        },
        {
            "input_prompt": "Input: contributors\nOutput:",
            "test_query": "contributors",
            "prediction": "contributeurs\nlanguage: en\nbefore id:",
            "cleaned_prediction": "contributeurs",
            "gt": "contributeurs"
        },
        {
            "input_prompt": "Input: colleges\nOutput:",
            "test_query": "colleges",
            "prediction": "coll\u00e8ge\ntranslation: college\nsynonyms: school",
            "cleaned_prediction": "coll\u00e8ge",
            "gt": "universit\u00e9s"
        },
        {
            "input_prompt": "Input: audiences\nOutput:",
            "test_query": "audiences",
            "prediction": "public\naudience: public\ndescription: the audience",
            "cleaned_prediction": "public",
            "gt": "publics"
        },
        {
            "input_prompt": "Input: waiting\nOutput:",
            "test_query": "waiting",
            "prediction": "attendant\ninput: waiting\noutput: attendant\ninput",
            "cleaned_prediction": "attendant",
            "gt": "attente"
        },
        {
            "input_prompt": "Input: bike\nOutput:",
            "test_query": "bike",
            "prediction": "v\u00e9lo\n\ninput: bike\noutput: bicic",
            "cleaned_prediction": "v\u00e9lo",
            "gt": "v\u00e9lo"
        },
        {
            "input_prompt": "Input: serbia\nOutput:",
            "test_query": "serbia",
            "prediction": "serbie\ninput: serbia\noutput: s\u00e9",
            "cleaned_prediction": "serbie",
            "gt": "Serbie"
        },
        {
            "input_prompt": "Input: unfortunately\nOutput:",
            "test_query": "unfortunately",
            "prediction": "malheureusement\ntranslation: unfortunately\ninput: unfortunately",
            "cleaned_prediction": "malheureusement",
            "gt": "malheureusement"
        },
        {
            "input_prompt": "Input: separation\nOutput:",
            "test_query": "separation",
            "prediction": "s\u00e9paration\nlanguage model trained on a dataset that includes",
            "cleaned_prediction": "s\u00e9paration",
            "gt": "s\u00e9paration"
        },
        {
            "input_prompt": "Input: rain\nOutput:",
            "test_query": "rain",
            "prediction": "pluie\nfrench translation for \"rain\"\nplu",
            "cleaned_prediction": "pluie",
            "gt": "pluie"
        },
        {
            "input_prompt": "Input: gradually\nOutput:",
            "test_query": "gradually",
            "prediction": "progressivement\nsuggestions: progressivement, graduellement,",
            "cleaned_prediction": "progressivement",
            "gt": "progressivement"
        },
        {
            "input_prompt": "Input: leo\nOutput:",
            "test_query": "leo",
            "prediction": "l\u00e9o\n\ninput: hello\noutput: h\u00e9l\u00e9",
            "cleaned_prediction": "l\u00e9o",
            "gt": "lion"
        },
        {
            "input_prompt": "Input: birthday\nOutput:",
            "test_query": "birthday",
            "prediction": "anniversaire\n\ntranslation:\n- \"birthday\" is",
            "cleaned_prediction": "anniversaire",
            "gt": "anniversaire"
        },
        {
            "input_prompt": "Input: listed\nOutput:",
            "test_query": "listed",
            "prediction": "list\ntype: function\nraises: none\ndescription",
            "cleaned_prediction": "list",
            "gt": "\u00e9num\u00e9r\u00e9"
        },
        {
            "input_prompt": "Input: separately\nOutput:",
            "test_query": "separately",
            "prediction": "s\u00e9par\u00e9ment\nexamples: - the two languages are",
            "cleaned_prediction": "s\u00e9par\u00e9ment",
            "gt": "s\u00e9par\u00e9ment"
        },
        {
            "input_prompt": "Input: land\nOutput:",
            "test_query": "land",
            "prediction": "terrain\ninput: land\noutput: terrain\ninput",
            "cleaned_prediction": "terrain",
            "gt": "terre"
        },
        {
            "input_prompt": "Input: particularly\nOutput:",
            "test_query": "particularly",
            "prediction": "particularely\nerror type: spelling error",
            "cleaned_prediction": "particularely",
            "gt": "particuli\u00e8rement"
        },
        {
            "input_prompt": "Input: moses\nOutput:",
            "test_query": "moses",
            "prediction": "mo\u00efse\ninput: moses\noutput: mo",
            "cleaned_prediction": "mo\u00efse",
            "gt": "Mo\u00efse"
        },
        {
            "input_prompt": "Input: explorer\nOutput:",
            "test_query": "explorer",
            "prediction": "explorateur\ntranslation: traveler\nsynonyms: traveler",
            "cleaned_prediction": "explorateur",
            "gt": "explorateur"
        },
        {
            "input_prompt": "Input: animals\nOutput:",
            "test_query": "animals",
            "prediction": "animaux\ntranslation: animal\ndefinition: a living",
            "cleaned_prediction": "animaux",
            "gt": "animaux"
        },
        {
            "input_prompt": "Input: legend\nOutput:",
            "test_query": "legend",
            "prediction": "l\u00e9gende\nlanguage: french\nexplanation: the word",
            "cleaned_prediction": "l\u00e9gende",
            "gt": "l\u00e9gende"
        },
        {
            "input_prompt": "Input: arms\nOutput:",
            "test_query": "arms",
            "prediction": "bras\ninput: dogs\noutput: goads",
            "cleaned_prediction": "bras",
            "gt": "bras"
        },
        {
            "input_prompt": "Input: notably\nOutput:",
            "test_query": "notably",
            "prediction": "notabilit\u00e9\ninput: notably\noutput: notabilit\u00e9",
            "cleaned_prediction": "notabilit\u00e9",
            "gt": "notamment"
        },
        {
            "input_prompt": "Input: throne\nOutput:",
            "test_query": "throne",
            "prediction": "tr\u00f4ne\ninput: throne\noutput: tr",
            "cleaned_prediction": "tr\u00f4ne",
            "gt": "tr\u00f4ne"
        },
        {
            "input_prompt": "Input: competitive\nOutput:",
            "test_query": "competitive",
            "prediction": "concurrent\ndefinition: (of a process) taking place",
            "cleaned_prediction": "concurrent",
            "gt": "comp\u00e9titif"
        },
        {
            "input_prompt": "Input: quickly\nOutput:",
            "test_query": "quickly",
            "prediction": "rapidement\ntranslation: quickly\ndefinition: with speed;",
            "cleaned_prediction": "rapidement",
            "gt": "rapidement"
        },
        {
            "input_prompt": "Input: frank\nOutput:",
            "test_query": "frank",
            "prediction": "franc\ninput: franks\noutput: francs",
            "cleaned_prediction": "franc",
            "gt": "franc"
        },
        {
            "input_prompt": "Input: burial\nOutput:",
            "test_query": "burial",
            "prediction": "enterrement\ntranslation: english\ndefinition: the act",
            "cleaned_prediction": "enterrement",
            "gt": "enterrement"
        },
        {
            "input_prompt": "Input: significantly\nOutput:",
            "test_query": "significantly",
            "prediction": "significatively\ninput: significantly\noutput: significatively",
            "cleaned_prediction": "significatively",
            "gt": "significativement"
        },
        {
            "input_prompt": "Input: bound\nOutput:",
            "test_query": "bound",
            "prediction": "limit\nreturns the maximum value of an array.\nreturns",
            "cleaned_prediction": "limit",
            "gt": "li\u00e9"
        },
        {
            "input_prompt": "Input: leaving\nOutput:",
            "test_query": "leaving",
            "prediction": "d\u00e9part\ntranslation: departure\ndefinition: the act of",
            "cleaned_prediction": "d\u00e9part",
            "gt": "partir"
        },
        {
            "input_prompt": "Input: installed\nOutput:",
            "test_query": "installed",
            "prediction": "install\u00e9\ntranslation: installed\ndefinition: put into",
            "cleaned_prediction": "install\u00e9",
            "gt": "install\u00e9"
        },
        {
            "input_prompt": "Input: changed\nOutput:",
            "test_query": "changed",
            "prediction": "modifed\nrevision id: 000000000",
            "cleaned_prediction": "modifed",
            "gt": "chang\u00e9"
        },
        {
            "input_prompt": "Input: build\nOutput:",
            "test_query": "build",
            "prediction": "construire\ntranslation: to build\ndefinition: to",
            "cleaned_prediction": "construire",
            "gt": "construire"
        },
        {
            "input_prompt": "Input: geographic\nOutput:",
            "test_query": "geographic",
            "prediction": "g\u00e9ographique\ntranslation: geographical\ndefinition: relating",
            "cleaned_prediction": "g\u00e9ographique",
            "gt": "g\u00e9ographique"
        },
        {
            "input_prompt": "Input: queens\nOutput:",
            "test_query": "queens",
            "prediction": "reine\ntranslation: queen\n\nnote: the translation",
            "cleaned_prediction": "reine",
            "gt": "reines"
        },
        {
            "input_prompt": "Input: core\nOutput:",
            "test_query": "core",
            "prediction": "no core\ninput: core\noutput: no core",
            "cleaned_prediction": "no core",
            "gt": "noyau"
        },
        {
            "input_prompt": "Input: voices\nOutput:",
            "test_query": "voices",
            "prediction": "voix\ntype: noun\ndefinition: a sound",
            "cleaned_prediction": "voix",
            "gt": "voix"
        },
        {
            "input_prompt": "Input: gas\nOutput:",
            "test_query": "gas",
            "prediction": "essence\nthe word \"gas\" is the input,",
            "cleaned_prediction": "essence",
            "gt": "gaz"
        },
        {
            "input_prompt": "Input: opposed\nOutput:",
            "test_query": "opposed",
            "prediction": "oppos\u00e9\nopposed \u2014 disposed to resist or",
            "cleaned_prediction": "oppos\u00e9",
            "gt": "oppos\u00e9"
        },
        {
            "input_prompt": "Input: award\nOutput:",
            "test_query": "award",
            "prediction": "r\u00e9compense\ninput: award\noutput: prix",
            "cleaned_prediction": "r\u00e9compense",
            "gt": "prix"
        },
        {
            "input_prompt": "Input: freestyle\nOutput:",
            "test_query": "freestyle",
            "prediction": "libre\nthe word freestyle is a term used in",
            "cleaned_prediction": "libre",
            "gt": "style libre"
        },
        {
            "input_prompt": "Input: baltic\nOutput:",
            "test_query": "baltic",
            "prediction": "baltic\nexplanation: this word is already a",
            "cleaned_prediction": "baltic",
            "gt": "baltique"
        },
        {
            "input_prompt": "Input: vary\nOutput:",
            "test_query": "vary",
            "prediction": "variable\nexplanation: the word \"vary\" is a",
            "cleaned_prediction": "variable",
            "gt": "varier"
        },
        {
            "input_prompt": "Input: road\nOutput:",
            "test_query": "road",
            "prediction": "route\n\ninput: train\noutput: track\n\ninput",
            "cleaned_prediction": "route",
            "gt": "route"
        },
        {
            "input_prompt": "Input: something\nOutput:",
            "test_query": "something",
            "prediction": "chose\nchose is the past tense of the verb",
            "cleaned_prediction": "chose",
            "gt": "quelque chose"
        },
        {
            "input_prompt": "Input: described\nOutput:",
            "test_query": "described",
            "prediction": "d\u00e9crit\ninput: described\noutput: d\u00e9crit",
            "cleaned_prediction": "d\u00e9crit",
            "gt": "d\u00e9crit"
        },
        {
            "input_prompt": "Input: under\nOutput:",
            "test_query": "under",
            "prediction": "sous\ninput: over\noutput: suse",
            "cleaned_prediction": "sous",
            "gt": "sous"
        },
        {
            "input_prompt": "Input: assets\nOutput:",
            "test_query": "assets",
            "prediction": "acteurs\n---\n# acteurs du projet\n\n##",
            "cleaned_prediction": "acteurs",
            "gt": "actifs"
        },
        {
            "input_prompt": "Input: struck\nOutput:",
            "test_query": "struck",
            "prediction": "frapp\u00e9\ninput: struck\noutput: fr",
            "cleaned_prediction": "frapp\u00e9",
            "gt": "frapp\u00e9"
        },
        {
            "input_prompt": "Input: current\nOutput:",
            "test_query": "current",
            "prediction": "courant\nlanguage: french\ngrammar: masculine",
            "cleaned_prediction": "courant",
            "gt": "actuel"
        },
        {
            "input_prompt": "Input: cars\nOutput:",
            "test_query": "cars",
            "prediction": "voitures\ntransliteration: voh-trees",
            "cleaned_prediction": "voitures",
            "gt": "voitures"
        },
        {
            "input_prompt": "Input: graduated\nOutput:",
            "test_query": "graduated",
            "prediction": "dipl\u00f4m\u00e9\ntranslation: graduated\nsynonyms:",
            "cleaned_prediction": "dipl\u00f4m\u00e9",
            "gt": "dipl\u00f4m\u00e9"
        },
        {
            "input_prompt": "Input: petersburg\nOutput:",
            "test_query": "petersburg",
            "prediction": "petersburg\nexplanation: the word \"peters",
            "cleaned_prediction": "petersburg",
            "gt": "P\u00e9tersbourg"
        },
        {
            "input_prompt": "Input: tue\nOutput:",
            "test_query": "tue",
            "prediction": "mardi\n\ntranslation: tuesday -> mardi (french",
            "cleaned_prediction": "mardi",
            "gt": "mardi"
        },
        {
            "input_prompt": "Input: served\nOutput:",
            "test_query": "served",
            "prediction": "servi\ninput: batted\noutput: batt",
            "cleaned_prediction": "servi",
            "gt": "servi"
        },
        {
            "input_prompt": "Input: adding\nOutput:",
            "test_query": "adding",
            "prediction": "ajoutant\ntranslation: adding\nsynonyms: adding",
            "cleaned_prediction": "ajoutant",
            "gt": "ajoutant"
        },
        {
            "input_prompt": "Input: weeks\nOutput:",
            "test_query": "weeks",
            "prediction": "semaines\ntranslation: weeks\ndefinition: a week",
            "cleaned_prediction": "semaines",
            "gt": "semaines"
        },
        {
            "input_prompt": "Input: stay\nOutput:",
            "test_query": "stay",
            "prediction": "rest\nthe word \"stay\" is a verb that",
            "cleaned_prediction": "rest",
            "gt": "rester"
        },
        {
            "input_prompt": "Input: can\nOutput:",
            "test_query": "can",
            "prediction": "can\ninput: code\noutput: code\ninput",
            "cleaned_prediction": "can",
            "gt": "peut"
        },
        {
            "input_prompt": "Input: wanted\nOutput:",
            "test_query": "wanted",
            "prediction": "demand\u00e9\ntranslation: asked for\ndefinition: to",
            "cleaned_prediction": "demand\u00e9",
            "gt": "voulu"
        },
        {
            "input_prompt": "Input: how\nOutput:",
            "test_query": "how",
            "prediction": "comment\nthe input is \"how\" and the output",
            "cleaned_prediction": "comment",
            "gt": "comment"
        },
        {
            "input_prompt": "Input: reliable\nOutput:",
            "test_query": "reliable",
            "prediction": "fiable\na. no action\nb. correct",
            "cleaned_prediction": "fiable",
            "gt": "fiable"
        },
        {
            "input_prompt": "Input: archaeological\nOutput:",
            "test_query": "archaeological",
            "prediction": "arch\u00e9ologique\nlanguage model: french\ninput",
            "cleaned_prediction": "arch\u00e9ologique",
            "gt": "arch\u00e9ologique"
        },
        {
            "input_prompt": "Input: leaders\nOutput:",
            "test_query": "leaders",
            "prediction": "dirigeants\ntranslation: leaders\nsynonyms:",
            "cleaned_prediction": "dirigeants",
            "gt": "dirigeants"
        },
        {
            "input_prompt": "Input: when\nOutput:",
            "test_query": "when",
            "prediction": "quand\nexplanation: the word \"when\" spelled backwards",
            "cleaned_prediction": "quand",
            "gt": "quand"
        },
        {
            "input_prompt": "Input: wings\nOutput:",
            "test_query": "wings",
            "prediction": "ailes\ninput: pines\noutput: pins",
            "cleaned_prediction": "ailes",
            "gt": "ailes"
        },
        {
            "input_prompt": "Input: receiving\nOutput:",
            "test_query": "receiving",
            "prediction": "r\u00e9ception\ntranslation: reception\ncomment: this is",
            "cleaned_prediction": "r\u00e9ception",
            "gt": "r\u00e9ception"
        },
        {
            "input_prompt": "Input: clothes\nOutput:",
            "test_query": "clothes",
            "prediction": "v\u00eatements\n\ntranslation: \nthe input \"",
            "cleaned_prediction": "v\u00eatements",
            "gt": "v\u00eatements"
        },
        {
            "input_prompt": "Input: clinical\nOutput:",
            "test_query": "clinical",
            "prediction": "clinique\ntranslation: clinic\nlanguage: french",
            "cleaned_prediction": "clinique",
            "gt": "clinique"
        },
        {
            "input_prompt": "Input: prussia\nOutput:",
            "test_query": "prussia",
            "prediction": "prussia\ncorrected: prussia\ncorrected",
            "cleaned_prediction": "prussia",
            "gt": "Prusse"
        },
        {
            "input_prompt": "Input: judicial\nOutput:",
            "test_query": "judicial",
            "prediction": "judiciale\noutput: judicialement\noutput",
            "cleaned_prediction": "judiciale",
            "gt": "judiciaire"
        },
        {
            "input_prompt": "Input: ground\nOutput:",
            "test_query": "ground",
            "prediction": "terrain\ninput: terrain\noutput: terrain\ninput",
            "cleaned_prediction": "terrain",
            "gt": "sol"
        },
        {
            "input_prompt": "Input: grounds\nOutput:",
            "test_query": "grounds",
            "prediction": "terrain\ninput: grounds\noutput: terrain\ninput",
            "cleaned_prediction": "terrain",
            "gt": "terrains"
        },
        {
            "input_prompt": "Input: useless\nOutput:",
            "test_query": "useless",
            "prediction": "inutile\ntranslation: useless\nsynonyms:",
            "cleaned_prediction": "inutile",
            "gt": "inutile"
        },
        {
            "input_prompt": "Input: touchdown\nOutput:",
            "test_query": "touchdown",
            "prediction": "touch down\nchange 1 letter\ninput: touchdown",
            "cleaned_prediction": "touch down",
            "gt": "touch\u00e9"
        },
        {
            "input_prompt": "Input: azerbaijan\nOutput:",
            "test_query": "azerbaijan",
            "prediction": "azerba\u00efdjan\nexplanation:\nthe word",
            "cleaned_prediction": "azerba\u00efdjan",
            "gt": "Azerba\u00efd"
        },
        {
            "input_prompt": "Input: decide\nOutput:",
            "test_query": "decide",
            "prediction": "d\u00e9cider\ndomain: decision-making\nsemantics:",
            "cleaned_prediction": "d\u00e9cider",
            "gt": "d\u00e9cider"
        },
        {
            "input_prompt": "Input: breast\nOutput:",
            "test_query": "breast",
            "prediction": "sein\ninput: horse\noutput: pferd",
            "cleaned_prediction": "sein",
            "gt": "sein"
        },
        {
            "input_prompt": "Input: week\nOutput:",
            "test_query": "week",
            "prediction": "semaine\ntranslation: week\nsynonyms (french):",
            "cleaned_prediction": "semaine",
            "gt": "semaine"
        },
        {
            "input_prompt": "Input: hidden\nOutput:",
            "test_query": "hidden",
            "prediction": "cach\u00e9\ntranslation: hidden\nexample sentences:\n-",
            "cleaned_prediction": "cach\u00e9",
            "gt": "cach\u00e9"
        },
        {
            "input_prompt": "Input: ruled\nOutput:",
            "test_query": "ruled",
            "prediction": "r\u00e9gul\u00e9\ntranslation: regulated\nsynonyms:",
            "cleaned_prediction": "r\u00e9gul\u00e9",
            "gt": "r\u00e9gi"
        },
        {
            "input_prompt": "Input: possibly\nOutput:",
            "test_query": "possibly",
            "prediction": "peut-\u00eatre\ninput: possibly\noutput: peut-\u00eatre",
            "cleaned_prediction": "peut-\u00eatre",
            "gt": "peut-\u00eatre"
        },
        {
            "input_prompt": "Input: sin\nOutput:",
            "test_query": "sin",
            "prediction": "sinus\ninput: add\noutput: aditus",
            "cleaned_prediction": "sinus",
            "gt": "p\u00e9ch\u00e9"
        },
        {
            "input_prompt": "Input: artistic\nOutput:",
            "test_query": "artistic",
            "prediction": "artistique\nthis is a very interesting word, because",
            "cleaned_prediction": "artistique",
            "gt": "artistique"
        },
        {
            "input_prompt": "Input: truck\nOutput:",
            "test_query": "truck",
            "prediction": "camion\n\ntranslation: the truck is parked in the",
            "cleaned_prediction": "camion",
            "gt": "camion"
        },
        {
            "input_prompt": "Input: collapsed\nOutput:",
            "test_query": "collapsed",
            "prediction": "pli\u00e9\ninput: pli\u00e9\noutput",
            "cleaned_prediction": "pli\u00e9",
            "gt": "effondr\u00e9"
        },
        {
            "input_prompt": "Input: pretty\nOutput:",
            "test_query": "pretty",
            "prediction": "joli\ntranslation: beautiful\nin french, the",
            "cleaned_prediction": "joli",
            "gt": "joli"
        },
        {
            "input_prompt": "Input: tour\nOutput:",
            "test_query": "tour",
            "prediction": "tour\nexplanation: the input string \"tour\" is",
            "cleaned_prediction": "tour",
            "gt": "visite"
        },
        {
            "input_prompt": "Input: tel\nOutput:",
            "test_query": "tel",
            "prediction": "t\u00e9l\u00e9phone\ninput: phone\noutput: t\u00e9l\u00e9phone\ninput",
            "cleaned_prediction": "t\u00e9l\u00e9phone",
            "gt": "t\u00e9l\u00e9phone"
        },
        {
            "input_prompt": "Input: pattern\nOutput:",
            "test_query": "pattern",
            "prediction": "mod\u00e8le\n\n# translation of \"pattern\" to french",
            "cleaned_prediction": "mod\u00e8le",
            "gt": "motif"
        },
        {
            "input_prompt": "Input: rank\nOutput:",
            "test_query": "rank",
            "prediction": "grade\ngrade calculator\nthe grade calculator is a simple",
            "cleaned_prediction": "grade",
            "gt": "rang"
        },
        {
            "input_prompt": "Input: torpedo\nOutput:",
            "test_query": "torpedo",
            "prediction": "torpedoes\npluralize a word\nthe",
            "cleaned_prediction": "torpedoes",
            "gt": "torpille"
        },
        {
            "input_prompt": "Input: undo\nOutput:",
            "test_query": "undo",
            "prediction": "annul\ninput: undoing\noutput: ann",
            "cleaned_prediction": "annul",
            "gt": "annuler"
        },
        {
            "input_prompt": "Input: limestone\nOutput:",
            "test_query": "limestone",
            "prediction": "calcaire\ntranslation: limestone\nsynonyms:",
            "cleaned_prediction": "calcaire",
            "gt": "calcaire"
        },
        {
            "input_prompt": "Input: opportunities\nOutput:",
            "test_query": "opportunities",
            "prediction": "opportunit\u00e9s\nlanguage model: french\nerror type",
            "cleaned_prediction": "opportunit\u00e9s",
            "gt": "opportunit\u00e9s"
        },
        {
            "input_prompt": "Input: grass\nOutput:",
            "test_query": "grass",
            "prediction": "g r a s s\n\nexplanation: the word \"",
            "cleaned_prediction": "g r a s s",
            "gt": "herbe"
        },
        {
            "input_prompt": "Input: declined\nOutput:",
            "test_query": "declined",
            "prediction": "d\u00e9clin\u00e9\ndomaine: verb\ncategory:",
            "cleaned_prediction": "d\u00e9clin\u00e9",
            "gt": "refus\u00e9"
        },
        {
            "input_prompt": "Input: statements\nOutput:",
            "test_query": "statements",
            "prediction": "d\u00e9clarations\ntranslation: statements\ndefinition: (noun",
            "cleaned_prediction": "d\u00e9clarations",
            "gt": "d\u00e9clarations"
        },
        {
            "input_prompt": "Input: badge\nOutput:",
            "test_query": "badge",
            "prediction": "badge\n-------------------\n# badge\na badge is a",
            "cleaned_prediction": "badge",
            "gt": "insigne"
        },
        {
            "input_prompt": "Input: aftermath\nOutput:",
            "test_query": "aftermath",
            "prediction": "suite\naftermath - suite\n1. the aftermath",
            "cleaned_prediction": "suite",
            "gt": "cons\u00e9quences"
        },
        {
            "input_prompt": "Input: offices\nOutput:",
            "test_query": "offices",
            "prediction": "bureaux\ntranslation: offices\ndefinition: a room",
            "cleaned_prediction": "bureaux",
            "gt": "bureaux"
        },
        {
            "input_prompt": "Input: cold\nOutput:",
            "test_query": "cold",
            "prediction": "froid\ntranslation: cold\ndefinition: having a",
            "cleaned_prediction": "froid",
            "gt": "froid"
        },
        {
            "input_prompt": "Input: funeral\nOutput:",
            "test_query": "funeral",
            "prediction": "fun\u00e9railles\ntranslation for \"funeral\" to",
            "cleaned_prediction": "fun\u00e9railles",
            "gt": "fun\u00e9railles"
        },
        {
            "input_prompt": "Input: weapons\nOutput:",
            "test_query": "weapons",
            "prediction": "armes\ntranslation: weapons\ndefinition: weapons",
            "cleaned_prediction": "armes",
            "gt": "armes"
        },
        {
            "input_prompt": "Input: philippine\nOutput:",
            "test_query": "philippine",
            "prediction": "philippine\nexplanation: the word is already a",
            "cleaned_prediction": "philippine",
            "gt": "philippin"
        },
        {
            "input_prompt": "Input: replacing\nOutput:",
            "test_query": "replacing",
            "prediction": "remplacement\ninput: replace\noutput: remplacement",
            "cleaned_prediction": "remplacement",
            "gt": "rempla\u00e7ant"
        },
        {
            "input_prompt": "Input: categories\nOutput:",
            "test_query": "categories",
            "prediction": "cat\u00e9gories\ntranslation: categories\ndescription: trans",
            "cleaned_prediction": "cat\u00e9gories",
            "gt": "cat\u00e9gories"
        },
        {
            "input_prompt": "Input: improvements\nOutput:",
            "test_query": "improvements",
            "prediction": "am\u00e9liorations\ntranslation: improvements\ndefinition:",
            "cleaned_prediction": "am\u00e9liorations",
            "gt": "am\u00e9liorations"
        },
        {
            "input_prompt": "Input: implementation\nOutput:",
            "test_query": "implementation",
            "prediction": "mise en \u0153uvre\na french translation of the english",
            "cleaned_prediction": "mise en \u0153uvre",
            "gt": "mise en \u0153uvre"
        },
        {
            "input_prompt": "Input: fires\nOutput:",
            "test_query": "fires",
            "prediction": "incendies\nsynonyms: conflagration,",
            "cleaned_prediction": "incendies",
            "gt": "incendies"
        },
        {
            "input_prompt": "Input: edit\nOutput:",
            "test_query": "edit",
            "prediction": "\u00e9dit\ntranslation: edit\ninput: edit",
            "cleaned_prediction": "\u00e9dit",
            "gt": "modifier"
        },
        {
            "input_prompt": "Input: sweet\nOutput:",
            "test_query": "sweet",
            "prediction": "doux\nfrench to english translation\nfrench to english",
            "cleaned_prediction": "doux",
            "gt": "doux"
        },
        {
            "input_prompt": "Input: defeated\nOutput:",
            "test_query": "defeated",
            "prediction": "battu\nsynonyms: defeated, beaten, van",
            "cleaned_prediction": "battu",
            "gt": "d\u00e9fait"
        },
        {
            "input_prompt": "Input: handle\nOutput:",
            "test_query": "handle",
            "prediction": "manche\ndefinition: handle of a container\nsyn",
            "cleaned_prediction": "manche",
            "gt": "poign\u00e9e"
        },
        {
            "input_prompt": "Input: cable\nOutput:",
            "test_query": "cable",
            "prediction": "c\u00e2ble\ntranslation: cable\nsynonyms: wire",
            "cleaned_prediction": "c\u00e2ble",
            "gt": "c\u00e2ble"
        },
        {
            "input_prompt": "Input: paying\nOutput:",
            "test_query": "paying",
            "prediction": "pay\ndefinition: (verb) give money or a",
            "cleaned_prediction": "pay",
            "gt": "payer"
        },
        {
            "input_prompt": "Input: published\nOutput:",
            "test_query": "published",
            "prediction": "publi\u00e9\ninput: published\noutput: publi\u00e9",
            "cleaned_prediction": "publi\u00e9",
            "gt": "publi\u00e9"
        },
        {
            "input_prompt": "Input: for\nOutput:",
            "test_query": "for",
            "prediction": "entr\u00e9e\ntranslation: entry\ndefinition: the main",
            "cleaned_prediction": "entr\u00e9e",
            "gt": "pour"
        },
        {
            "input_prompt": "Input: sustained\nOutput:",
            "test_query": "sustained",
            "prediction": "soutain\ninput: cede\noutput: c",
            "cleaned_prediction": "soutain",
            "gt": "soutenu"
        },
        {
            "input_prompt": "Input: upcoming\nOutput:",
            "test_query": "upcoming",
            "prediction": "\u00e0 venir\ntranslation: to come\ndefinition: the",
            "cleaned_prediction": "\u00e0 venir",
            "gt": "\u00e0 venir"
        },
        {
            "input_prompt": "Input: mineral\nOutput:",
            "test_query": "mineral",
            "prediction": "min\u00e9ral\nlanguage: french\nexplanation: the",
            "cleaned_prediction": "min\u00e9ral",
            "gt": "min\u00e9ral"
        },
        {
            "input_prompt": "Input: tourists\nOutput:",
            "test_query": "tourists",
            "prediction": "tourist\ninput: tourists\noutput: tourist\n\ninput",
            "cleaned_prediction": "tourist",
            "gt": "touristes"
        },
        {
            "input_prompt": "Input: politicians\nOutput:",
            "test_query": "politicians",
            "prediction": "politiciens\ngrammar: noun\ntranslation: politicians",
            "cleaned_prediction": "politiciens",
            "gt": "politiciens"
        },
        {
            "input_prompt": "Input: attack\nOutput:",
            "test_query": "attack",
            "prediction": "attaque\nlanguage: french\nexplanation: the word",
            "cleaned_prediction": "attaque",
            "gt": "attaque"
        },
        {
            "input_prompt": "Input: free\nOutput:",
            "test_query": "free",
            "prediction": "gratuitous\ninput: free\noutput: gratuitous",
            "cleaned_prediction": "gratuitous",
            "gt": "gratuit"
        },
        {
            "input_prompt": "Input: trees\nOutput:",
            "test_query": "trees",
            "prediction": "arbres\n\n# tree\n\n## french translation\n\nthe",
            "cleaned_prediction": "arbres",
            "gt": "arbres"
        },
        {
            "input_prompt": "Input: starts\nOutput:",
            "test_query": "starts",
            "prediction": "d\u00e9buts\ntranslation: starts\nsynonyms:",
            "cleaned_prediction": "d\u00e9buts",
            "gt": "\u00e9toiles"
        },
        {
            "input_prompt": "Input: students\nOutput:",
            "test_query": "students",
            "prediction": "\u00e9l\u00e8ves\ntranslation: students\ndefinition: a",
            "cleaned_prediction": "\u00e9l\u00e8ves",
            "gt": "\u00e9tudiants"
        },
        {
            "input_prompt": "Input: buffalo\nOutput:",
            "test_query": "buffalo",
            "prediction": "b a f f a l o a u\n\nexplanation",
            "cleaned_prediction": "b a f f a l o a u",
            "gt": "bison"
        },
        {
            "input_prompt": "Input: geneva\nOutput:",
            "test_query": "geneva",
            "prediction": "gen\u00e8ve\n\nexplanation:\nthe task is to convert a",
            "cleaned_prediction": "gen\u00e8ve",
            "gt": "Gen\u00e8ve"
        },
        {
            "input_prompt": "Input: ruins\nOutput:",
            "test_query": "ruins",
            "prediction": "ruine\n1. (of a person) having",
            "cleaned_prediction": "ruine",
            "gt": "ruines"
        },
        {
            "input_prompt": "Input: rebuilt\nOutput:",
            "test_query": "rebuilt",
            "prediction": "rebuit\nrevision 1: rebuit -> rebuilt",
            "cleaned_prediction": "rebuit",
            "gt": "reconstruit"
        },
        {
            "input_prompt": "Input: preserve\nOutput:",
            "test_query": "preserve",
            "prediction": "pr\u00e9server\nexamples\npreserve \u2192 pr\u00e9server\npres",
            "cleaned_prediction": "pr\u00e9server",
            "gt": "pr\u00e9server"
        },
        {
            "input_prompt": "Input: bed\nOutput:",
            "test_query": "bed",
            "prediction": "lit\n\nexplanation: the bed is lit.\n\ninput:",
            "cleaned_prediction": "lit",
            "gt": "lit"
        },
        {
            "input_prompt": "Input: button\nOutput:",
            "test_query": "button",
            "prediction": "bouton\ntranslation: button\ndomain: gui",
            "cleaned_prediction": "bouton",
            "gt": "bouton"
        },
        {
            "input_prompt": "Input: beauty\nOutput:",
            "test_query": "beauty",
            "prediction": "beaut\u00e9\ninput: beauty\noutput: beaut\u00e9",
            "cleaned_prediction": "beaut\u00e9",
            "gt": "beaut\u00e9"
        },
        {
            "input_prompt": "Input: states\nOutput:",
            "test_query": "states",
            "prediction": "\u00e9tats\ntranslation: states\n\n## step 1",
            "cleaned_prediction": "\u00e9tats",
            "gt": "\u00e9tats"
        },
        {
            "input_prompt": "Input: nuclear\nOutput:",
            "test_query": "nuclear",
            "prediction": "nucl\u00e9aire\nlanguage model trained on: french",
            "cleaned_prediction": "nucl\u00e9aire",
            "gt": "nucl\u00e9aire"
        },
        {
            "input_prompt": "Input: coached\nOutput:",
            "test_query": "coached",
            "prediction": "entra\u00een\u00e9\nshare\ninput: coach\noutput",
            "cleaned_prediction": "entra\u00een\u00e9",
            "gt": "entra\u00een\u00e9"
        },
        {
            "input_prompt": "Input: prefer\nOutput:",
            "test_query": "prefer",
            "prediction": "pr\u00e9f\u00e9rer\ntranslation: to prefer\nsynonyms",
            "cleaned_prediction": "pr\u00e9f\u00e9rer",
            "gt": "pr\u00e9f\u00e9rer"
        },
        {
            "input_prompt": "Input: organic\nOutput:",
            "test_query": "organic",
            "prediction": "organique\nthe french term \"organique\" is",
            "cleaned_prediction": "organique",
            "gt": "biologique"
        },
        {
            "input_prompt": "Input: begun\nOutput:",
            "test_query": "begun",
            "prediction": "commenc\u00e9\ntranslation: began\ndefinition: start or",
            "cleaned_prediction": "commenc\u00e9",
            "gt": "commenc\u00e9"
        },
        {
            "input_prompt": "Input: recognised\nOutput:",
            "test_query": "recognised",
            "prediction": "reconnu\ntranslation: recognised\nsynonyms for",
            "cleaned_prediction": "reconnu",
            "gt": "reconnu"
        },
        {
            "input_prompt": "Input: stayed\nOutput:",
            "test_query": "stayed",
            "prediction": "rest\u00e9\ntranslation: stayed\nsynonyms: linger",
            "cleaned_prediction": "rest\u00e9",
            "gt": "rest\u00e9"
        },
        {
            "input_prompt": "Input: mail\nOutput:",
            "test_query": "mail",
            "prediction": "courriel\nsynonyms: letter\ntranslations:",
            "cleaned_prediction": "courriel",
            "gt": "courrier"
        },
        {
            "input_prompt": "Input: reasoning\nOutput:",
            "test_query": "reasoning",
            "prediction": "raisin\n================\n\n**step 1: understand",
            "cleaned_prediction": "raisin",
            "gt": "raisonnement"
        },
        {
            "input_prompt": "Input: patrol\nOutput:",
            "test_query": "patrol",
            "prediction": "patrouille\ntranslation for word patrol in spanish:",
            "cleaned_prediction": "patrouille",
            "gt": "patrouille"
        },
        {
            "input_prompt": "Input: fluid\nOutput:",
            "test_query": "fluid",
            "prediction": "fluide\nerror: 0.0\ninput",
            "cleaned_prediction": "fluide",
            "gt": "liquide"
        },
        {
            "input_prompt": "Input: oxygen\nOutput:",
            "test_query": "oxygen",
            "prediction": "oxyg\u00e8ne\ntranslation: oxygen (english) \u2192",
            "cleaned_prediction": "oxyg\u00e8ne",
            "gt": "oxyg\u00e8ne"
        },
        {
            "input_prompt": "Input: corner\nOutput:",
            "test_query": "corner",
            "prediction": "coin\ninput: coin\noutput: corner\ninput",
            "cleaned_prediction": "coin",
            "gt": "coin"
        },
        {
            "input_prompt": "Input: referendum\nOutput:",
            "test_query": "referendum",
            "prediction": "r\u00e9f\u00e9rendum\ndefinitions:\n- a referendum is a",
            "cleaned_prediction": "r\u00e9f\u00e9rendum",
            "gt": "r\u00e9f\u00e9rendum"
        },
        {
            "input_prompt": "Input: wrestling\nOutput:",
            "test_query": "wrestling",
            "prediction": "lutte\ninput: wrestler\noutput: lutte",
            "cleaned_prediction": "lutte",
            "gt": "lutte"
        },
        {
            "input_prompt": "Input: roughly\nOutput:",
            "test_query": "roughly",
            "prediction": "approximativement\ntranslation: roughly\ndefinition:",
            "cleaned_prediction": "approximativement",
            "gt": "approximativement"
        },
        {
            "input_prompt": "Input: academy\nOutput:",
            "test_query": "academy",
            "prediction": "acad\u00e9mie\ntranslation: academy\nsynonyms:",
            "cleaned_prediction": "acad\u00e9mie",
            "gt": "acad\u00e9mie"
        },
        {
            "input_prompt": "Input: indoor\nOutput:",
            "test_query": "indoor",
            "prediction": "int\n\"\"\"\nimport random\n\ndef generate_random_integer():",
            "cleaned_prediction": "int",
            "gt": "int\u00e9rieur"
        },
        {
            "input_prompt": "Input: pearl\nOutput:",
            "test_query": "pearl",
            "prediction": "perle\ninput: hello\noutput: bonjour",
            "cleaned_prediction": "perle",
            "gt": "perle"
        },
        {
            "input_prompt": "Input: draft\nOutput:",
            "test_query": "draft",
            "prediction": "entr\u00e9e\ntranslation: entry\ndefinition: a dish",
            "cleaned_prediction": "entr\u00e9e",
            "gt": "brouillon"
        },
        {
            "input_prompt": "Input: honor\nOutput:",
            "test_query": "honor",
            "prediction": "honorer\nchange one letter from \"honor\"",
            "cleaned_prediction": "honorer",
            "gt": "honneur"
        },
        {
            "input_prompt": "Input: right\nOutput:",
            "test_query": "right",
            "prediction": "droit\ninput: left\noutput: gauche\ninput",
            "cleaned_prediction": "droit",
            "gt": "droit"
        },
        {
            "input_prompt": "Input: privacy\nOutput:",
            "test_query": "privacy",
            "prediction": "confidentialit\u00e9\nsynonyms: secrecy, confidentiality, secrecy",
            "cleaned_prediction": "confidentialit\u00e9",
            "gt": "intimit\u00e9"
        },
        {
            "input_prompt": "Input: tuesday\nOutput:",
            "test_query": "tuesday",
            "prediction": "mardi\n\ninput: wednesday\noutput: mer",
            "cleaned_prediction": "mardi",
            "gt": "mardi"
        },
        {
            "input_prompt": "Input: egypt\nOutput:",
            "test_query": "egypt",
            "prediction": "\u00e9gypte\n\ninput: portugal\noutput:",
            "cleaned_prediction": "\u00e9gypte",
            "gt": "\u00c9gypte"
        },
        {
            "input_prompt": "Input: catholic\nOutput:",
            "test_query": "catholic",
            "prediction": "catholique\ntranslation for word catholic in swah",
            "cleaned_prediction": "catholique",
            "gt": "catholique"
        },
        {
            "input_prompt": "Input: november\nOutput:",
            "test_query": "november",
            "prediction": "novembre\nlanguage: french\nexplanation: the word \"",
            "cleaned_prediction": "novembre",
            "gt": "novembre"
        },
        {
            "input_prompt": "Input: offering\nOutput:",
            "test_query": "offering",
            "prediction": "offertory\ndefinition: a collection of money or",
            "cleaned_prediction": "offertory",
            "gt": "offre"
        },
        {
            "input_prompt": "Input: resumed\nOutput:",
            "test_query": "resumed",
            "prediction": "r\u00e9sum\u00e9\ntranslation: summary\ndefinition: a",
            "cleaned_prediction": "r\u00e9sum\u00e9",
            "gt": "repris"
        },
        {
            "input_prompt": "Input: precise\nOutput:",
            "test_query": "precise",
            "prediction": "pr\u00e9cis\nthe word \"precise\" has a",
            "cleaned_prediction": "pr\u00e9cis",
            "gt": "pr\u00e9cis"
        },
        {
            "input_prompt": "Input: unofficial\nOutput:",
            "test_query": "unofficial",
            "prediction": "non-official\ntype: informal\nformat: text",
            "cleaned_prediction": "non-official",
            "gt": "non officiel"
        },
        {
            "input_prompt": "Input: string\nOutput:",
            "test_query": "string",
            "prediction": "entr\u00e9e\noutput: string\noutput: entr\u00e9e",
            "cleaned_prediction": "entr\u00e9e",
            "gt": "corde"
        },
        {
            "input_prompt": "Input: grid\nOutput:",
            "test_query": "grid",
            "prediction": "entr\u00e9es\n\nfrench to english translation for \"entr\u00e9es",
            "cleaned_prediction": "entr\u00e9es",
            "gt": "grille"
        },
        {
            "input_prompt": "Input: life\nOutput:",
            "test_query": "life",
            "prediction": "vie\ntranslation: life\ndefinition: the condition that",
            "cleaned_prediction": "vie",
            "gt": "vie"
        },
        {
            "input_prompt": "Input: electrical\nOutput:",
            "test_query": "electrical",
            "prediction": "\u00e9lectrique\nthis is an example of an input/output",
            "cleaned_prediction": "\u00e9lectrique",
            "gt": "\u00e9lectrique"
        },
        {
            "input_prompt": "Input: sharing\nOutput:",
            "test_query": "sharing",
            "prediction": "partage\ntranslated by: google translate\nsuggest",
            "cleaned_prediction": "partage",
            "gt": "partage"
        },
        {
            "input_prompt": "Input: alexander\nOutput:",
            "test_query": "alexander",
            "prediction": "alexandre\nthe correct conversion is: alexandre (french)",
            "cleaned_prediction": "alexandre",
            "gt": "Alexandre"
        },
        {
            "input_prompt": "Input: diseases\nOutput:",
            "test_query": "diseases",
            "prediction": "maladies\ntranslation: diseases\ndefinition: sickness",
            "cleaned_prediction": "maladies",
            "gt": "maladies"
        },
        {
            "input_prompt": "Input: item\nOutput:",
            "test_query": "item",
            "prediction": "article\nchange the title of the item to the plural",
            "cleaned_prediction": "article",
            "gt": "article"
        },
        {
            "input_prompt": "Input: runner\nOutput:",
            "test_query": "runner",
            "prediction": "coureur\ntranslation: the word \"runner\" in",
            "cleaned_prediction": "coureur",
            "gt": "coureur"
        },
        {
            "input_prompt": "Input: put\nOutput:",
            "test_query": "put",
            "prediction": "mettre\ninput: put\noutput: mettre\ninput",
            "cleaned_prediction": "mettre",
            "gt": "mettre"
        },
        {
            "input_prompt": "Input: characters\nOutput:",
            "test_query": "characters",
            "prediction": "caract\u00e8res\ntranslation: characters\n\n# characters\n================================",
            "cleaned_prediction": "caract\u00e8res",
            "gt": "personnages"
        },
        {
            "input_prompt": "Input: seven\nOutput:",
            "test_query": "seven",
            "prediction": "sept\n\nexplanation: the word \"seven\" spelled backwards",
            "cleaned_prediction": "sept",
            "gt": "sept"
        },
        {
            "input_prompt": "Input: christopher\nOutput:",
            "test_query": "christopher",
            "prediction": "christopher\ninput: christine\noutput: christ",
            "cleaned_prediction": "christopher",
            "gt": "christophe"
        },
        {
            "input_prompt": "Input: live\nOutput:",
            "test_query": "live",
            "prediction": "vivel\nexplanation: the string \"live\" spelled",
            "cleaned_prediction": "vivel",
            "gt": "vivre"
        },
        {
            "input_prompt": "Input: vietnamese\nOutput:",
            "test_query": "vietnamese",
            "prediction": "vietnam\ninput: vietnamese\noutput: viet",
            "cleaned_prediction": "vietnam",
            "gt": "vietnamien"
        },
        {
            "input_prompt": "Input: the\nOutput:",
            "test_query": "the",
            "prediction": "l'entr\u00e9e\ntranslation: the input\nsyn",
            "cleaned_prediction": "l'entr\u00e9e",
            "gt": "le/la/les"
        },
        {
            "input_prompt": "Input: situated\nOutput:",
            "test_query": "situated",
            "prediction": "situ\u00e9\ninput: situated\noutput: situ\u00e9",
            "cleaned_prediction": "situ\u00e9",
            "gt": "situ\u00e9"
        },
        {
            "input_prompt": "Input: mrs\nOutput:",
            "test_query": "mrs",
            "prediction": "madame\n\nexplanation: the first letter of each word",
            "cleaned_prediction": "madame",
            "gt": "madame"
        },
        {
            "input_prompt": "Input: diversity\nOutput:",
            "test_query": "diversity",
            "prediction": "diversit\u00e9\nlanguage model trained on: french text",
            "cleaned_prediction": "diversit\u00e9",
            "gt": "diversit\u00e9"
        },
        {
            "input_prompt": "Input: blind\nOutput:",
            "test_query": "blind",
            "prediction": "aveugle\ntransliteration: avy\ufffd",
            "cleaned_prediction": "aveugle",
            "gt": "aveugle"
        },
        {
            "input_prompt": "Input: brought\nOutput:",
            "test_query": "brought",
            "prediction": "apport\u00e9\ntranslation: brought\nsynonyms to",
            "cleaned_prediction": "apport\u00e9",
            "gt": "apport\u00e9"
        },
        {
            "input_prompt": "Input: departed\nOutput:",
            "test_query": "departed",
            "prediction": "d\u00e9part\u00e9\nfrench translation for departed\nfind other",
            "cleaned_prediction": "d\u00e9part\u00e9",
            "gt": "parti"
        },
        {
            "input_prompt": "Input: locally\nOutput:",
            "test_query": "locally",
            "prediction": "localement\nrevision: 1\nlevel:",
            "cleaned_prediction": "localement",
            "gt": "localement"
        },
        {
            "input_prompt": "Input: customs\nOutput:",
            "test_query": "customs",
            "prediction": "douanes\n\ntranslation: customs \u2192 douanes\n\nsyn",
            "cleaned_prediction": "douanes",
            "gt": "douanes"
        },
        {
            "input_prompt": "Input: derivative\nOutput:",
            "test_query": "derivative",
            "prediction": "d\u00e9riv\u00e9e\ndiscourse: mathematics\ndomain:",
            "cleaned_prediction": "d\u00e9riv\u00e9e",
            "gt": "d\u00e9riv\u00e9"
        },
        {
            "input_prompt": "Input: morocco\nOutput:",
            "test_query": "morocco",
            "prediction": "maroc\ninput: czech\noutput: t",
            "cleaned_prediction": "maroc",
            "gt": "maroc"
        },
        {
            "input_prompt": "Input: technically\nOutput:",
            "test_query": "technically",
            "prediction": "techniquement\ntranslation: technically\nsynonyms for technically",
            "cleaned_prediction": "techniquement",
            "gt": "techniquement"
        },
        {
            "input_prompt": "Input: immediate\nOutput:",
            "test_query": "immediate",
            "prediction": "imm\u00e9diat\ntranslation: immediate\ntype:",
            "cleaned_prediction": "imm\u00e9diat",
            "gt": "imm\u00e9diat"
        },
        {
            "input_prompt": "Input: signals\nOutput:",
            "test_query": "signals",
            "prediction": "signaux\nmodel: signal processing\nproblem: signal",
            "cleaned_prediction": "signaux",
            "gt": "signaux"
        },
        {
            "input_prompt": "Input: location\nOutput:",
            "test_query": "location",
            "prediction": "localisation\ntranslation: localisation\ndefinition: the",
            "cleaned_prediction": "localisation",
            "gt": "emplacement"
        },
        {
            "input_prompt": "Input: valley\nOutput:",
            "test_query": "valley",
            "prediction": "valley\n\nexplanation: the word \"valley",
            "cleaned_prediction": "valley",
            "gt": "vall\u00e9e"
        },
        {
            "input_prompt": "Input: revolt\nOutput:",
            "test_query": "revolt",
            "prediction": "r\u00e9volte\ntranslation: revolt\nsynonyms:",
            "cleaned_prediction": "r\u00e9volte",
            "gt": "r\u00e9volte"
        },
        {
            "input_prompt": "Input: composers\nOutput:",
            "test_query": "composers",
            "prediction": "composite numbers\ninput: numbers\noutput: composite numbers",
            "cleaned_prediction": "composite numbers",
            "gt": "compositeurs"
        },
        {
            "input_prompt": "Input: deal\nOutput:",
            "test_query": "deal",
            "prediction": "affaire\ntranslation: affair\nsynonyms: business",
            "cleaned_prediction": "affaire",
            "gt": "accord"
        },
        {
            "input_prompt": "Input: amazing\nOutput:",
            "test_query": "amazing",
            "prediction": "incroyable\ntranslation: amazing\nsynonyms for",
            "cleaned_prediction": "incroyable",
            "gt": "incroyable"
        },
        {
            "input_prompt": "Input: humanity\nOutput:",
            "test_query": "humanity",
            "prediction": "humanit\u00e9\nfrench to english translation\nthe word \"",
            "cleaned_prediction": "humanit\u00e9",
            "gt": "humanit\u00e9"
        },
        {
            "input_prompt": "Input: birth\nOutput:",
            "test_query": "birth",
            "prediction": "naissance\ntranslation: birth\nsynonyms: conception",
            "cleaned_prediction": "naissance",
            "gt": "naissance"
        },
        {
            "input_prompt": "Input: donated\nOutput:",
            "test_query": "donated",
            "prediction": "donat\u00e9\ntranslation: donated\nsynonyms for",
            "cleaned_prediction": "donat\u00e9",
            "gt": "donn\u00e9"
        },
        {
            "input_prompt": "Input: interim\nOutput:",
            "test_query": "interim",
            "prediction": "inter\ninterim is the adjective form of interim.",
            "cleaned_prediction": "inter",
            "gt": "int\u00e9rim"
        },
        {
            "input_prompt": "Input: traditionally\nOutput:",
            "test_query": "traditionally",
            "prediction": "traditionnellement\ntraduction:\n1. the new",
            "cleaned_prediction": "traditionnellement",
            "gt": "traditionnellement"
        },
        {
            "input_prompt": "Input: increase\nOutput:",
            "test_query": "increase",
            "prediction": "augmentation\nchange from input to output is: -11",
            "cleaned_prediction": "augmentation",
            "gt": "augmenter"
        },
        {
            "input_prompt": "Input: sandy\nOutput:",
            "test_query": "sandy",
            "prediction": "s\n\nexplanation:\nthe longest substring without repeating characters is",
            "cleaned_prediction": "s",
            "gt": "sableux"
        },
        {
            "input_prompt": "Input: disaster\nOutput:",
            "test_query": "disaster",
            "prediction": "catastrophe\ndefinition: a disaster is an unfortunate event that",
            "cleaned_prediction": "catastrophe",
            "gt": "d\u00e9sastre"
        },
        {
            "input_prompt": "Input: collaborative\nOutput:",
            "test_query": "collaborative",
            "prediction": "collaboratif\ntranslation: collaborative\ndefinition: working together",
            "cleaned_prediction": "collaboratif",
            "gt": "collaboratif"
        },
        {
            "input_prompt": "Input: recurring\nOutput:",
            "test_query": "recurring",
            "prediction": "r\u00e9current\ntranslation: recurring\ndefinition: happening or",
            "cleaned_prediction": "r\u00e9current",
            "gt": "r\u00e9current"
        },
        {
            "input_prompt": "Input: deployed\nOutput:",
            "test_query": "deployed",
            "prediction": "d\u00e9ploy\u00e9\ntranslation: deployed\nsearch by word",
            "cleaned_prediction": "d\u00e9ploy\u00e9",
            "gt": "d\u00e9ploy\u00e9"
        },
        {
            "input_prompt": "Input: tiny\nOutput:",
            "test_query": "tiny",
            "prediction": "minuscule\ndefinition: extremely small in size or",
            "cleaned_prediction": "minuscule",
            "gt": "petit"
        },
        {
            "input_prompt": "Input: ref\nOutput:",
            "test_query": "ref",
            "prediction": "r\u00e9f\u00e9rences\n---\n\ndef find_references(input_ref):",
            "cleaned_prediction": "r\u00e9f\u00e9rences",
            "gt": "r\u00e9f\u00e9rence"
        },
        {
            "input_prompt": "Input: connects\nOutput:",
            "test_query": "connects",
            "prediction": "reconnait\nexplanation: the word \"connects",
            "cleaned_prediction": "reconnait",
            "gt": "se connecte"
        },
        {
            "input_prompt": "Input: edge\nOutput:",
            "test_query": "edge",
            "prediction": "ar\u00eate\ninput: edges\noutput: ar\u00eates",
            "cleaned_prediction": "ar\u00eate",
            "gt": "bord"
        },
        {
            "input_prompt": "Input: all\nOutput:",
            "test_query": "all",
            "prediction": "entr\u00e9es\ntranslation: entries\ndefinition: entries",
            "cleaned_prediction": "entr\u00e9es",
            "gt": "tous"
        },
        {
            "input_prompt": "Input: against\nOutput:",
            "test_query": "against",
            "prediction": "contre\ntranslation: against\nsynonyms to \"contre",
            "cleaned_prediction": "contre",
            "gt": "contre"
        },
        {
            "input_prompt": "Input: realize\nOutput:",
            "test_query": "realize",
            "prediction": "r\u00e9aliser\nlanguage: french\npronunciation:",
            "cleaned_prediction": "r\u00e9aliser",
            "gt": "r\u00e9aliser"
        },
        {
            "input_prompt": "Input: meat\nOutput:",
            "test_query": "meat",
            "prediction": "viande\nfrench translation for \"meat\"\nfrench",
            "cleaned_prediction": "viande",
            "gt": "viande"
        },
        {
            "input_prompt": "Input: reveals\nOutput:",
            "test_query": "reveals",
            "prediction": "r\u00e9v\u00e8le\nlanguage model: french\nerror type",
            "cleaned_prediction": "r\u00e9v\u00e8le",
            "gt": "r\u00e9v\u00e8le"
        },
        {
            "input_prompt": "Input: translator\nOutput:",
            "test_query": "translator",
            "prediction": "traducteur\ndefinition: a person who translates written",
            "cleaned_prediction": "traducteur",
            "gt": "traducteur"
        },
        {
            "input_prompt": "Input: collect\nOutput:",
            "test_query": "collect",
            "prediction": "collect\ndifficulty: elementary\n\ngiven an array of integers",
            "cleaned_prediction": "collect",
            "gt": "recueillir"
        },
        {
            "input_prompt": "Input: execution\nOutput:",
            "test_query": "execution",
            "prediction": "ex\u00e9cution\nlangue: fran\u00e7ais\ntablette",
            "cleaned_prediction": "ex\u00e9cution",
            "gt": "ex\u00e9cution"
        },
        {
            "input_prompt": "Input: dinner\nOutput:",
            "test_query": "dinner",
            "prediction": "d\u00een\u0259r\nipa: /\u02c8",
            "cleaned_prediction": "d\u00een\u0259r",
            "gt": "d\u00eener"
        },
        {
            "input_prompt": "Input: viola\nOutput:",
            "test_query": "viola",
            "prediction": "violoncelle\n\nexplanation: violin is the",
            "cleaned_prediction": "violoncelle",
            "gt": "alto"
        },
        {
            "input_prompt": "Input: instructor\nOutput:",
            "test_query": "instructor",
            "prediction": "professeur\n\ntranslation: instructor \u2192 professeur",
            "cleaned_prediction": "professeur",
            "gt": "instructeur"
        },
        {
            "input_prompt": "Input: broadcasts\nOutput:",
            "test_query": "broadcasts",
            "prediction": "\u00e9missions\ntranslation: broadcasts\ndefinition: the act",
            "cleaned_prediction": "\u00e9missions",
            "gt": "diffusions"
        },
        {
            "input_prompt": "Input: jurisdiction\nOutput:",
            "test_query": "jurisdiction",
            "prediction": "juridiction\ninput: jurisdiction\noutput: jur",
            "cleaned_prediction": "juridiction",
            "gt": "juridiction"
        },
        {
            "input_prompt": "Input: wearing\nOutput:",
            "test_query": "wearing",
            "prediction": "portant\nexplanation: the word \"wearing\"",
            "cleaned_prediction": "portant",
            "gt": "porter"
        },
        {
            "input_prompt": "Input: griffin\nOutput:",
            "test_query": "griffin",
            "prediction": "griffin\nfinal answer: the final answer is gr",
            "cleaned_prediction": "griffin",
            "gt": "griffon"
        },
        {
            "input_prompt": "Input: chilean\nOutput:",
            "test_query": "chilean",
            "prediction": "chil\u00e9an\ncorrected: chil\u00e9",
            "cleaned_prediction": "chil\u00e9an",
            "gt": "chilien"
        },
        {
            "input_prompt": "Input: hired\nOutput:",
            "test_query": "hired",
            "prediction": "engag\u00e9\ntranslation: engaged\ndefinition: to",
            "cleaned_prediction": "engag\u00e9",
            "gt": "embauch\u00e9"
        },
        {
            "input_prompt": "Input: hell\nOutput:",
            "test_query": "hell",
            "prediction": "enferno\n\nexplanation: \nthe input string \"hell",
            "cleaned_prediction": "enferno",
            "gt": "enfer"
        },
        {
            "input_prompt": "Input: previously\nOutput:",
            "test_query": "previously",
            "prediction": "pr\u00e9c\u00e9demment\ninput: previous\noutput:",
            "cleaned_prediction": "pr\u00e9c\u00e9demment",
            "gt": "pr\u00e9c\u00e9demment"
        },
        {
            "input_prompt": "Input: empty\nOutput:",
            "test_query": "empty",
            "prediction": "vide\ninput: 5\noutput: 5",
            "cleaned_prediction": "vide",
            "gt": "vide"
        },
        {
            "input_prompt": "Input: jun\nOutput:",
            "test_query": "jun",
            "prediction": "entr\u00e9e\n\ninput: taz\noutput: t",
            "cleaned_prediction": "entr\u00e9e",
            "gt": "Jun"
        },
        {
            "input_prompt": "Input: bacteria\nOutput:",
            "test_query": "bacteria",
            "prediction": "bact\u00e9ries\ntransliteration: bakt",
            "cleaned_prediction": "bact\u00e9ries",
            "gt": "bact\u00e9rie"
        },
        {
            "input_prompt": "Input: remote\nOutput:",
            "test_query": "remote",
            "prediction": "\u00e9cran\ntranslation: screen\ndefinition: a surface",
            "cleaned_prediction": "\u00e9cran",
            "gt": "t\u00e9l\u00e9commande"
        },
        {
            "input_prompt": "Input: actively\nOutput:",
            "test_query": "actively",
            "prediction": "activelie\nthe word \"activelie\"",
            "cleaned_prediction": "activelie",
            "gt": "activement"
        },
        {
            "input_prompt": "Input: nicholas\nOutput:",
            "test_query": "nicholas",
            "prediction": "nicholas\ninput: nick\noutput: nick",
            "cleaned_prediction": "nicholas",
            "gt": "Nicolas"
        },
        {
            "input_prompt": "Input: hot\nOutput:",
            "test_query": "hot",
            "prediction": "chaud\ntranslation: hot\ndefinition: having a high",
            "cleaned_prediction": "chaud",
            "gt": "chaud"
        },
        {
            "input_prompt": "Input: scientific\nOutput:",
            "test_query": "scientific",
            "prediction": "scientifique\nlanguage: french\ncategory: words",
            "cleaned_prediction": "scientifique",
            "gt": "scientifique"
        },
        {
            "input_prompt": "Input: released\nOutput:",
            "test_query": "released",
            "prediction": "libinput\nversion: 1.17.0",
            "cleaned_prediction": "libinput",
            "gt": "lib\u00e9r\u00e9"
        },
        {
            "input_prompt": "Input: substantial\nOutput:",
            "test_query": "substantial",
            "prediction": "important\nthe correct answer is: b\nexplanation:",
            "cleaned_prediction": "important",
            "gt": "substantiel"
        },
        {
            "input_prompt": "Input: com\nOutput:",
            "test_query": "com",
            "prediction": "entr\u00e9e\ntranslation: entry\ndefinition: (n",
            "cleaned_prediction": "entr\u00e9e",
            "gt": "dot com - point com"
        },
        {
            "input_prompt": "Input: girl\nOutput:",
            "test_query": "girl",
            "prediction": "fille\n\nexplanation: the word \"girl\" spelled backwards",
            "cleaned_prediction": "fille",
            "gt": "fille"
        },
        {
            "input_prompt": "Input: eldest\nOutput:",
            "test_query": "eldest",
            "prediction": "a\u00een\u00e9\ninput: youngest\noutput: le",
            "cleaned_prediction": "a\u00een\u00e9",
            "gt": "a\u00een\u00e9"
        },
        {
            "input_prompt": "Input: funny\nOutput:",
            "test_query": "funny",
            "prediction": "dr\u00f4le\ntranslation for \"funny\" to french",
            "cleaned_prediction": "dr\u00f4le",
            "gt": "dr\u00f4le"
        },
        {
            "input_prompt": "Input: victories\nOutput:",
            "test_query": "victories",
            "prediction": "victoires\ntranslation: wins\nsynonyms:",
            "cleaned_prediction": "victoires",
            "gt": "victoires"
        },
        {
            "input_prompt": "Input: eagles\nOutput:",
            "test_query": "eagles",
            "prediction": "aigles\n\ninput: tigers\noutput:",
            "cleaned_prediction": "aigles",
            "gt": "aigles"
        },
        {
            "input_prompt": "Input: increasing\nOutput:",
            "test_query": "increasing",
            "prediction": "croissant\ninput: not increasing\noutput: none",
            "cleaned_prediction": "croissant",
            "gt": "augmentant"
        },
        {
            "input_prompt": "Input: promoting\nOutput:",
            "test_query": "promoting",
            "prediction": "promotion\npromoting is the act of giving more power",
            "cleaned_prediction": "promotion",
            "gt": "promouvoir"
        },
        {
            "input_prompt": "Input: mosque\nOutput:",
            "test_query": "mosque",
            "prediction": "mosk\nmosk is a city in russia,",
            "cleaned_prediction": "mosk",
            "gt": "mosqu\u00e9e"
        },
        {
            "input_prompt": "Input: bavaria\nOutput:",
            "test_query": "bavaria",
            "prediction": "bavaria\ninput: bavaria\noutput:",
            "cleaned_prediction": "bavaria",
            "gt": "Bavi\u00e8re"
        },
        {
            "input_prompt": "Input: explains\nOutput:",
            "test_query": "explains",
            "prediction": "explique\nthe french translation of \"explains\"",
            "cleaned_prediction": "explique",
            "gt": "explique"
        },
        {
            "input_prompt": "Input: nice\nOutput:",
            "test_query": "nice",
            "prediction": "gentil\n\nexplanation:\nthe input \"nice\" spelled",
            "cleaned_prediction": "gentil",
            "gt": "agr\u00e9able"
        },
        {
            "input_prompt": "Input: august\nOutput:",
            "test_query": "august",
            "prediction": "ao\u00fbt\nfrench translation for august\nthe french translation",
            "cleaned_prediction": "ao\u00fbt",
            "gt": "ao\u00fbt"
        },
        {
            "input_prompt": "Input: soviet\nOutput:",
            "test_query": "soviet",
            "prediction": "soviets\n\ninput: zambia\noutput:",
            "cleaned_prediction": "soviets",
            "gt": "sovi\u00e9tique"
        },
        {
            "input_prompt": "Input: answers\nOutput:",
            "test_query": "answers",
            "prediction": "r\u00e9ponses\ntranslation: answers\ndefinition: \n1",
            "cleaned_prediction": "r\u00e9ponses",
            "gt": "r\u00e9ponses"
        },
        {
            "input_prompt": "Input: personalities\nOutput:",
            "test_query": "personalities",
            "prediction": "personnalit\u00e9s\ninput: personality\noutput: person",
            "cleaned_prediction": "personnalit\u00e9s",
            "gt": "personnalit\u00e9s"
        },
        {
            "input_prompt": "Input: seconds\nOutput:",
            "test_query": "seconds",
            "prediction": "secondes\n\ninput: minutes\noutput: minutes",
            "cleaned_prediction": "secondes",
            "gt": "secondes"
        },
        {
            "input_prompt": "Input: load\nOutput:",
            "test_query": "load",
            "prediction": "charge\nchange in state from input to output\nfrom",
            "cleaned_prediction": "charge",
            "gt": "charger"
        },
        {
            "input_prompt": "Input: accounts\nOutput:",
            "test_query": "accounts",
            "prediction": "comptes\n\n# leetcode problem 323: number",
            "cleaned_prediction": "comptes",
            "gt": "comptes"
        },
        {
            "input_prompt": "Input: olympics\nOutput:",
            "test_query": "olympics",
            "prediction": "jeux olympiques\ninput: paralymp",
            "cleaned_prediction": "jeux olympiques",
            "gt": "olympiques"
        },
        {
            "input_prompt": "Input: founded\nOutput:",
            "test_query": "founded",
            "prediction": "fond\u00e9\ninput: founded\noutput: fond\u00e9",
            "cleaned_prediction": "fond\u00e9",
            "gt": "fond\u00e9"
        },
        {
            "input_prompt": "Input: suspected\nOutput:",
            "test_query": "suspected",
            "prediction": "suspect\nspelling: sus\u00b7pect (s\u0259",
            "cleaned_prediction": "suspect",
            "gt": "suspect\u00e9"
        },
        {
            "input_prompt": "Input: chose\nOutput:",
            "test_query": "chose",
            "prediction": "choos\ninput: wooing\noutput: woo",
            "cleaned_prediction": "choos",
            "gt": "choisi"
        },
        {
            "input_prompt": "Input: claimed\nOutput:",
            "test_query": "claimed",
            "prediction": "revendiqu\u00e9\nsynonyms: claimed, alleged,",
            "cleaned_prediction": "revendiqu\u00e9",
            "gt": "revendiqu\u00e9"
        },
        {
            "input_prompt": "Input: groups\nOutput:",
            "test_query": "groups",
            "prediction": "groupes\ntransliteration: gr\u00fapi",
            "cleaned_prediction": "groupes",
            "gt": "groupes"
        },
        {
            "input_prompt": "Input: riding\nOutput:",
            "test_query": "riding",
            "prediction": "conduire\ntranslation: to drive\nsynonyms:",
            "cleaned_prediction": "conduire",
            "gt": "\u00e9quitation"
        },
        {
            "input_prompt": "Input: fails\nOutput:",
            "test_query": "fails",
            "prediction": "\u00e9chec\ntranslation: failure\ndefinition: a",
            "cleaned_prediction": "\u00e9chec",
            "gt": "\u00e9choue"
        },
        {
            "input_prompt": "Input: enough\nOutput:",
            "test_query": "enough",
            "prediction": "sufficent\n\nexplanation: the word \"enough",
            "cleaned_prediction": "sufficent",
            "gt": "assez"
        },
        {
            "input_prompt": "Input: removal\nOutput:",
            "test_query": "removal",
            "prediction": "suppression\ninput: suppression\noutput: removal\ninput",
            "cleaned_prediction": "suppression",
            "gt": "enl\u00e8vement"
        },
        {
            "input_prompt": "Input: satisfy\nOutput:",
            "test_query": "satisfy",
            "prediction": "satisfaire\ntranslation: to satisfy\nsyn",
            "cleaned_prediction": "satisfaire",
            "gt": "satisfaire"
        },
        {
            "input_prompt": "Input: extent\nOutput:",
            "test_query": "extent",
            "prediction": "\u00e9tendue\nrelated terms: distance, distance measure",
            "cleaned_prediction": "\u00e9tendue",
            "gt": "\u00e9tendue"
        },
        {
            "input_prompt": "Input: friends\nOutput:",
            "test_query": "friends",
            "prediction": "amis\n\nexplanation: the string \"friends\" can be",
            "cleaned_prediction": "amis",
            "gt": "amis"
        },
        {
            "input_prompt": "Input: concerns\nOutput:",
            "test_query": "concerns",
            "prediction": "inquietudes\ntranslation: worries\ndefinition: a",
            "cleaned_prediction": "inquietudes",
            "gt": "pr\u00e9occupations"
        },
        {
            "input_prompt": "Input: hey\nOutput:",
            "test_query": "hey",
            "prediction": "entr\u00e9e\n\ninput: hello\noutput: bonjour",
            "cleaned_prediction": "entr\u00e9e",
            "gt": "salut"
        },
        {
            "input_prompt": "Input: thought\nOutput:",
            "test_query": "thought",
            "prediction": "pens\u00e9e\ntranslation: idea\ndefinition: an entity",
            "cleaned_prediction": "pens\u00e9e",
            "gt": "pens\u00e9e"
        },
        {
            "input_prompt": "Input: gardens\nOutput:",
            "test_query": "gardens",
            "prediction": "jardins\ntranslation: gardens\ndefinition: a",
            "cleaned_prediction": "jardins",
            "gt": "jardins"
        },
        {
            "input_prompt": "Input: creek\nOutput:",
            "test_query": "creek",
            "prediction": "r\u00eak\ninput: creek\noutput: r",
            "cleaned_prediction": "r\u00eak",
            "gt": "ruisseau"
        },
        {
            "input_prompt": "Input: path\nOutput:",
            "test_query": "path",
            "prediction": "entr\u00e9es\noutput: sorties\noutput: erre",
            "cleaned_prediction": "entr\u00e9es",
            "gt": "chemin"
        },
        {
            "input_prompt": "Input: requirement\nOutput:",
            "test_query": "requirement",
            "prediction": "exigence\nthe word \"exigence\" in",
            "cleaned_prediction": "exigence",
            "gt": "exigence"
        },
        {
            "input_prompt": "Input: walk\nOutput:",
            "test_query": "walk",
            "prediction": "marche\ntranslation: walk\nsynonyms: stroll",
            "cleaned_prediction": "marche",
            "gt": "marcher"
        },
        {
            "input_prompt": "Input: poems\nOutput:",
            "test_query": "poems",
            "prediction": "po\u00e8mes\nfrench translation of the word \"poems",
            "cleaned_prediction": "po\u00e8mes",
            "gt": "po\u00e8mes"
        },
        {
            "input_prompt": "Input: orchestra\nOutput:",
            "test_query": "orchestra",
            "prediction": "orchestre\ncorrected output: orchestra\n\nthe model",
            "cleaned_prediction": "orchestre",
            "gt": "orchestre"
        },
        {
            "input_prompt": "Input: tenth\nOutput:",
            "test_query": "tenth",
            "prediction": "dixi\u00e8me\n\ninput: first\noutput: premier",
            "cleaned_prediction": "dixi\u00e8me",
            "gt": "dixi\u00e8me"
        },
        {
            "input_prompt": "Input: papers\nOutput:",
            "test_query": "papers",
            "prediction": "papiers\nexplanation: the word \"papers\"",
            "cleaned_prediction": "papiers",
            "gt": "papiers"
        },
        {
            "input_prompt": "Input: hunt\nOutput:",
            "test_query": "hunt",
            "prediction": "chasse\nfrench word: chasse\ntranslation:",
            "cleaned_prediction": "chasse",
            "gt": "chasser"
        },
        {
            "input_prompt": "Input: planets\nOutput:",
            "test_query": "planets",
            "prediction": "plan\u00e8te\n\nerror: error in language model, please",
            "cleaned_prediction": "plan\u00e8te",
            "gt": "plan\u00e8tes"
        },
        {
            "input_prompt": "Input: handled\nOutput:",
            "test_query": "handled",
            "prediction": "g\u00e9r\u00e9\ntranslation: managed\ndefinition: to handle",
            "cleaned_prediction": "g\u00e9r\u00e9",
            "gt": "g\u00e9r\u00e9"
        },
        {
            "input_prompt": "Input: picture\nOutput:",
            "test_query": "picture",
            "prediction": "photo\nchange one letter from \"picture\" to get",
            "cleaned_prediction": "photo",
            "gt": "image"
        },
        {
            "input_prompt": "Input: gold\nOutput:",
            "test_query": "gold",
            "prediction": "or\nexplanation: the word \"gold\" spelled backwards",
            "cleaned_prediction": "or",
            "gt": "or"
        },
        {
            "input_prompt": "Input: husband\nOutput:",
            "test_query": "husband",
            "prediction": "mari\u00e9e\n\ninput: wife\noutput: mari\u00e9",
            "cleaned_prediction": "mari\u00e9e",
            "gt": "mari"
        },
        {
            "input_prompt": "Input: looking\nOutput:",
            "test_query": "looking",
            "prediction": "regard\ndefinition: to direct the attention of one's",
            "cleaned_prediction": "regard",
            "gt": "regardant"
        },
        {
            "input_prompt": "Input: argentina\nOutput:",
            "test_query": "argentina",
            "prediction": "argentine\nspanish (argentina) is a standardized form of",
            "cleaned_prediction": "argentine",
            "gt": "argentine"
        },
        {
            "input_prompt": "Input: symbols\nOutput:",
            "test_query": "symbols",
            "prediction": "symboles\noutput: symbols\n\ninput: symbols",
            "cleaned_prediction": "symboles",
            "gt": "symboles"
        },
        {
            "input_prompt": "Input: taiwan\nOutput:",
            "test_query": "taiwan",
            "prediction": "ta\u00efwan\ninput: taiwan\noutput:",
            "cleaned_prediction": "ta\u00efwan",
            "gt": "Ta\u00efwan"
        },
        {
            "input_prompt": "Input: likewise\nOutput:",
            "test_query": "likewise",
            "prediction": "de m\u00eame\ninput: alike\noutput: de m\u00eame",
            "cleaned_prediction": "de m\u00eame",
            "gt": "de m\u00eame"
        },
        {
            "input_prompt": "Input: highly\nOutput:",
            "test_query": "highly",
            "prediction": "hautement\ntranslation: highly\nsynonyms for \"",
            "cleaned_prediction": "hautement",
            "gt": "hautement"
        },
        {
            "input_prompt": "Input: kings\nOutput:",
            "test_query": "kings",
            "prediction": "rois\ninput: queens\noutput: reines",
            "cleaned_prediction": "rois",
            "gt": "rois"
        },
        {
            "input_prompt": "Input: fundamental\nOutput:",
            "test_query": "fundamental",
            "prediction": "fondamental\nthe term \"fondamental\" is",
            "cleaned_prediction": "fondamental",
            "gt": "fondamental"
        },
        {
            "input_prompt": "Input: monastery\nOutput:",
            "test_query": "monastery",
            "prediction": "monasteries\ninput: libraries\noutput: library",
            "cleaned_prediction": "monasteries",
            "gt": "monast\u00e8re"
        },
        {
            "input_prompt": "Input: sessions\nOutput:",
            "test_query": "sessions",
            "prediction": "s\u00e9ances\ntranslation: sessions\ndefinition: (n",
            "cleaned_prediction": "s\u00e9ances",
            "gt": "s\u00e9ances"
        },
        {
            "input_prompt": "Input: become\nOutput:",
            "test_query": "become",
            "prediction": "devenir\ninput: love\noutput: amour",
            "cleaned_prediction": "devenir",
            "gt": "devenir"
        },
        {
            "input_prompt": "Input: movement\nOutput:",
            "test_query": "movement",
            "prediction": "mouvement\ntransliteration: mouvement\np",
            "cleaned_prediction": "mouvement",
            "gt": "mouvement"
        },
        {
            "input_prompt": "Input: springs\nOutput:",
            "test_query": "springs",
            "prediction": "ressorts\ntranslated by: google translate\ninput",
            "cleaned_prediction": "ressorts",
            "gt": "ressorts"
        },
        {
            "input_prompt": "Input: dark\nOutput:",
            "test_query": "dark",
            "prediction": "sombre\nsynonyms: dismal, gloomy,",
            "cleaned_prediction": "sombre",
            "gt": "sombre"
        },
        {
            "input_prompt": "Input: bet\nOutput:",
            "test_query": "bet",
            "prediction": "mise\n\ninput: bets\noutput: mises",
            "cleaned_prediction": "mise",
            "gt": "pari"
        },
        {
            "input_prompt": "Input: painters\nOutput:",
            "test_query": "painters",
            "prediction": "peintres\nexplanation: the given string is \"",
            "cleaned_prediction": "peintres",
            "gt": "peintres"
        },
        {
            "input_prompt": "Input: stones\nOutput:",
            "test_query": "stones",
            "prediction": "cailloux\n\ninput: houses\noutput: mais",
            "cleaned_prediction": "cailloux",
            "gt": "pierres"
        },
        {
            "input_prompt": "Input: frankfurt\nOutput:",
            "test_query": "frankfurt",
            "prediction": "francfort\noutput: francfort\noutput: franc",
            "cleaned_prediction": "francfort",
            "gt": "Francfort"
        },
        {
            "input_prompt": "Input: returns\nOutput:",
            "test_query": "returns",
            "prediction": "retours\ntransliteration: ret\u028a\ufffd",
            "cleaned_prediction": "retours",
            "gt": "retours"
        },
        {
            "input_prompt": "Input: carpenter\nOutput:",
            "test_query": "carpenter",
            "prediction": "charpentier\n\ninput: engineer\noutput: ing",
            "cleaned_prediction": "charpentier",
            "gt": "charpentier"
        },
        {
            "input_prompt": "Input: winner\nOutput:",
            "test_query": "winner",
            "prediction": "gagnant\ntranslation: winner\nsynonyms:",
            "cleaned_prediction": "gagnant",
            "gt": "gagnant"
        },
        {
            "input_prompt": "Input: reach\nOutput:",
            "test_query": "reach",
            "prediction": "acc\u00e8s\ntranslation: access\nsynonyms: access",
            "cleaned_prediction": "acc\u00e8s",
            "gt": "atteindre"
        },
        {
            "input_prompt": "Input: healthy\nOutput:",
            "test_query": "healthy",
            "prediction": "sain\n\nexplanation: the word \"healthy\" spelled",
            "cleaned_prediction": "sain",
            "gt": "sain"
        },
        {
            "input_prompt": "Input: march\nOutput:",
            "test_query": "march",
            "prediction": "mars\ninput: hello\noutput: holo",
            "cleaned_prediction": "mars",
            "gt": "mars"
        },
        {
            "input_prompt": "Input: assessed\nOutput:",
            "test_query": "assessed",
            "prediction": "\u00e9valu\u00e9\ninput: assess\noutput: \u00e9",
            "cleaned_prediction": "\u00e9valu\u00e9",
            "gt": "\u00e9valu\u00e9"
        },
        {
            "input_prompt": "Input: story\nOutput:",
            "test_query": "story",
            "prediction": "histoire\ndefinition: (noun) a sequence of events",
            "cleaned_prediction": "histoire",
            "gt": "histoire"
        },
        {
            "input_prompt": "Input: fifteen\nOutput:",
            "test_query": "fifteen",
            "prediction": "quinze\n\nexplanation: \nthe word \"f",
            "cleaned_prediction": "quinze",
            "gt": "quinze"
        },
        {
            "input_prompt": "Input: elements\nOutput:",
            "test_query": "elements",
            "prediction": "\u00e9l\u00e9ments\ntransliteration: \u00e9l\u00e9m\u00e9nts",
            "cleaned_prediction": "\u00e9l\u00e9ments",
            "gt": "\u00e9l\u00e9ments"
        },
        {
            "input_prompt": "Input: problematic\nOutput:",
            "test_query": "problematic",
            "prediction": "probl\u00e9matique\ntransliteration: probl\u00e9",
            "cleaned_prediction": "probl\u00e9matique",
            "gt": "probl\u00e9matique"
        },
        {
            "input_prompt": "Input: rebels\nOutput:",
            "test_query": "rebels",
            "prediction": "rebel\ninput: rebel\noutput: rebel\ninput",
            "cleaned_prediction": "rebel",
            "gt": "rebelles"
        },
        {
            "input_prompt": "Input: talk\nOutput:",
            "test_query": "talk",
            "prediction": "discours\ndefinition: spoken language\nsynonyms:",
            "cleaned_prediction": "discours",
            "gt": "parler"
        },
        {
            "input_prompt": "Input: restoration\nOutput:",
            "test_query": "restoration",
            "prediction": "restauration\nfeedback: the correct spelling is restoration.",
            "cleaned_prediction": "restauration",
            "gt": "restauration"
        },
        {
            "input_prompt": "Input: review\nOutput:",
            "test_query": "review",
            "prediction": "critique\nthe word \"critique\" can be used",
            "cleaned_prediction": "critique",
            "gt": "r\u00e9vision"
        },
        {
            "input_prompt": "Input: adequate\nOutput:",
            "test_query": "adequate",
            "prediction": "ad\u00e9quate\n\ninput: inadequate\noutput: in",
            "cleaned_prediction": "ad\u00e9quate",
            "gt": "ad\u00e9quat"
        },
        {
            "input_prompt": "Input: biblical\nOutput:",
            "test_query": "biblical",
            "prediction": "biblically\ndefinition: in accordance with the bible",
            "cleaned_prediction": "biblically",
            "gt": "biblique"
        },
        {
            "input_prompt": "Input: verifiable\nOutput:",
            "test_query": "verifiable",
            "prediction": "v\u00e9rifiable\ndomain: math\nrelated concepts: ver",
            "cleaned_prediction": "v\u00e9rifiable",
            "gt": "v\u00e9rifiable"
        },
        {
            "input_prompt": "Input: tobacco\nOutput:",
            "test_query": "tobacco",
            "prediction": "tabac\nconjugation of \"tabac\"",
            "cleaned_prediction": "tabac",
            "gt": "tabac"
        },
        {
            "input_prompt": "Input: austria\nOutput:",
            "test_query": "austria",
            "prediction": "autriche\ninput: belgium\noutput:",
            "cleaned_prediction": "autriche",
            "gt": "autriche"
        },
        {
            "input_prompt": "Input: roller\nOutput:",
            "test_query": "roller",
            "prediction": "rouleur\ninput: roller\noutput: rouleur",
            "cleaned_prediction": "rouleur",
            "gt": "rouleau"
        },
        {
            "input_prompt": "Input: journey\nOutput:",
            "test_query": "journey",
            "prediction": "parcours\ntranslation: journey\ndefinition: a series",
            "cleaned_prediction": "parcours",
            "gt": "voyage"
        },
        {
            "input_prompt": "Input: big\nOutput:",
            "test_query": "big",
            "prediction": "grand\ninput: cheetah\noutput: speedy",
            "cleaned_prediction": "grand",
            "gt": "grand"
        },
        {
            "input_prompt": "Input: drummer\nOutput:",
            "test_query": "drummer",
            "prediction": "batteur\nsynonyms: drummer, percussionist",
            "cleaned_prediction": "batteur",
            "gt": "batteur"
        },
        {
            "input_prompt": "Input: explained\nOutput:",
            "test_query": "explained",
            "prediction": "expliqu\u00e9\ntransliteration: (french)\nexplanation",
            "cleaned_prediction": "expliqu\u00e9",
            "gt": "expliqu\u00e9"
        },
        {
            "input_prompt": "Input: christianity\nOutput:",
            "test_query": "christianity",
            "prediction": "christianisme\ntranslation: christianity\nsynonyms: faith",
            "cleaned_prediction": "christianisme",
            "gt": "christianisme"
        },
        {
            "input_prompt": "Input: ministers\nOutput:",
            "test_query": "ministers",
            "prediction": "ministres\ntranslation: ministers\nsynonyms to minist",
            "cleaned_prediction": "ministres",
            "gt": "ministres"
        },
        {
            "input_prompt": "Input: difficulties\nOutput:",
            "test_query": "difficulties",
            "prediction": "difficult\nthe spelling of \"difficulties\" is",
            "cleaned_prediction": "difficult",
            "gt": "difficult\u00e9s"
        },
        {
            "input_prompt": "Input: template\nOutput:",
            "test_query": "template",
            "prediction": "mod\u00e8le\nlanguage: french\ntree id: 112",
            "cleaned_prediction": "mod\u00e8le",
            "gt": "mod\u00e8le"
        },
        {
            "input_prompt": "Input: ethnicity\nOutput:",
            "test_query": "ethnicity",
            "prediction": "origine\noutput: origine\noutput: orig",
            "cleaned_prediction": "origine",
            "gt": "ethnicit\u00e9"
        },
        {
            "input_prompt": "Input: dependent\nOutput:",
            "test_query": "dependent",
            "prediction": "d\u00e9pendant\nexamples: dependent, independent\n#",
            "cleaned_prediction": "d\u00e9pendant",
            "gt": "d\u00e9pendant"
        },
        {
            "input_prompt": "Input: charged\nOutput:",
            "test_query": "charged",
            "prediction": "charg\u00e9\nlang: fr\ntranslation: charg\u00e9",
            "cleaned_prediction": "charg\u00e9",
            "gt": "charg\u00e9"
        },
        {
            "input_prompt": "Input: heights\nOutput:",
            "test_query": "heights",
            "prediction": "hauteurs\n```\ndef heights_to_meters(height",
            "cleaned_prediction": "hauteurs",
            "gt": "hauteurs"
        },
        {
            "input_prompt": "Input: correctly\nOutput:",
            "test_query": "correctly",
            "prediction": "correct\nexplanation: the input string \"correctly\"",
            "cleaned_prediction": "correct",
            "gt": "correctement"
        },
        {
            "input_prompt": "Input: bottom\nOutput:",
            "test_query": "bottom",
            "prediction": "fond de page\n\ninput: bottom up\noutput:",
            "cleaned_prediction": "fond de page",
            "gt": "fond"
        },
        {
            "input_prompt": "Input: assumption\nOutput:",
            "test_query": "assumption",
            "prediction": "hypoth\u00e8se\ntranslation: assumption\ndefinition: an",
            "cleaned_prediction": "hypoth\u00e8se",
            "gt": "supposition"
        },
        {
            "input_prompt": "Input: singers\nOutput:",
            "test_query": "singers",
            "prediction": "chanteurs\ntranslation: singers\ndefinition: a",
            "cleaned_prediction": "chanteurs",
            "gt": "chanteurs"
        },
        {
            "input_prompt": "Input: end\nOutput:",
            "test_query": "end",
            "prediction": "fin\ninput: abc\noutput: cab\n\ndef",
            "cleaned_prediction": "fin",
            "gt": "fin"
        },
        {
            "input_prompt": "Input: gross\nOutput:",
            "test_query": "gross",
            "prediction": "bruta\ninput: net\noutput: l\u00edqu",
            "cleaned_prediction": "bruta",
            "gt": "d\u00e9go\u00fbtant"
        },
        {
            "input_prompt": "Input: spoken\nOutput:",
            "test_query": "spoken",
            "prediction": "parlance\nthe term \"parlance\" has",
            "cleaned_prediction": "parlance",
            "gt": "parl\u00e9"
        },
        {
            "input_prompt": "Input: several\nOutput:",
            "test_query": "several",
            "prediction": "entr\u00e9es\nexplanation: the word \"entr\u00e9es\"",
            "cleaned_prediction": "entr\u00e9es",
            "gt": "plusieurs"
        },
        {
            "input_prompt": "Input: voted\nOutput:",
            "test_query": "voted",
            "prediction": "vot\u00e9\ntransliteration: v\u00f3te",
            "cleaned_prediction": "vot\u00e9",
            "gt": "vot\u00e9"
        },
        {
            "input_prompt": "Input: winds\nOutput:",
            "test_query": "winds",
            "prediction": "vents\nspelling: correct\nhint: change one",
            "cleaned_prediction": "vents",
            "gt": "vents"
        },
        {
            "input_prompt": "Input: smooth\nOutput:",
            "test_query": "smooth",
            "prediction": "lisse\nexamples: smooth - \u2192 lisse -",
            "cleaned_prediction": "lisse",
            "gt": "lisse"
        },
        {
            "input_prompt": "Input: reserved\nOutput:",
            "test_query": "reserved",
            "prediction": "r\u00e9serv\u00e9\ntranslation: reserved\nnumber of letters",
            "cleaned_prediction": "r\u00e9serv\u00e9",
            "gt": "r\u00e9serv\u00e9"
        },
        {
            "input_prompt": "Input: ordinary\nOutput:",
            "test_query": "ordinary",
            "prediction": "ordinaire\ntransliteration: \u0254\ufffd",
            "cleaned_prediction": "ordinaire",
            "gt": "ordinaire"
        },
        {
            "input_prompt": "Input: sand\nOutput:",
            "test_query": "sand",
            "prediction": "s-a-n-d\nexplanation: the given string is",
            "cleaned_prediction": "s-a-n-d",
            "gt": "sable"
        },
        {
            "input_prompt": "Input: sky\nOutput:",
            "test_query": "sky",
            "prediction": "ciel\ninput: clouds\noutput: nuages",
            "cleaned_prediction": "ciel",
            "gt": "ciel"
        },
        {
            "input_prompt": "Input: ruler\nOutput:",
            "test_query": "ruler",
            "prediction": "r\u00e8gle\ntranslation: rule\ndefinition: a straight",
            "cleaned_prediction": "r\u00e8gle",
            "gt": "r\u00e8gle"
        },
        {
            "input_prompt": "Input: volleyball\nOutput:",
            "test_query": "volleyball",
            "prediction": "volley-ball\n\nexplanation: the word \"volleyball",
            "cleaned_prediction": "volley-ball",
            "gt": "volley-ball"
        },
        {
            "input_prompt": "Input: accepted\nOutput:",
            "test_query": "accepted",
            "prediction": "entr\u00e9es\ninput: input\noutput: entr\u00e9es",
            "cleaned_prediction": "entr\u00e9es",
            "gt": "accept\u00e9"
        },
        {
            "input_prompt": "Input: tigers\nOutput:",
            "test_query": "tigers",
            "prediction": "tigres\ntranslation: tigers \u2192 tig",
            "cleaned_prediction": "tigres",
            "gt": "tigres"
        },
        {
            "input_prompt": "Input: surrender\nOutput:",
            "test_query": "surrender",
            "prediction": "soumission\ntranslation: surrender\nsynonyms: capit",
            "cleaned_prediction": "soumission",
            "gt": "capituler"
        },
        {
            "input_prompt": "Input: dogs\nOutput:",
            "test_query": "dogs",
            "prediction": "chiens\n\ntranslation:\n- dog -> chien",
            "cleaned_prediction": "chiens",
            "gt": "chiens"
        },
        {
            "input_prompt": "Input: turn\nOutput:",
            "test_query": "turn",
            "prediction": "tourn\ninput: tour\noutput: tourn",
            "cleaned_prediction": "tourn",
            "gt": "tourner"
        },
        {
            "input_prompt": "Input: overlaps\nOutput:",
            "test_query": "overlaps",
            "prediction": "chevauchements\ntranslation: overlaps\ndefinition:",
            "cleaned_prediction": "chevauchements",
            "gt": "chevauchements"
        },
        {
            "input_prompt": "Input: forest\nOutput:",
            "test_query": "forest",
            "prediction": "for\u00eat\n\nthe function should convert a given string into",
            "cleaned_prediction": "for\u00eat",
            "gt": "for\u00eat"
        },
        {
            "input_prompt": "Input: anniversary\nOutput:",
            "test_query": "anniversary",
            "prediction": "anniversaire\nfrench translation of the word \"ann",
            "cleaned_prediction": "anniversaire",
            "gt": "anniversaire"
        },
        {
            "input_prompt": "Input: japanese\nOutput:",
            "test_query": "japanese",
            "prediction": "japonais\nsynonyms: japonais\ndefinition:",
            "cleaned_prediction": "japonais",
            "gt": "japonais"
        },
        {
            "input_prompt": "Input: tree\nOutput:",
            "test_query": "tree",
            "prediction": "arbre\n\nthis is a simple translation of the input",
            "cleaned_prediction": "arbre",
            "gt": "arbre"
        },
        {
            "input_prompt": "Input: abstract\nOutput:",
            "test_query": "abstract",
            "prediction": "abstrait\ntranslation: abstract\nsynonyms:",
            "cleaned_prediction": "abstrait",
            "gt": "abstrait"
        },
        {
            "input_prompt": "Input: discuss\nOutput:",
            "test_query": "discuss",
            "prediction": "discus\nincorrect spelling of word: discus",
            "cleaned_prediction": "discus",
            "gt": "discuter"
        },
        {
            "input_prompt": "Input: rear\nOutput:",
            "test_query": "rear",
            "prediction": "arre\n\ninput: hello\noutput: olleh",
            "cleaned_prediction": "arre",
            "gt": "arri\u00e8re"
        },
        {
            "input_prompt": "Input: penalties\nOutput:",
            "test_query": "penalties",
            "prediction": "p\u00e9nalit\u00e9s\ntranslated by external translators\npen",
            "cleaned_prediction": "p\u00e9nalit\u00e9s",
            "gt": "p\u00e9nalit\u00e9s"
        },
        {
            "input_prompt": "Input: elementary\nOutput:",
            "test_query": "elementary",
            "prediction": "\u00e9l\u00e9mentaire\ntranslation: elementary\nsample sentence:",
            "cleaned_prediction": "\u00e9l\u00e9mentaire",
            "gt": "\u00e9l\u00e9mentaire"
        },
        {
            "input_prompt": "Input: emphasis\nOutput:",
            "test_query": "emphasis",
            "prediction": "accent\nrelated words: stress\ndefinition: a feature",
            "cleaned_prediction": "accent",
            "gt": "accentuation"
        },
        {
            "input_prompt": "Input: products\nOutput:",
            "test_query": "products",
            "prediction": "produits\ntranslation: products\ndefinition: goods or services",
            "cleaned_prediction": "produits",
            "gt": "produits"
        },
        {
            "input_prompt": "Input: apply\nOutput:",
            "test_query": "apply",
            "prediction": "appliquer\ntranslation: to apply\nsynonyms:",
            "cleaned_prediction": "appliquer",
            "gt": "appliquer"
        },
        {
            "input_prompt": "Input: flag\nOutput:",
            "test_query": "flag",
            "prediction": "drapeau\ntranslation: flag\nsynonyms:",
            "cleaned_prediction": "drapeau",
            "gt": "drapeau"
        },
        {
            "input_prompt": "Input: tan\nOutput:",
            "test_query": "tan",
            "prediction": "tanh\ndescription: this function computes the hyperb",
            "cleaned_prediction": "tanh",
            "gt": "bronzage"
        },
        {
            "input_prompt": "Input: defenders\nOutput:",
            "test_query": "defenders",
            "prediction": "d\u00e9fenseurs\ntranslation: defenders\nsynonyms:",
            "cleaned_prediction": "d\u00e9fenseurs",
            "gt": "d\u00e9fenseurs"
        },
        {
            "input_prompt": "Input: participated\nOutput:",
            "test_query": "participated",
            "prediction": "particip\u00e9\ntranslation: participated\nsynonyms for particip",
            "cleaned_prediction": "particip\u00e9",
            "gt": "particip\u00e9"
        },
        {
            "input_prompt": "Input: recently\nOutput:",
            "test_query": "recently",
            "prediction": "r\u00e9cemment\nlanguage model: french\nprediction score",
            "cleaned_prediction": "r\u00e9cemment",
            "gt": "r\u00e9cemment"
        },
        {
            "input_prompt": "Input: brooks\nOutput:",
            "test_query": "brooks",
            "prediction": "brook\nexplanation: the word \"brook\" is",
            "cleaned_prediction": "brook",
            "gt": "ruisseaux"
        },
        {
            "input_prompt": "Input: scene\nOutput:",
            "test_query": "scene",
            "prediction": "sc\u00e8ne\nlanguage: french\ngrammar: noun",
            "cleaned_prediction": "sc\u00e8ne",
            "gt": "sc\u00e8ne"
        },
        {
            "input_prompt": "Input: tools\nOutput:",
            "test_query": "tools",
            "prediction": "outils\ntranslation: tools\ndefinition: a tool",
            "cleaned_prediction": "outils",
            "gt": "outils"
        },
        {
            "input_prompt": "Input: experiments\nOutput:",
            "test_query": "experiments",
            "prediction": "exp\ninput: experiment\noutput: exp\ninput",
            "cleaned_prediction": "exp",
            "gt": "exp\u00e9riences"
        },
        {
            "input_prompt": "Input: eleven\nOutput:",
            "test_query": "eleven",
            "prediction": "onze\ndutch translation of the number eleven.\n\nexplanation",
            "cleaned_prediction": "onze",
            "gt": "onze"
        },
        {
            "input_prompt": "Input: progressive\nOutput:",
            "test_query": "progressive",
            "prediction": "progressif\nlanguage: french\nexplanation: the word",
            "cleaned_prediction": "progressif",
            "gt": "progressif"
        },
        {
            "input_prompt": "Input: line\nOutput:",
            "test_query": "line",
            "prediction": "ligne\n\nexplanation\nthe input string is \"line\"",
            "cleaned_prediction": "ligne",
            "gt": "ligne"
        },
        {
            "input_prompt": "Input: parishes\nOutput:",
            "test_query": "parishes",
            "prediction": "paroisses\ntranslation: parishes\nexplanation:",
            "cleaned_prediction": "paroisses",
            "gt": "paroisses"
        },
        {
            "input_prompt": "Input: partial\nOutput:",
            "test_query": "partial",
            "prediction": "partiel\nerror: the input \"partiel\"",
            "cleaned_prediction": "partiel",
            "gt": "partiel"
        },
        {
            "input_prompt": "Input: yeah\nOutput:",
            "test_query": "yeah",
            "prediction": "oui\n\ninput: yes\noutput: oui\n\ninput",
            "cleaned_prediction": "oui",
            "gt": "ouais"
        },
        {
            "input_prompt": "Input: bosnia\nOutput:",
            "test_query": "bosnia",
            "prediction": "bosnie\nthe phonetic pronunciation of \"bos",
            "cleaned_prediction": "bosnie",
            "gt": "Bosnie"
        },
        {
            "input_prompt": "Input: king\nOutput:",
            "test_query": "king",
            "prediction": "roi\nexplanation: the word \"king\" spelled backwards",
            "cleaned_prediction": "roi",
            "gt": "roi"
        },
        {
            "input_prompt": "Input: loves\nOutput:",
            "test_query": "loves",
            "prediction": "aime\nexplanation: the string \"loves\" spelled",
            "cleaned_prediction": "aime",
            "gt": "aime"
        },
        {
            "input_prompt": "Input: norwegian\nOutput:",
            "test_query": "norwegian",
            "prediction": "norv\u00e9gien\ntranslation: norwegian\nsearch for",
            "cleaned_prediction": "norv\u00e9gien",
            "gt": "norv\u00e9gien"
        },
        {
            "input_prompt": "Input: hanging\nOutput:",
            "test_query": "hanging",
            "prediction": "suspendu\ntranslation: hanging\nsynonyms: suspended",
            "cleaned_prediction": "suspendu",
            "gt": "pendaison"
        },
        {
            "input_prompt": "Input: civilization\nOutput:",
            "test_query": "civilization",
            "prediction": "civilisation\ninput: civilize\noutput: civil",
            "cleaned_prediction": "civilisation",
            "gt": "civilisation"
        },
        {
            "input_prompt": "Input: editorial\nOutput:",
            "test_query": "editorial",
            "prediction": "\u00e9ditorial\ninput: edit\noutput: \u00e9",
            "cleaned_prediction": "\u00e9ditorial",
            "gt": "\u00e9ditorial"
        },
        {
            "input_prompt": "Input: volunteers\nOutput:",
            "test_query": "volunteers",
            "prediction": "b\u00e9n\u00e9voles\ntranslation: volunteers\ndefinition: a",
            "cleaned_prediction": "b\u00e9n\u00e9voles",
            "gt": "b\u00e9n\u00e9voles"
        },
        {
            "input_prompt": "Input: hotels\nOutput:",
            "test_query": "hotels",
            "prediction": "h-o-t-e-l-s\ninput: python",
            "cleaned_prediction": "h-o-t-e-l-s",
            "gt": "h\u00f4tels"
        },
        {
            "input_prompt": "Input: van\nOutput:",
            "test_query": "van",
            "prediction": "camion\ntranslation: truck\nexample: quiero",
            "cleaned_prediction": "camion",
            "gt": "fourgonnette"
        },
        {
            "input_prompt": "Input: spelling\nOutput:",
            "test_query": "spelling",
            "prediction": "orthographe\ninput: spelling\noutput:",
            "cleaned_prediction": "orthographe",
            "gt": "orthographe"
        },
        {
            "input_prompt": "Input: bombs\nOutput:",
            "test_query": "bombs",
            "prediction": "bombes\n\nexplanation: the function takes a string of",
            "cleaned_prediction": "bombes",
            "gt": "bombes"
        },
        {
            "input_prompt": "Input: searches\nOutput:",
            "test_query": "searches",
            "prediction": "recherches\nlanguage model: french\nlanguage code:",
            "cleaned_prediction": "recherches",
            "gt": "recherches"
        },
        {
            "input_prompt": "Input: twentieth\nOutput:",
            "test_query": "twentieth",
            "prediction": "vingti\u00e8me\n\ninput: twelfth\noutput",
            "cleaned_prediction": "vingti\u00e8me",
            "gt": "vingti\u00e8me"
        },
        {
            "input_prompt": "Input: this\nOutput:",
            "test_query": "this",
            "prediction": "entr\u00e9e\ntranslation: entrance\ndefinition: the entrance",
            "cleaned_prediction": "entr\u00e9e",
            "gt": "ceci"
        },
        {
            "input_prompt": "Input: prevented\nOutput:",
            "test_query": "prevented",
            "prediction": "emp\u00each\u00e9\nexamples: - i was prevented from",
            "cleaned_prediction": "emp\u00each\u00e9",
            "gt": "emp\u00each\u00e9"
        },
        {
            "input_prompt": "Input: retreat\nOutput:",
            "test_query": "retreat",
            "prediction": "retraite\noutput for given input is not correct",
            "cleaned_prediction": "retraite",
            "gt": "retraite"
        },
        {
            "input_prompt": "Input: astronomy\nOutput:",
            "test_query": "astronomy",
            "prediction": "astronomie\ntranslation: astronomy\nsynonyms: cosm",
            "cleaned_prediction": "astronomie",
            "gt": "astronomie"
        },
        {
            "input_prompt": "Input: championship\nOutput:",
            "test_query": "championship",
            "prediction": "champion\ninput: championship\noutput: champion\ninput",
            "cleaned_prediction": "champion",
            "gt": "championnat"
        },
        {
            "input_prompt": "Input: planned\nOutput:",
            "test_query": "planned",
            "prediction": "pr\u00e9vu\ntranslation: planned\nsynonyms for \"",
            "cleaned_prediction": "pr\u00e9vu",
            "gt": "pr\u00e9vu"
        },
        {
            "input_prompt": "Input: battalion\nOutput:",
            "test_query": "battalion",
            "prediction": "bataillon\ntranslation for battalion\na military unit",
            "cleaned_prediction": "bataillon",
            "gt": "bataillon"
        },
        {
            "input_prompt": "Input: medal\nOutput:",
            "test_query": "medal",
            "prediction": "m\u00e9dal\naccents are an integral part of the",
            "cleaned_prediction": "m\u00e9dal",
            "gt": "m\u00e9daille"
        },
        {
            "input_prompt": "Input: serve\nOutput:",
            "test_query": "serve",
            "prediction": "servir\ntranslation: to serve\ndefinition: to",
            "cleaned_prediction": "servir",
            "gt": "servir"
        },
        {
            "input_prompt": "Input: lives\nOutput:",
            "test_query": "lives",
            "prediction": "vies\nexplanation\nthe task is to remove all",
            "cleaned_prediction": "vies",
            "gt": "vies"
        },
        {
            "input_prompt": "Input: cycling\nOutput:",
            "test_query": "cycling",
            "prediction": "cyclisme\nfrench translation for cycling\nenglish: cycling",
            "cleaned_prediction": "cyclisme",
            "gt": "cyclisme"
        },
        {
            "input_prompt": "Input: departure\nOutput:",
            "test_query": "departure",
            "prediction": "d\u00e9part\ninput: arrival\noutput: arriv\u00e9e",
            "cleaned_prediction": "d\u00e9part",
            "gt": "d\u00e9part"
        },
        {
            "input_prompt": "Input: consistent\nOutput:",
            "test_query": "consistent",
            "prediction": "cohensent\nexplanation: the input string \"consistent",
            "cleaned_prediction": "cohensent",
            "gt": "coh\u00e9rent"
        },
        {
            "input_prompt": "Input: temporary\nOutput:",
            "test_query": "temporary",
            "prediction": "temporaire\nlanguage: en\ntranslation: temporary",
            "cleaned_prediction": "temporaire",
            "gt": "temporaire"
        },
        {
            "input_prompt": "Input: greece\nOutput:",
            "test_query": "greece",
            "prediction": "gr\u00e8ce\ninput: turkey\noutput: tur",
            "cleaned_prediction": "gr\u00e8ce",
            "gt": "gr\u00e8ce"
        },
        {
            "input_prompt": "Input: conquest\nOutput:",
            "test_query": "conquest",
            "prediction": "conqu\u00eate\nfrench word for \"conquest\".\ninput",
            "cleaned_prediction": "conqu\u00eate",
            "gt": "conqu\u00eate"
        },
        {
            "input_prompt": "Input: convince\nOutput:",
            "test_query": "convince",
            "prediction": "convaincre\nrelevance: 0.9",
            "cleaned_prediction": "convaincre",
            "gt": "convaincre"
        },
        {
            "input_prompt": "Input: ukrainian\nOutput:",
            "test_query": "ukrainian",
            "prediction": "ukrainian\ntranslation: ukrainian",
            "cleaned_prediction": "ukrainian",
            "gt": "ukrainien"
        },
        {
            "input_prompt": "Input: lie\nOutput:",
            "test_query": "lie",
            "prediction": "mensonge\ntranslation: lie\nsynonyms:",
            "cleaned_prediction": "mensonge",
            "gt": "mensonge"
        },
        {
            "input_prompt": "Input: meetings\nOutput:",
            "test_query": "meetings",
            "prediction": "r\u00e9unions\ntranslation: meetings\ndefinition: a",
            "cleaned_prediction": "r\u00e9unions",
            "gt": "r\u00e9unions"
        },
        {
            "input_prompt": "Input: stretch\nOutput:",
            "test_query": "stretch",
            "prediction": "\u00e9tirer\nsynonyms: extend, stretch,",
            "cleaned_prediction": "\u00e9tirer",
            "gt": "\u00e9tirer"
        },
        {
            "input_prompt": "Input: scholar\nOutput:",
            "test_query": "scholar",
            "prediction": "savant\ndefinition: a person who has a great",
            "cleaned_prediction": "savant",
            "gt": "\u00e9rudit"
        },
        {
            "input_prompt": "Input: proved\nOutput:",
            "test_query": "proved",
            "prediction": "prouved\ninput: code\noutput: c",
            "cleaned_prediction": "prouved",
            "gt": "prouv\u00e9"
        },
        {
            "input_prompt": "Input: cited\nOutput:",
            "test_query": "cited",
            "prediction": "cit\u00e9\nsynonyms: cited, referenced, mentioned",
            "cleaned_prediction": "cit\u00e9",
            "gt": "cit\u00e9"
        },
        {
            "input_prompt": "Input: covered\nOutput:",
            "test_query": "covered",
            "prediction": "couvert\ninput: covered\noutput: couvert",
            "cleaned_prediction": "couvert",
            "gt": "couvert"
        },
        {
            "input_prompt": "Input: bag\nOutput:",
            "test_query": "bag",
            "prediction": "sac\ntransliteration: bag\npronunciation",
            "cleaned_prediction": "sac",
            "gt": "sac"
        },
        {
            "input_prompt": "Input: injured\nOutput:",
            "test_query": "injured",
            "prediction": "bless\u00e9\ninput: injury\noutput: blessure",
            "cleaned_prediction": "bless\u00e9",
            "gt": "bless\u00e9"
        },
        {
            "input_prompt": "Input: spots\nOutput:",
            "test_query": "spots",
            "prediction": "taches\ntranslation: spots -> taches\ndefinition",
            "cleaned_prediction": "taches",
            "gt": "taches"
        },
        {
            "input_prompt": "Input: succeed\nOutput:",
            "test_query": "succeed",
            "prediction": "r\u00e9ussir\ninput: succeed\noutput: r\u00e9ussir",
            "cleaned_prediction": "r\u00e9ussir",
            "gt": "r\u00e9ussir"
        },
        {
            "input_prompt": "Input: competitions\nOutput:",
            "test_query": "competitions",
            "prediction": "concours\ntranslation: competitions\ndefinition: an event",
            "cleaned_prediction": "concours",
            "gt": "comp\u00e9titions"
        },
        {
            "input_prompt": "Input: reasonable\nOutput:",
            "test_query": "reasonable",
            "prediction": "raisonnable\ninput: reasonable\noutput: raisonnable",
            "cleaned_prediction": "raisonnable",
            "gt": "raisonnable"
        },
        {
            "input_prompt": "Input: prior\nOutput:",
            "test_query": "prior",
            "prediction": "ant\u00e9c\u00e9dent\ntranslation: predecessor\nsynonyms",
            "cleaned_prediction": "ant\u00e9c\u00e9dent",
            "gt": "avant"
        },
        {
            "input_prompt": "Input: predecessor\nOutput:",
            "test_query": "predecessor",
            "prediction": "pr\u00e9d\u00e9cesseur\ntranslation: predecessor",
            "cleaned_prediction": "pr\u00e9d\u00e9cesseur",
            "gt": "pr\u00e9d\u00e9cesse"
        },
        {
            "input_prompt": "Input: unused\nOutput:",
            "test_query": "unused",
            "prediction": "inutile\ntranslation: useless\nsynonyms:",
            "cleaned_prediction": "inutile",
            "gt": "inutilis\u00e9"
        },
        {
            "input_prompt": "Input: alternate\nOutput:",
            "test_query": "alternate",
            "prediction": "altern\u00e9\ntranslation: alternate\ntype: verb",
            "cleaned_prediction": "altern\u00e9",
            "gt": "alternatif"
        },
        {
            "input_prompt": "Input: mathematics\nOutput:",
            "test_query": "mathematics",
            "prediction": "math\u00e9matiques\ntranslation: mathematics\ninput:",
            "cleaned_prediction": "math\u00e9matiques",
            "gt": "math\u00e9matiques"
        }
    ],
    "val_f1_per_layer": {
        "0": 0.0,
        "1": 0.0,
        "2": 0.0,
        "3": 0.0,
        "4": 0.0,
        "5": 0.0,
        "6": 0.0,
        "7": 0.0,
        "8": 0.0,
        "9": 0.0,
        "10": 0.0,
        "11": 0.0,
        "12": 0.0021321961620469083,
        "13": 0.4605543710021322,
        "14": 0.6353944562899787,
        "15": 0.6439232409381663,
        "16": 0.488272921108742,
        "17": 0.40298507462686567,
        "18": 0.279317697228145,
        "19": 0.11087420042643924,
        "20": 0.0021321961620469083,
        "21": 0.031982942430703626,
        "22": 0.0,
        "23": 0.0021321961620469083,
        "24": 0.0,
        "25": 0.0,
        "26": 0.0,
        "27": 0.0,
        "28": 0.0,
        "29": 0.0,
        "30": 0.03411513859275053,
        "31": 0.031982942430703626
    }
}