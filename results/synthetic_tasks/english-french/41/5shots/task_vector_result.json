{"score": {"exact_match": 0.5863539445628998}, "intervention_layer": 14, "result": [{"input_prompt": "Input: printing\nOutput:", "test_query": "printing", "prediction": "impression\ndefinition: the act of pressing a key on", "cleaned_prediction": "impression", "gt": "impression"}, {"input_prompt": "Input: iceland\nOutput:", "test_query": "iceland", "prediction": "island\ninput: iceland\noutput: island\ninput", "cleaned_prediction": "island", "gt": "Islande"}, {"input_prompt": "Input: fault\nOutput:", "test_query": "fault", "prediction": "d\u00e9faut\ntranslation: defect\nsynonyms: imper", "cleaned_prediction": "d\u00e9faut", "gt": "faute"}, {"input_prompt": "Input: arrest\nOutput:", "test_query": "arrest", "prediction": "arrest\ninput: arrest\noutput: arrest\n\ninput", "cleaned_prediction": "arrest", "gt": "arr\u00eater"}, {"input_prompt": "Input: reducing\nOutput:", "test_query": "reducing", "prediction": "r\u00e9duire\ntranslation: to reduce\nsynonyms", "cleaned_prediction": "r\u00e9duire", "gt": "r\u00e9duisant"}, {"input_prompt": "Input: chart\nOutput:", "test_query": "chart", "prediction": "tableau\ninput: table\noutput: tableau\n\ninput", "cleaned_prediction": "tableau", "gt": "graphique"}, {"input_prompt": "Input: compromise\nOutput:", "test_query": "compromise", "prediction": "compromis\ncompromise is a word that has been", "cleaned_prediction": "compromis", "gt": "compromis"}, {"input_prompt": "Input: compared\nOutput:", "test_query": "compared", "prediction": "compar\u00e9\ninput: comparisons\noutput: comparais", "cleaned_prediction": "compar\u00e9", "gt": "compar\u00e9"}, {"input_prompt": "Input: thousands\nOutput:", "test_query": "thousands", "prediction": "milliers\ninput: millions\noutput: millions", "cleaned_prediction": "milliers", "gt": "milliers"}, {"input_prompt": "Input: prevent\nOutput:", "test_query": "prevent", "prediction": "emp\u00eacher\ntranslation: to prevent\nsynonyms", "cleaned_prediction": "emp\u00eacher", "gt": "pr\u00e9venir"}, {"input_prompt": "Input: foundation\nOutput:", "test_query": "foundation", "prediction": "fondation\ninput: foundation\noutput: fondation", "cleaned_prediction": "fondation", "gt": "fondation"}, {"input_prompt": "Input: tribes\nOutput:", "test_query": "tribes", "prediction": "tribunes\nin latin, the word \"tribes", "cleaned_prediction": "tribunes", "gt": "tribus"}, {"input_prompt": "Input: vocals\nOutput:", "test_query": "vocals", "prediction": "voix\ntranslation: voice\nexample: she sang", "cleaned_prediction": "voix", "gt": "voix"}, {"input_prompt": "Input: intermediate\nOutput:", "test_query": "intermediate", "prediction": "interm\u00e9diaire\ntranslation: intermediate\nsearch", "cleaned_prediction": "interm\u00e9diaire", "gt": "interm\u00e9diaire"}, {"input_prompt": "Input: gallery\nOutput:", "test_query": "gallery", "prediction": "galerie\nlanguage: fr\nexplanation: le mot", "cleaned_prediction": "galerie", "gt": "galerie"}, {"input_prompt": "Input: especially\nOutput:", "test_query": "especially", "prediction": "surtout\ninput: especially\noutput: surtout\ninput", "cleaned_prediction": "surtout", "gt": "particuli\u00e8rement"}, {"input_prompt": "Input: arguing\nOutput:", "test_query": "arguing", "prediction": "argument\nsynonyms: debate, discussion, dispute,", "cleaned_prediction": "argument", "gt": "se disputer"}, {"input_prompt": "Input: conservative\nOutput:", "test_query": "conservative", "prediction": "conservateur\nexamples: conservative - conservateur - conservative", "cleaned_prediction": "conservateur", "gt": "conservateur"}, {"input_prompt": "Input: processes\nOutput:", "test_query": "processes", "prediction": "process\nprocess: a set of instructions that the computer", "cleaned_prediction": "process", "gt": "processus"}, {"input_prompt": "Input: platform\nOutput:", "test_query": "platform", "prediction": "plateforme\ntranslation: platform\nsearch for:\n-", "cleaned_prediction": "plateforme", "gt": "plateforme"}, {"input_prompt": "Input: scope\nOutput:", "test_query": "scope", "prediction": "champ\nin the realm of chess, a \"scope", "cleaned_prediction": "champ", "gt": "port\u00e9e"}, {"input_prompt": "Input: contributors\nOutput:", "test_query": "contributors", "prediction": "contributeurs\nlanguage: fr\n\nle code de la", "cleaned_prediction": "contributeurs", "gt": "contributeurs"}, {"input_prompt": "Input: colleges\nOutput:", "test_query": "colleges", "prediction": "coll\u00e8ges\nlanguage: french\n\nhere is the", "cleaned_prediction": "coll\u00e8ges", "gt": "universit\u00e9s"}, {"input_prompt": "Input: audiences\nOutput:", "test_query": "audiences", "prediction": "publics\nthe word \"audience\" is often", "cleaned_prediction": "publics", "gt": "publics"}, {"input_prompt": "Input: waiting\nOutput:", "test_query": "waiting", "prediction": "attendant\ndefinition: (verb) to be present and", "cleaned_prediction": "attendant", "gt": "attente"}, {"input_prompt": "Input: bike\nOutput:", "test_query": "bike", "prediction": "v\u00e9lo\ntranslation: bike\ndefinition: a vehicle", "cleaned_prediction": "v\u00e9lo", "gt": "v\u00e9lo"}, {"input_prompt": "Input: serbia\nOutput:", "test_query": "serbia", "prediction": "serbie\ntranslation: serbia\nspelling: s", "cleaned_prediction": "serbie", "gt": "Serbie"}, {"input_prompt": "Input: unfortunately\nOutput:", "test_query": "unfortunately", "prediction": "malheureusement\ntranslation: unfortunately\ndefinition: in", "cleaned_prediction": "malheureusement", "gt": "malheureusement"}, {"input_prompt": "Input: separation\nOutput:", "test_query": "separation", "prediction": "s\u00e9paration\nlanguage model trained on a dataset that includes", "cleaned_prediction": "s\u00e9paration", "gt": "s\u00e9paration"}, {"input_prompt": "Input: rain\nOutput:", "test_query": "rain", "prediction": "pluie\ntranslation: rain\ndefinition: water that", "cleaned_prediction": "pluie", "gt": "pluie"}, {"input_prompt": "Input: gradually\nOutput:", "test_query": "gradually", "prediction": "progressivement\nsuggestions: progressivement, en passant", "cleaned_prediction": "progressivement", "gt": "progressivement"}, {"input_prompt": "Input: leo\nOutput:", "test_query": "leo", "prediction": "lion\n\nexplanation: the word \"leo\" is a", "cleaned_prediction": "lion", "gt": "lion"}, {"input_prompt": "Input: birthday\nOutput:", "test_query": "birthday", "prediction": "anniversaire\ntranslation: birthday\ntranslation of \"", "cleaned_prediction": "anniversaire", "gt": "anniversaire"}, {"input_prompt": "Input: listed\nOutput:", "test_query": "listed", "prediction": "list\u00e9\ninput: listed\noutput: list\u00e9", "cleaned_prediction": "list\u00e9", "gt": "\u00e9num\u00e9r\u00e9"}, {"input_prompt": "Input: separately\nOutput:", "test_query": "separately", "prediction": "s\u00e9par\u00e9ment\nexamples:\n- input: 1", "cleaned_prediction": "s\u00e9par\u00e9ment", "gt": "s\u00e9par\u00e9ment"}, {"input_prompt": "Input: land\nOutput:", "test_query": "land", "prediction": "terrain\ndefinition: the physical features of the land,", "cleaned_prediction": "terrain", "gt": "terre"}, {"input_prompt": "Input: particularly\nOutput:", "test_query": "particularly", "prediction": "particularely\nexplanation: the word \"particularly\"", "cleaned_prediction": "particularely", "gt": "particuli\u00e8rement"}, {"input_prompt": "Input: moses\nOutput:", "test_query": "moses", "prediction": "mo\u00efse\n\ninput: moses\noutput:", "cleaned_prediction": "mo\u00efse", "gt": "Mo\u00efse"}, {"input_prompt": "Input: explorer\nOutput:", "test_query": "explorer", "prediction": "explorateur\ntranslation: explorer\nsynonyms: discover", "cleaned_prediction": "explorateur", "gt": "explorateur"}, {"input_prompt": "Input: animals\nOutput:", "test_query": "animals", "prediction": "animaux\n\nexplanation: the word \"animals\" is", "cleaned_prediction": "animaux", "gt": "animaux"}, {"input_prompt": "Input: legend\nOutput:", "test_query": "legend", "prediction": "l\u00e9gende\nlanguage: french\nexplanation: la l\u00e9g", "cleaned_prediction": "l\u00e9gende", "gt": "l\u00e9gende"}, {"input_prompt": "Input: arms\nOutput:", "test_query": "arms", "prediction": "bras\n\ninput: cats\noutput: bats\n\ninput", "cleaned_prediction": "bras", "gt": "bras"}, {"input_prompt": "Input: notably\nOutput:", "test_query": "notably", "prediction": "not\u00e9\ntranslation: noted\ninput: notably", "cleaned_prediction": "not\u00e9", "gt": "notamment"}, {"input_prompt": "Input: throne\nOutput:", "test_query": "throne", "prediction": "tr\u00f4ne\ninput: thrones\noutput:", "cleaned_prediction": "tr\u00f4ne", "gt": "tr\u00f4ne"}, {"input_prompt": "Input: competitive\nOutput:", "test_query": "competitive", "prediction": "concurrent\nwas the input transformed correctly?\n\nstep 1", "cleaned_prediction": "concurrent", "gt": "comp\u00e9titif"}, {"input_prompt": "Input: quickly\nOutput:", "test_query": "quickly", "prediction": "rapidement\ntranslation: quickly\ndefinition: with speed;", "cleaned_prediction": "rapidement", "gt": "rapidement"}, {"input_prompt": "Input: frank\nOutput:", "test_query": "frank", "prediction": "francis\n\nexplanation: the string \"frank\"", "cleaned_prediction": "francis", "gt": "franc"}, {"input_prompt": "Input: burial\nOutput:", "test_query": "burial", "prediction": "inhumation\nsynonyms for \"burial\"", "cleaned_prediction": "inhumation", "gt": "enterrement"}, {"input_prompt": "Input: significantly\nOutput:", "test_query": "significantly", "prediction": "sensibly\n1.1.1.2.", "cleaned_prediction": "sensibly", "gt": "significativement"}, {"input_prompt": "Input: bound\nOutput:", "test_query": "bound", "prediction": "limit\nreturn the smallest possible limit for a given bound", "cleaned_prediction": "limit", "gt": "li\u00e9"}, {"input_prompt": "Input: leaving\nOutput:", "test_query": "leaving", "prediction": "d\u00e9part\ntranslation: leaving\ndefinition: the act of", "cleaned_prediction": "d\u00e9part", "gt": "partir"}, {"input_prompt": "Input: installed\nOutput:", "test_query": "installed", "prediction": "install\u00e9\ntranslation: installed\nsynonyms for installed", "cleaned_prediction": "install\u00e9", "gt": "install\u00e9"}, {"input_prompt": "Input: changed\nOutput:", "test_query": "changed", "prediction": "modifi\u00e9\nrevision: 1\nuser id:", "cleaned_prediction": "modifi\u00e9", "gt": "chang\u00e9"}, {"input_prompt": "Input: build\nOutput:", "test_query": "build", "prediction": "construire\ntranslation: to build\nsynonyms:", "cleaned_prediction": "construire", "gt": "construire"}, {"input_prompt": "Input: geographic\nOutput:", "test_query": "geographic", "prediction": "g\u00e9ographique\ntranslation: geographical\nsearch for \"", "cleaned_prediction": "g\u00e9ographique", "gt": "g\u00e9ographique"}, {"input_prompt": "Input: queens\nOutput:", "test_query": "queens", "prediction": "reines\n\nexplanation: the word \"queens\"", "cleaned_prediction": "reines", "gt": "reines"}, {"input_prompt": "Input: core\nOutput:", "test_query": "core", "prediction": "no core\nerror: no core file was generated.", "cleaned_prediction": "no core", "gt": "noyau"}, {"input_prompt": "Input: voices\nOutput:", "test_query": "voices", "prediction": "voix\nvoices (english) - voix", "cleaned_prediction": "voix", "gt": "voix"}, {"input_prompt": "Input: gas\nOutput:", "test_query": "gas", "prediction": "essence\n\nproblem: given a gas tank and a pump", "cleaned_prediction": "essence", "gt": "gaz"}, {"input_prompt": "Input: opposed\nOutput:", "test_query": "opposed", "prediction": "opposites\nexplanation: the word \"opposed\"", "cleaned_prediction": "opposites", "gt": "oppos\u00e9"}, {"input_prompt": "Input: award\nOutput:", "test_query": "award", "prediction": "r\u00e9compense\ntranslation: award\nsynonyms:", "cleaned_prediction": "r\u00e9compense", "gt": "prix"}, {"input_prompt": "Input: freestyle\nOutput:", "test_query": "freestyle", "prediction": "libre\ninput: freestyle\noutput: libre", "cleaned_prediction": "libre", "gt": "style libre"}, {"input_prompt": "Input: baltic\nOutput:", "test_query": "baltic", "prediction": "baltic\nexplanation: the word \"balt", "cleaned_prediction": "baltic", "gt": "baltique"}, {"input_prompt": "Input: vary\nOutput:", "test_query": "vary", "prediction": "varier\nvariety\nvariety (disamb", "cleaned_prediction": "varier", "gt": "varier"}, {"input_prompt": "Input: road\nOutput:", "test_query": "road", "prediction": "route\nspelling bee\ninput: bee\noutput", "cleaned_prediction": "route", "gt": "route"}, {"input_prompt": "Input: something\nOutput:", "test_query": "something", "prediction": "chose\nchose is the past tense of the verb", "cleaned_prediction": "chose", "gt": "quelque chose"}, {"input_prompt": "Input: described\nOutput:", "test_query": "described", "prediction": "d\u00e9crit\ntranslation: described\nsynonyms: explained", "cleaned_prediction": "d\u00e9crit", "gt": "d\u00e9crit"}, {"input_prompt": "Input: under\nOutput:", "test_query": "under", "prediction": "sous\ninput: under\noutput: sous\n\ninput", "cleaned_prediction": "sous", "gt": "sous"}, {"input_prompt": "Input: assets\nOutput:", "test_query": "assets", "prediction": "acteurs\n---\n\n# acteurs\n\n## r\u00f4le", "cleaned_prediction": "acteurs", "gt": "actifs"}, {"input_prompt": "Input: struck\nOutput:", "test_query": "struck", "prediction": "frappe\nwhat is the definition of struck?\n(", "cleaned_prediction": "frappe", "gt": "frapp\u00e9"}, {"input_prompt": "Input: current\nOutput:", "test_query": "current", "prediction": "courant\ntransliteration: k\u028a\ufffd", "cleaned_prediction": "courant", "gt": "actuel"}, {"input_prompt": "Input: cars\nOutput:", "test_query": "cars", "prediction": "voitures\n\ntranslation: \"car\" is a noun", "cleaned_prediction": "voitures", "gt": "voitures"}, {"input_prompt": "Input: graduated\nOutput:", "test_query": "graduated", "prediction": "dipl\u00f4m\u00e9\ninput: graduate\noutput: dipl", "cleaned_prediction": "dipl\u00f4m\u00e9", "gt": "dipl\u00f4m\u00e9"}, {"input_prompt": "Input: petersburg\nOutput:", "test_query": "petersburg", "prediction": "petersburg\nexplanation: the string petersburg", "cleaned_prediction": "petersburg", "gt": "P\u00e9tersbourg"}, {"input_prompt": "Input: tue\nOutput:", "test_query": "tue", "prediction": "mardi\n\ninput: wed\noutput: mercre", "cleaned_prediction": "mardi", "gt": "mardi"}, {"input_prompt": "Input: served\nOutput:", "test_query": "served", "prediction": "servi\ninput: apple\noutput: appl\ninput", "cleaned_prediction": "servi", "gt": "servi"}, {"input_prompt": "Input: adding\nOutput:", "test_query": "adding", "prediction": "ajoutant\ntranslation: adding\nsynonyms: adding", "cleaned_prediction": "ajoutant", "gt": "ajoutant"}, {"input_prompt": "Input: weeks\nOutput:", "test_query": "weeks", "prediction": "semaines\ntranslation: weeks\ndefinition: a week", "cleaned_prediction": "semaines", "gt": "semaines"}, {"input_prompt": "Input: stay\nOutput:", "test_query": "stay", "prediction": "rest\ninput: tamed\noutput: dame", "cleaned_prediction": "rest", "gt": "rester"}, {"input_prompt": "Input: can\nOutput:", "test_query": "can", "prediction": "can\ninput: cat\noutput: cat\ninput", "cleaned_prediction": "can", "gt": "peut"}, {"input_prompt": "Input: wanted\nOutput:", "test_query": "wanted", "prediction": "demand\u00e9\ntranslation: asked for\ndefinition: (", "cleaned_prediction": "demand\u00e9", "gt": "voulu"}, {"input_prompt": "Input: how\nOutput:", "test_query": "how", "prediction": "comment\ncomment: it is a good idea to have", "cleaned_prediction": "comment", "gt": "comment"}, {"input_prompt": "Input: reliable\nOutput:", "test_query": "reliable", "prediction": "fiable\nfeedback: the word \"reliable\"", "cleaned_prediction": "fiable", "gt": "fiable"}, {"input_prompt": "Input: archaeological\nOutput:", "test_query": "archaeological", "prediction": "arch\u00e9ologique\nthe correct spelling of the word", "cleaned_prediction": "arch\u00e9ologique", "gt": "arch\u00e9ologique"}, {"input_prompt": "Input: leaders\nOutput:", "test_query": "leaders", "prediction": "dirigeants\ntranslation: leaders\nsynonyms:", "cleaned_prediction": "dirigeants", "gt": "dirigeants"}, {"input_prompt": "Input: when\nOutput:", "test_query": "when", "prediction": "quand\ntransliteration: k\u02b7\u00e1nd", "cleaned_prediction": "quand", "gt": "quand"}, {"input_prompt": "Input: wings\nOutput:", "test_query": "wings", "prediction": "ailes\ninput: dogs\noutput: chiens", "cleaned_prediction": "ailes", "gt": "ailes"}, {"input_prompt": "Input: receiving\nOutput:", "test_query": "receiving", "prediction": "r\u00e9ception\ntransliteration: reh-see-y", "cleaned_prediction": "r\u00e9ception", "gt": "r\u00e9ception"}, {"input_prompt": "Input: clothes\nOutput:", "test_query": "clothes", "prediction": "v\u00eatements\ntranslation: clothes\ndefinition:", "cleaned_prediction": "v\u00eatements", "gt": "v\u00eatements"}, {"input_prompt": "Input: clinical\nOutput:", "test_query": "clinical", "prediction": "clinique\ntranslation: clinic\ndefinition: a medical", "cleaned_prediction": "clinique", "gt": "clinique"}, {"input_prompt": "Input: prussia\nOutput:", "test_query": "prussia", "prediction": "prussie\ninput: korea\noutput:", "cleaned_prediction": "prussie", "gt": "Prusse"}, {"input_prompt": "Input: judicial\nOutput:", "test_query": "judicial", "prediction": "judiciaire\nfrench translation of judicial\nfrench word", "cleaned_prediction": "judiciaire", "gt": "judiciaire"}, {"input_prompt": "Input: ground\nOutput:", "test_query": "ground", "prediction": "terrain\noutput: terrain\noutput: terrain\noutput", "cleaned_prediction": "terrain", "gt": "sol"}, {"input_prompt": "Input: grounds\nOutput:", "test_query": "grounds", "prediction": "terrain\ninput: terrain\noutput: grounds\ninput", "cleaned_prediction": "terrain", "gt": "terrains"}, {"input_prompt": "Input: useless\nOutput:", "test_query": "useless", "prediction": "inutile\ntranslation: useless\nsynonyms:", "cleaned_prediction": "inutile", "gt": "inutile"}, {"input_prompt": "Input: touchdown\nOutput:", "test_query": "touchdown", "prediction": "touch-down\nchange 1 letter\ninput: touch", "cleaned_prediction": "touch-down", "gt": "touch\u00e9"}, {"input_prompt": "Input: azerbaijan\nOutput:", "test_query": "azerbaijan", "prediction": "azerba\u00efdjan\ninput: turkey", "cleaned_prediction": "azerba\u00efdjan", "gt": "Azerba\u00efd"}, {"input_prompt": "Input: decide\nOutput:", "test_query": "decide", "prediction": "d\u00e9cide\nlanguage model: french\ndecision: accept", "cleaned_prediction": "d\u00e9cide", "gt": "d\u00e9cider"}, {"input_prompt": "Input: breast\nOutput:", "test_query": "breast", "prediction": "sein\ninput: breast\noutput: sein\ninput", "cleaned_prediction": "sein", "gt": "sein"}, {"input_prompt": "Input: week\nOutput:", "test_query": "week", "prediction": "semaine\ninput: month\noutput: mois\ninput", "cleaned_prediction": "semaine", "gt": "semaine"}, {"input_prompt": "Input: hidden\nOutput:", "test_query": "hidden", "prediction": "cach\u00e9\ntranslation: hidden\nsynonyms: concealed", "cleaned_prediction": "cach\u00e9", "gt": "cach\u00e9"}, {"input_prompt": "Input: ruled\nOutput:", "test_query": "ruled", "prediction": "r\u00e9gulier\ntranslation: regular\ndefinition: (", "cleaned_prediction": "r\u00e9gulier", "gt": "r\u00e9gi"}, {"input_prompt": "Input: possibly\nOutput:", "test_query": "possibly", "prediction": "peut-\u00eatre\ninput: possibly\noutput: peut-\u00eatre", "cleaned_prediction": "peut-\u00eatre", "gt": "peut-\u00eatre"}, {"input_prompt": "Input: sin\nOutput:", "test_query": "sin", "prediction": "sinus\nlanguage: english\nexplanation: the word \"", "cleaned_prediction": "sinus", "gt": "p\u00e9ch\u00e9"}, {"input_prompt": "Input: artistic\nOutput:", "test_query": "artistic", "prediction": "artistique\ninput: beautiful\noutput: belle", "cleaned_prediction": "artistique", "gt": "artistique"}, {"input_prompt": "Input: truck\nOutput:", "test_query": "truck", "prediction": "camion\n\ntranslation:\ntruck -> cami\u00f3n", "cleaned_prediction": "camion", "gt": "camion"}, {"input_prompt": "Input: collapsed\nOutput:", "test_query": "collapsed", "prediction": "pli\u00e9\ninput: collapse\noutput: pl", "cleaned_prediction": "pli\u00e9", "gt": "effondr\u00e9"}, {"input_prompt": "Input: pretty\nOutput:", "test_query": "pretty", "prediction": "joli\ntransliteration: zh\u014dngw", "cleaned_prediction": "joli", "gt": "joli"}, {"input_prompt": "Input: tour\nOutput:", "test_query": "tour", "prediction": "tour\nexplanation: the input string \"tour\" is", "cleaned_prediction": "tour", "gt": "visite"}, {"input_prompt": "Input: tel\nOutput:", "test_query": "tel", "prediction": "t\u00e9l\u00e9phone\ninput: phone\noutput: t\u00e9l\u00e9phone\ninput", "cleaned_prediction": "t\u00e9l\u00e9phone", "gt": "t\u00e9l\u00e9phone"}, {"input_prompt": "Input: pattern\nOutput:", "test_query": "pattern", "prediction": "mod\u00e8le\n\ninput: patterns\noutput: mod\u00e8les", "cleaned_prediction": "mod\u00e8le", "gt": "motif"}, {"input_prompt": "Input: rank\nOutput:", "test_query": "rank", "prediction": "grade\nthis problem is a classic example of a simple", "cleaned_prediction": "grade", "gt": "rang"}, {"input_prompt": "Input: torpedo\nOutput:", "test_query": "torpedo", "prediction": "torp\u00e9do\nlanguage model: fr\ntranslation", "cleaned_prediction": "torp\u00e9do", "gt": "torpille"}, {"input_prompt": "Input: undo\nOutput:", "test_query": "undo", "prediction": "annul\ninput: unroll\noutput: roll", "cleaned_prediction": "annul", "gt": "annuler"}, {"input_prompt": "Input: limestone\nOutput:", "test_query": "limestone", "prediction": "calcaire\ntranslation: limestone\nsynonyms:", "cleaned_prediction": "calcaire", "gt": "calcaire"}, {"input_prompt": "Input: opportunities\nOutput:", "test_query": "opportunities", "prediction": "occasions\nthe word \"opportunities\" has", "cleaned_prediction": "occasions", "gt": "opportunit\u00e9s"}, {"input_prompt": "Input: grass\nOutput:", "test_query": "grass", "prediction": "g r a s s\n\nexplanation: we can split", "cleaned_prediction": "g r a s s", "gt": "herbe"}, {"input_prompt": "Input: declined\nOutput:", "test_query": "declined", "prediction": "d\u00e9clin\u00e9\ninput: declining\noutput: d\u00e9", "cleaned_prediction": "d\u00e9clin\u00e9", "gt": "refus\u00e9"}, {"input_prompt": "Input: statements\nOutput:", "test_query": "statements", "prediction": "d\u00e9clarations\ntranslation: statements\ndefinition: (1", "cleaned_prediction": "d\u00e9clarations", "gt": "d\u00e9clarations"}, {"input_prompt": "Input: badge\nOutput:", "test_query": "badge", "prediction": "badge\n-------------------\n# badge\nbadge is a small", "cleaned_prediction": "badge", "gt": "insigne"}, {"input_prompt": "Input: aftermath\nOutput:", "test_query": "aftermath", "prediction": "suite\naftermath of the storm\nthe storm has", "cleaned_prediction": "suite", "gt": "cons\u00e9quences"}, {"input_prompt": "Input: offices\nOutput:", "test_query": "offices", "prediction": "bureaux\ntranslation: offices\ndefinition: rooms in", "cleaned_prediction": "bureaux", "gt": "bureaux"}, {"input_prompt": "Input: cold\nOutput:", "test_query": "cold", "prediction": "froid\ntranslation: cold\ndefinition: feeling or", "cleaned_prediction": "froid", "gt": "froid"}, {"input_prompt": "Input: funeral\nOutput:", "test_query": "funeral", "prediction": "funereal\ndefinition: (adjective) relating to", "cleaned_prediction": "funereal", "gt": "fun\u00e9railles"}, {"input_prompt": "Input: weapons\nOutput:", "test_query": "weapons", "prediction": "armes\ntranslation: weapons -> armes\ndefinition", "cleaned_prediction": "armes", "gt": "armes"}, {"input_prompt": "Input: philippine\nOutput:", "test_query": "philippine", "prediction": "philippine\ninput: czech\noutput:", "cleaned_prediction": "philippine", "gt": "philippin"}, {"input_prompt": "Input: replacing\nOutput:", "test_query": "replacing", "prediction": "rempla\u00e7ant\ntranslation: replacing\ndefinition:", "cleaned_prediction": "rempla\u00e7ant", "gt": "rempla\u00e7ant"}, {"input_prompt": "Input: categories\nOutput:", "test_query": "categories", "prediction": "cat\u00e9gories\n\ntranslation: \n- categories -> cat", "cleaned_prediction": "cat\u00e9gories", "gt": "cat\u00e9gories"}, {"input_prompt": "Input: improvements\nOutput:", "test_query": "improvements", "prediction": "am\u00e9liorations\ntranslation: improvements\nsynonyms", "cleaned_prediction": "am\u00e9liorations", "gt": "am\u00e9liorations"}, {"input_prompt": "Input: implementation\nOutput:", "test_query": "implementation", "prediction": "mise en oeuvre\nlanguage: french\nexplanation:", "cleaned_prediction": "mise en oeuvre", "gt": "mise en \u0153uvre"}, {"input_prompt": "Input: fires\nOutput:", "test_query": "fires", "prediction": "incendies\nsynonyms: flames, fire,", "cleaned_prediction": "incendies", "gt": "incendies"}, {"input_prompt": "Input: edit\nOutput:", "test_query": "edit", "prediction": "modifier\ninput: edit\noutput: modifier\ninput", "cleaned_prediction": "modifier", "gt": "modifier"}, {"input_prompt": "Input: sweet\nOutput:", "test_query": "sweet", "prediction": "douce\ninput: happy\noutput: heureux", "cleaned_prediction": "douce", "gt": "doux"}, {"input_prompt": "Input: defeated\nOutput:", "test_query": "defeated", "prediction": "battu\ninput: defeat\noutput: battre", "cleaned_prediction": "battu", "gt": "d\u00e9fait"}, {"input_prompt": "Input: handle\nOutput:", "test_query": "handle", "prediction": "manche\ninput: handles\noutput: manches", "cleaned_prediction": "manche", "gt": "poign\u00e9e"}, {"input_prompt": "Input: cable\nOutput:", "test_query": "cable", "prediction": "c\u00e2ble\nfrench spelling of cable.\n\ninput: c", "cleaned_prediction": "c\u00e2ble", "gt": "c\u00e2ble"}, {"input_prompt": "Input: paying\nOutput:", "test_query": "paying", "prediction": "pay\ninput: paying\noutput: pay\ninput", "cleaned_prediction": "pay", "gt": "payer"}, {"input_prompt": "Input: published\nOutput:", "test_query": "published", "prediction": "publi\u00e9\ntranslation: published\ndefinition: (of", "cleaned_prediction": "publi\u00e9", "gt": "publi\u00e9"}, {"input_prompt": "Input: for\nOutput:", "test_query": "for", "prediction": "pour\nexplanation: the input string \"for\" can", "cleaned_prediction": "pour", "gt": "pour"}, {"input_prompt": "Input: sustained\nOutput:", "test_query": "sustained", "prediction": "durable\nsynonyms: lasting, persistent, steady,", "cleaned_prediction": "durable", "gt": "soutenu"}, {"input_prompt": "Input: upcoming\nOutput:", "test_query": "upcoming", "prediction": "\u00e0 venir\ntranslation: upcoming\nsynonyms: future", "cleaned_prediction": "\u00e0 venir", "gt": "\u00e0 venir"}, {"input_prompt": "Input: mineral\nOutput:", "test_query": "mineral", "prediction": "min\u00e9ral\nlanguage: french\nexplanation: the", "cleaned_prediction": "min\u00e9ral", "gt": "min\u00e9ral"}, {"input_prompt": "Input: tourists\nOutput:", "test_query": "tourists", "prediction": "tourist\nchange the ending of the word \"tourists", "cleaned_prediction": "tourist", "gt": "touristes"}, {"input_prompt": "Input: politicians\nOutput:", "test_query": "politicians", "prediction": "politicien\nlanguage model: french\nlanguage code", "cleaned_prediction": "politicien", "gt": "politiciens"}, {"input_prompt": "Input: attack\nOutput:", "test_query": "attack", "prediction": "attaque\nfrench translation of the english word \"attack", "cleaned_prediction": "attaque", "gt": "attaque"}, {"input_prompt": "Input: free\nOutput:", "test_query": "free", "prediction": "gratuitous\na gratuitous display of skill or talent", "cleaned_prediction": "gratuitous", "gt": "gratuit"}, {"input_prompt": "Input: trees\nOutput:", "test_query": "trees", "prediction": "arbres\nfrench (fran\u00e7ais) translation", "cleaned_prediction": "arbres", "gt": "arbres"}, {"input_prompt": "Input: starts\nOutput:", "test_query": "starts", "prediction": "d\u00e9bute\ntranslation: begins\ndefinition: to", "cleaned_prediction": "d\u00e9bute", "gt": "\u00e9toiles"}, {"input_prompt": "Input: students\nOutput:", "test_query": "students", "prediction": "\u00e9tudiants\n\ninput: dogs\noutput: chi", "cleaned_prediction": "\u00e9tudiants", "gt": "\u00e9tudiants"}, {"input_prompt": "Input: buffalo\nOutput:", "test_query": "buffalo", "prediction": "bison\n\nexplanation: the word \"buffalo\"", "cleaned_prediction": "bison", "gt": "bison"}, {"input_prompt": "Input: geneva\nOutput:", "test_query": "geneva", "prediction": "gen\u00e8ve\n================\n### step 1: understand", "cleaned_prediction": "gen\u00e8ve", "gt": "Gen\u00e8ve"}, {"input_prompt": "Input: ruins\nOutput:", "test_query": "ruins", "prediction": "ruine\nlanguage: french\nexplanation: the word", "cleaned_prediction": "ruine", "gt": "ruines"}, {"input_prompt": "Input: rebuilt\nOutput:", "test_query": "rebuilt", "prediction": "rebuilts\ninput: rebuilt\noutput: reb", "cleaned_prediction": "rebuilts", "gt": "reconstruit"}, {"input_prompt": "Input: preserve\nOutput:", "test_query": "preserve", "prediction": "pr\u00e9server\ntranslation: to preserve\nsynonyms:", "cleaned_prediction": "pr\u00e9server", "gt": "pr\u00e9server"}, {"input_prompt": "Input: bed\nOutput:", "test_query": "bed", "prediction": "lit\n```\ndef find_bed_status(bed_status", "cleaned_prediction": "lit", "gt": "lit"}, {"input_prompt": "Input: button\nOutput:", "test_query": "button", "prediction": "bouton\ntranslation: button\ncategory: electronics", "cleaned_prediction": "bouton", "gt": "bouton"}, {"input_prompt": "Input: beauty\nOutput:", "test_query": "beauty", "prediction": "beaut\u00e9\naccents: french\nthe french language", "cleaned_prediction": "beaut\u00e9", "gt": "beaut\u00e9"}, {"input_prompt": "Input: states\nOutput:", "test_query": "states", "prediction": "\u00e9tats\ntranslation: states\ndefinition: the states", "cleaned_prediction": "\u00e9tats", "gt": "\u00e9tats"}, {"input_prompt": "Input: nuclear\nOutput:", "test_query": "nuclear", "prediction": "nucl\u00e9aire\nlanguage model trained on: french", "cleaned_prediction": "nucl\u00e9aire", "gt": "nucl\u00e9aire"}, {"input_prompt": "Input: coached\nOutput:", "test_query": "coached", "prediction": "entra\u00een\u00e9\nsynonyms: trained, instructed,", "cleaned_prediction": "entra\u00een\u00e9", "gt": "entra\u00een\u00e9"}, {"input_prompt": "Input: prefer\nOutput:", "test_query": "prefer", "prediction": "pr\u00e9f\u00e9rer\ntranslation: prefer\nsynonyms:", "cleaned_prediction": "pr\u00e9f\u00e9rer", "gt": "pr\u00e9f\u00e9rer"}, {"input_prompt": "Input: organic\nOutput:", "test_query": "organic", "prediction": "bio-based\nthe bio-based industry is a rapidly growing", "cleaned_prediction": "bio-based", "gt": "biologique"}, {"input_prompt": "Input: begun\nOutput:", "test_query": "begun", "prediction": "commenc\u00e9\ntranslation: started\nsynonyms: initiated", "cleaned_prediction": "commenc\u00e9", "gt": "commenc\u00e9"}, {"input_prompt": "Input: recognised\nOutput:", "test_query": "recognised", "prediction": "reconnu\ninput: recognises\noutput:", "cleaned_prediction": "reconnu", "gt": "reconnu"}, {"input_prompt": "Input: stayed\nOutput:", "test_query": "stayed", "prediction": "rest\u00e9\ntranslation: remained\nsynonyms: linger", "cleaned_prediction": "rest\u00e9", "gt": "rest\u00e9"}, {"input_prompt": "Input: mail\nOutput:", "test_query": "mail", "prediction": "courrier\n\ntranslation: \n- mail = courrier", "cleaned_prediction": "courrier", "gt": "courrier"}, {"input_prompt": "Input: reasoning\nOutput:", "test_query": "reasoning", "prediction": "raisonnement\nrelevance: 0.9", "cleaned_prediction": "raisonnement", "gt": "raisonnement"}, {"input_prompt": "Input: patrol\nOutput:", "test_query": "patrol", "prediction": "patrouille\nlanguage: french\nexplanation: the", "cleaned_prediction": "patrouille", "gt": "patrouille"}, {"input_prompt": "Input: fluid\nOutput:", "test_query": "fluid", "prediction": "liquide\ntranslation: fluido\ndefinition: a", "cleaned_prediction": "liquide", "gt": "liquide"}, {"input_prompt": "Input: oxygen\nOutput:", "test_query": "oxygen", "prediction": "oxyg\u00e8ne\ntranslation: oxygen\ndefinition: a", "cleaned_prediction": "oxyg\u00e8ne", "gt": "oxyg\u00e8ne"}, {"input_prompt": "Input: corner\nOutput:", "test_query": "corner", "prediction": "coin\ninput: coin\noutput: corner\ninput", "cleaned_prediction": "coin", "gt": "coin"}, {"input_prompt": "Input: referendum\nOutput:", "test_query": "referendum", "prediction": "r\u00e9f\u00e9rendum\ndefinitions:\n\na referendum is a direct", "cleaned_prediction": "r\u00e9f\u00e9rendum", "gt": "r\u00e9f\u00e9rendum"}, {"input_prompt": "Input: wrestling\nOutput:", "test_query": "wrestling", "prediction": "catch wrestling\nthe term \"catch wrestling\" refers to", "cleaned_prediction": "catch wrestling", "gt": "lutte"}, {"input_prompt": "Input: roughly\nOutput:", "test_query": "roughly", "prediction": "approximativement\nsynonyms: about, roughly", "cleaned_prediction": "approximativement", "gt": "approximativement"}, {"input_prompt": "Input: academy\nOutput:", "test_query": "academy", "prediction": "acad\u00e9mie\ntranslation: academy\nsynonyms:", "cleaned_prediction": "acad\u00e9mie", "gt": "acad\u00e9mie"}, {"input_prompt": "Input: indoor\nOutput:", "test_query": "indoor", "prediction": "int\u00e9rieur\ntranslation: interior\ndefinition: inside a", "cleaned_prediction": "int\u00e9rieur", "gt": "int\u00e9rieur"}, {"input_prompt": "Input: pearl\nOutput:", "test_query": "pearl", "prediction": "perle\ninput: pearls\noutput: perles", "cleaned_prediction": "perle", "gt": "perle"}, {"input_prompt": "Input: draft\nOutput:", "test_query": "draft", "prediction": "projet\nproject: draft\ndraft: projet\ninput", "cleaned_prediction": "projet", "gt": "brouillon"}, {"input_prompt": "Input: honor\nOutput:", "test_query": "honor", "prediction": "honor\ntitle case converter\n================\n\n###", "cleaned_prediction": "honor", "gt": "honneur"}, {"input_prompt": "Input: right\nOutput:", "test_query": "right", "prediction": "droit\ntranslation: right\ndefinition: on the right", "cleaned_prediction": "droit", "gt": "droit"}, {"input_prompt": "Input: privacy\nOutput:", "test_query": "privacy", "prediction": "vie priv\u00e9e\nsynonyms: privacy, secrecy,", "cleaned_prediction": "vie priv\u00e9e", "gt": "intimit\u00e9"}, {"input_prompt": "Input: tuesday\nOutput:", "test_query": "tuesday", "prediction": "mardi\n\ninput: wednesday\noutput: mer", "cleaned_prediction": "mardi", "gt": "mardi"}, {"input_prompt": "Input: egypt\nOutput:", "test_query": "egypt", "prediction": "\u00e9gypte\n\nexplanation: \nthe word \"eg", "cleaned_prediction": "\u00e9gypte", "gt": "\u00c9gypte"}, {"input_prompt": "Input: catholic\nOutput:", "test_query": "catholic", "prediction": "catholique\n\ninput: catholique\noutput", "cleaned_prediction": "catholique", "gt": "catholique"}, {"input_prompt": "Input: november\nOutput:", "test_query": "november", "prediction": "novembre\ninput: december\noutput: d\u00e9cembre", "cleaned_prediction": "novembre", "gt": "novembre"}, {"input_prompt": "Input: offering\nOutput:", "test_query": "offering", "prediction": "offertory\nsynonyms: collection, offering", "cleaned_prediction": "offertory", "gt": "offre"}, {"input_prompt": "Input: resumed\nOutput:", "test_query": "resumed", "prediction": "repr\ninput: suspended\noutput: repr\ninput", "cleaned_prediction": "repr", "gt": "repris"}, {"input_prompt": "Input: precise\nOutput:", "test_query": "precise", "prediction": "pr\u00e9cis\nspelling (no diacritics", "cleaned_prediction": "pr\u00e9cis", "gt": "pr\u00e9cis"}, {"input_prompt": "Input: unofficial\nOutput:", "test_query": "unofficial", "prediction": "non-official\nerror: unofficial\naccuracy:", "cleaned_prediction": "non-official", "gt": "non officiel"}, {"input_prompt": "Input: string\nOutput:", "test_query": "string", "prediction": "cha\u00eene de caract\u00e8res\n\nfonction:", "cleaned_prediction": "cha\u00eene de caract\u00e8res", "gt": "corde"}, {"input_prompt": "Input: grid\nOutput:", "test_query": "grid", "prediction": "grille\n\n```python\ndef grid_to_grille(grid", "cleaned_prediction": "grille", "gt": "grille"}, {"input_prompt": "Input: life\nOutput:", "test_query": "life", "prediction": "vie\nlife is a beautiful thing.\nlife is a", "cleaned_prediction": "vie", "gt": "vie"}, {"input_prompt": "Input: electrical\nOutput:", "test_query": "electrical", "prediction": "\u00e9lectrique\noutput: electric\noutput: electric", "cleaned_prediction": "\u00e9lectrique", "gt": "\u00e9lectrique"}, {"input_prompt": "Input: sharing\nOutput:", "test_query": "sharing", "prediction": "partage\ntranslation: sharing\ndefinition: the act", "cleaned_prediction": "partage", "gt": "partage"}, {"input_prompt": "Input: alexander\nOutput:", "test_query": "alexander", "prediction": "alexander\n\ninput: a\noutput: a", "cleaned_prediction": "alexander", "gt": "Alexandre"}, {"input_prompt": "Input: diseases\nOutput:", "test_query": "diseases", "prediction": "maladies\ntranslation: sicknesses\nsynonyms:", "cleaned_prediction": "maladies", "gt": "maladies"}, {"input_prompt": "Input: item\nOutput:", "test_query": "item", "prediction": "article\nthis article uses the following vocabulary:\n- item", "cleaned_prediction": "article", "gt": "article"}, {"input_prompt": "Input: runner\nOutput:", "test_query": "runner", "prediction": "coureur\n\ninput: runner\noutput: coureur", "cleaned_prediction": "coureur", "gt": "coureur"}, {"input_prompt": "Input: put\nOutput:", "test_query": "put", "prediction": "mettre\ntransliteration: m\u025bt\ufffd", "cleaned_prediction": "mettre", "gt": "mettre"}, {"input_prompt": "Input: characters\nOutput:", "test_query": "characters", "prediction": "caract\u00e8res\n\ninput: words\noutput: mots", "cleaned_prediction": "caract\u00e8res", "gt": "personnages"}, {"input_prompt": "Input: seven\nOutput:", "test_query": "seven", "prediction": "sept\n\nexplanation: \nthe word \"seven\" can", "cleaned_prediction": "sept", "gt": "sept"}, {"input_prompt": "Input: christopher\nOutput:", "test_query": "christopher", "prediction": "christopher\n\ninput: christopher\noutput: christ", "cleaned_prediction": "christopher", "gt": "christophe"}, {"input_prompt": "Input: live\nOutput:", "test_query": "live", "prediction": "vivel\nexplanation: the word \u201clive\u201d spelled", "cleaned_prediction": "vivel", "gt": "vivre"}, {"input_prompt": "Input: vietnamese\nOutput:", "test_query": "vietnamese", "prediction": "vietnamien\ntranslation: vietnamese\nsearch for vietnamese", "cleaned_prediction": "vietnamien", "gt": "vietnamien"}, {"input_prompt": "Input: the\nOutput:", "test_query": "the", "prediction": "l' (french)\ninput: the\noutput:", "cleaned_prediction": "l' (french)", "gt": "le/la/les"}, {"input_prompt": "Input: situated\nOutput:", "test_query": "situated", "prediction": "situ\u00e9\ntranslation: situated\nsynonyms: placed", "cleaned_prediction": "situ\u00e9", "gt": "situ\u00e9"}, {"input_prompt": "Input: mrs\nOutput:", "test_query": "mrs", "prediction": "madam\nexplanation: the string \"mrs\"", "cleaned_prediction": "madam", "gt": "madame"}, {"input_prompt": "Input: diversity\nOutput:", "test_query": "diversity", "prediction": "diversit\u00e9\nlanguage model: french\nthe french language", "cleaned_prediction": "diversit\u00e9", "gt": "diversit\u00e9"}, {"input_prompt": "Input: blind\nOutput:", "test_query": "blind", "prediction": "aveugle\ntranslation: blind\nsynonyms:", "cleaned_prediction": "aveugle", "gt": "aveugle"}, {"input_prompt": "Input: brought\nOutput:", "test_query": "brought", "prediction": "apport\u00e9\ntranslation: brought\nsynonyms:", "cleaned_prediction": "apport\u00e9", "gt": "apport\u00e9"}, {"input_prompt": "Input: departed\nOutput:", "test_query": "departed", "prediction": "part\u00e9\ninput: depart\noutput: part", "cleaned_prediction": "part\u00e9", "gt": "parti"}, {"input_prompt": "Input: locally\nOutput:", "test_query": "locally", "prediction": "localement\nrevision: 1\nlevel:", "cleaned_prediction": "localement", "gt": "localement"}, {"input_prompt": "Input: customs\nOutput:", "test_query": "customs", "prediction": "douanes\ntranslation: customs\nsynonyms: dou", "cleaned_prediction": "douanes", "gt": "douanes"}, {"input_prompt": "Input: derivative\nOutput:", "test_query": "derivative", "prediction": "d\u00e9riv\u00e9e\ndomain: calculus\ncategory: math", "cleaned_prediction": "d\u00e9riv\u00e9e", "gt": "d\u00e9riv\u00e9"}, {"input_prompt": "Input: morocco\nOutput:", "test_query": "morocco", "prediction": "maroc\ninput: spain\noutput: espa", "cleaned_prediction": "maroc", "gt": "maroc"}, {"input_prompt": "Input: technically\nOutput:", "test_query": "technically", "prediction": "techniquement\ninput: technically\noutput: techniquement", "cleaned_prediction": "techniquement", "gt": "techniquement"}, {"input_prompt": "Input: immediate\nOutput:", "test_query": "immediate", "prediction": "imm\u00e9diat\ntranslation: immediate\ncategory:", "cleaned_prediction": "imm\u00e9diat", "gt": "imm\u00e9diat"}, {"input_prompt": "Input: signals\nOutput:", "test_query": "signals", "prediction": "signaux\nmodel: l2 norm\nloss function", "cleaned_prediction": "signaux", "gt": "signaux"}, {"input_prompt": "Input: location\nOutput:", "test_query": "location", "prediction": "localisation\nrelated terms: [location]\nfrench:", "cleaned_prediction": "localisation", "gt": "emplacement"}, {"input_prompt": "Input: valley\nOutput:", "test_query": "valley", "prediction": "valley\noutput explanation:\nthe word \"val", "cleaned_prediction": "valley", "gt": "vall\u00e9e"}, {"input_prompt": "Input: revolt\nOutput:", "test_query": "revolt", "prediction": "r\u00e9volte\ntransliteration: revolte", "cleaned_prediction": "r\u00e9volte", "gt": "r\u00e9volte"}, {"input_prompt": "Input: composers\nOutput:", "test_query": "composers", "prediction": "composite\ndefinition: (noun) a mixture of different", "cleaned_prediction": "composite", "gt": "compositeurs"}, {"input_prompt": "Input: deal\nOutput:", "test_query": "deal", "prediction": "affaire\ntranslation: affair\ndefinition: an affair", "cleaned_prediction": "affaire", "gt": "accord"}, {"input_prompt": "Input: amazing\nOutput:", "test_query": "amazing", "prediction": "incroyable\nfrench translation of \u201camazing\u201d", "cleaned_prediction": "incroyable", "gt": "incroyable"}, {"input_prompt": "Input: humanity\nOutput:", "test_query": "humanity", "prediction": "humanit\u00e9\nthis is a translation of the word \u201c", "cleaned_prediction": "humanit\u00e9", "gt": "humanit\u00e9"}, {"input_prompt": "Input: birth\nOutput:", "test_query": "birth", "prediction": "naissance\n\ninput: die\noutput: mourir", "cleaned_prediction": "naissance", "gt": "naissance"}, {"input_prompt": "Input: donated\nOutput:", "test_query": "donated", "prediction": "donat\u00e9\ncorrected output: donat\u00e9", "cleaned_prediction": "donat\u00e9", "gt": "donn\u00e9"}, {"input_prompt": "Input: interim\nOutput:", "test_query": "interim", "prediction": "interm\u00e9diaire\nexamples: \n- interim", "cleaned_prediction": "interm\u00e9diaire", "gt": "int\u00e9rim"}, {"input_prompt": "Input: traditionally\nOutput:", "test_query": "traditionally", "prediction": "traditionnellement\ntraduction:\ntraditionnellement", "cleaned_prediction": "traditionnellement", "gt": "traditionnellement"}, {"input_prompt": "Input: increase\nOutput:", "test_query": "increase", "prediction": "augmentation\ninput: increase\noutput: amplification", "cleaned_prediction": "augmentation", "gt": "augmenter"}, {"input_prompt": "Input: sandy\nOutput:", "test_query": "sandy", "prediction": "s\u00e2ndy\n\nexplanation: the word \"s", "cleaned_prediction": "s\u00e2ndy", "gt": "sableux"}, {"input_prompt": "Input: disaster\nOutput:", "test_query": "disaster", "prediction": "catastrophe\nsynonyms: calamity, disaster, devastation", "cleaned_prediction": "catastrophe", "gt": "d\u00e9sastre"}, {"input_prompt": "Input: collaborative\nOutput:", "test_query": "collaborative", "prediction": "collaboratif\ntranslation: collaborative\ndefinition: working together", "cleaned_prediction": "collaboratif", "gt": "collaboratif"}, {"input_prompt": "Input: recurring\nOutput:", "test_query": "recurring", "prediction": "r\u00e9current\ntranslation: recurring\ndefinition: happening or", "cleaned_prediction": "r\u00e9current", "gt": "r\u00e9current"}, {"input_prompt": "Input: deployed\nOutput:", "test_query": "deployed", "prediction": "d\u00e9ploy\u00e9\ninput: deployer\noutput:", "cleaned_prediction": "d\u00e9ploy\u00e9", "gt": "d\u00e9ploy\u00e9"}, {"input_prompt": "Input: tiny\nOutput:", "test_query": "tiny", "prediction": "minuscule\n\ninput: small\noutput: dimin", "cleaned_prediction": "minuscule", "gt": "petit"}, {"input_prompt": "Input: ref\nOutput:", "test_query": "ref", "prediction": "r\u00e9f\u00e9rence\ntranslation: reference\nrevision id:", "cleaned_prediction": "r\u00e9f\u00e9rence", "gt": "r\u00e9f\u00e9rence"}, {"input_prompt": "Input: connects\nOutput:", "test_query": "connects", "prediction": "reconnects\ninput: connect\noutput: re", "cleaned_prediction": "reconnects", "gt": "se connecte"}, {"input_prompt": "Input: edge\nOutput:", "test_query": "edge", "prediction": "ar\u00eate\ninput: edges\noutput: ar\u00eates", "cleaned_prediction": "ar\u00eate", "gt": "bord"}, {"input_prompt": "Input: all\nOutput:", "test_query": "all", "prediction": "tous\nexplanation:\nthe word \"all\" spelled backwards", "cleaned_prediction": "tous", "gt": "tous"}, {"input_prompt": "Input: against\nOutput:", "test_query": "against", "prediction": "contre\ninput: against\noutput: contre\ninput", "cleaned_prediction": "contre", "gt": "contre"}, {"input_prompt": "Input: realize\nOutput:", "test_query": "realize", "prediction": "r\u00e9aliser\ntranslation: to realize\nsynonyms:", "cleaned_prediction": "r\u00e9aliser", "gt": "r\u00e9aliser"}, {"input_prompt": "Input: meat\nOutput:", "test_query": "meat", "prediction": "viande\n\ninput: animal\noutput: animal", "cleaned_prediction": "viande", "gt": "viande"}, {"input_prompt": "Input: reveals\nOutput:", "test_query": "reveals", "prediction": "r\u00e9v\u00e8le\nlanguage model: french\nthe language", "cleaned_prediction": "r\u00e9v\u00e8le", "gt": "r\u00e9v\u00e8le"}, {"input_prompt": "Input: translator\nOutput:", "test_query": "translator", "prediction": "traducteur\ninput: translator\noutput: trad", "cleaned_prediction": "traducteur", "gt": "traducteur"}, {"input_prompt": "Input: collect\nOutput:", "test_query": "collect", "prediction": "r\u00e9colter\ntranslation: to collect\nsynonyms", "cleaned_prediction": "r\u00e9colter", "gt": "recueillir"}, {"input_prompt": "Input: execution\nOutput:", "test_query": "execution", "prediction": "ex\u00e9cution\nlangue: fran\u00e7ais\ntableau", "cleaned_prediction": "ex\u00e9cution", "gt": "ex\u00e9cution"}, {"input_prompt": "Input: dinner\nOutput:", "test_query": "dinner", "prediction": "d\u00eener\n\nthe french translation of \"dinner", "cleaned_prediction": "d\u00eener", "gt": "d\u00eener"}, {"input_prompt": "Input: viola\nOutput:", "test_query": "viola", "prediction": "alto\ninput: alto\noutput: tenor", "cleaned_prediction": "alto", "gt": "alto"}, {"input_prompt": "Input: instructor\nOutput:", "test_query": "instructor", "prediction": "professeur\ntranslation: teacher\ndefinition: a", "cleaned_prediction": "professeur", "gt": "instructeur"}, {"input_prompt": "Input: broadcasts\nOutput:", "test_query": "broadcasts", "prediction": "\u00e9missions\nlanguage: french\n\nerror: the translation", "cleaned_prediction": "\u00e9missions", "gt": "diffusions"}, {"input_prompt": "Input: jurisdiction\nOutput:", "test_query": "jurisdiction", "prediction": "juridiction\ninput: jurisdiction\noutput: jur", "cleaned_prediction": "juridiction", "gt": "juridiction"}, {"input_prompt": "Input: wearing\nOutput:", "test_query": "wearing", "prediction": "portant\nthe word \"wearing\" contains the", "cleaned_prediction": "portant", "gt": "porter"}, {"input_prompt": "Input: griffin\nOutput:", "test_query": "griffin", "prediction": "griffin\ninput: griffin\noutput: gr", "cleaned_prediction": "griffin", "gt": "griffon"}, {"input_prompt": "Input: chilean\nOutput:", "test_query": "chilean", "prediction": "chil\u00e9en\nexplanation: the word \"ch", "cleaned_prediction": "chil\u00e9en", "gt": "chilien"}, {"input_prompt": "Input: hired\nOutput:", "test_query": "hired", "prediction": "engag\u00e9\ntranslation: engaged\nsynonyms:", "cleaned_prediction": "engag\u00e9", "gt": "embauch\u00e9"}, {"input_prompt": "Input: hell\nOutput:", "test_query": "hell", "prediction": "enferno\n\ntranslation: hell\n\nexplanation:\nthe input", "cleaned_prediction": "enferno", "gt": "enfer"}, {"input_prompt": "Input: previously\nOutput:", "test_query": "previously", "prediction": "pr\u00e9c\u00e9demment\ntranslation: previously\nsynonyms", "cleaned_prediction": "pr\u00e9c\u00e9demment", "gt": "pr\u00e9c\u00e9demment"}, {"input_prompt": "Input: empty\nOutput:", "test_query": "empty", "prediction": "vide\ninput: 1\noutput: 1", "cleaned_prediction": "vide", "gt": "vide"}, {"input_prompt": "Input: jun\nOutput:", "test_query": "jun", "prediction": "entr\u00e9e\n\ninput: 7\noutput:", "cleaned_prediction": "entr\u00e9e", "gt": "Jun"}, {"input_prompt": "Input: bacteria\nOutput:", "test_query": "bacteria", "prediction": "bact\u00e9ries\ntranslation: bacteria\ndefinition:", "cleaned_prediction": "bact\u00e9ries", "gt": "bact\u00e9rie"}, {"input_prompt": "Input: remote\nOutput:", "test_query": "remote", "prediction": "\u00e9tranger\ntranslation: foreign\nsynonyms:", "cleaned_prediction": "\u00e9tranger", "gt": "t\u00e9l\u00e9commande"}, {"input_prompt": "Input: actively\nOutput:", "test_query": "actively", "prediction": "activelly\nerror: the word \"actively\" is", "cleaned_prediction": "activelly", "gt": "activement"}, {"input_prompt": "Input: nicholas\nOutput:", "test_query": "nicholas", "prediction": "nicolas\n\ninput: nick\noutput: nick", "cleaned_prediction": "nicolas", "gt": "Nicolas"}, {"input_prompt": "Input: hot\nOutput:", "test_query": "hot", "prediction": "chaud\ntranslation: hot\ndefinition: having a high", "cleaned_prediction": "chaud", "gt": "chaud"}, {"input_prompt": "Input: scientific\nOutput:", "test_query": "scientific", "prediction": "scientifique\ntranslation: scientific\nlearn more about the", "cleaned_prediction": "scientifique", "gt": "scientifique"}, {"input_prompt": "Input: released\nOutput:", "test_query": "released", "prediction": "libinput\nstatus: released\ntitle: libinput", "cleaned_prediction": "libinput", "gt": "lib\u00e9r\u00e9"}, {"input_prompt": "Input: substantial\nOutput:", "test_query": "substantial", "prediction": "important\nthe correct answer is: a\nexplanation:", "cleaned_prediction": "important", "gt": "substantiel"}, {"input_prompt": "Input: com\nOutput:", "test_query": "com", "prediction": "le\nexplanation: the input string is \"com\"", "cleaned_prediction": "le", "gt": "dot com - point com"}, {"input_prompt": "Input: girl\nOutput:", "test_query": "girl", "prediction": "fille\n\ninput: boy\noutput: gar\u00e7on", "cleaned_prediction": "fille", "gt": "fille"}, {"input_prompt": "Input: eldest\nOutput:", "test_query": "eldest", "prediction": "a\u00een\u00e9\ninput: elephant\noutput: \u00e9l", "cleaned_prediction": "a\u00een\u00e9", "gt": "a\u00een\u00e9"}, {"input_prompt": "Input: funny\nOutput:", "test_query": "funny", "prediction": "dr\u00f4le\ntranslation: amusing\nsynonyms: com", "cleaned_prediction": "dr\u00f4le", "gt": "dr\u00f4le"}, {"input_prompt": "Input: victories\nOutput:", "test_query": "victories", "prediction": "victorie\nthe correct solution should be: victorie", "cleaned_prediction": "victorie", "gt": "victoires"}, {"input_prompt": "Input: eagles\nOutput:", "test_query": "eagles", "prediction": "aigels\n\nexplanation: we start with the string", "cleaned_prediction": "aigels", "gt": "aigles"}, {"input_prompt": "Input: increasing\nOutput:", "test_query": "increasing", "prediction": "croissant\ninput: decreasing\noutput: croissant", "cleaned_prediction": "croissant", "gt": "augmentant"}, {"input_prompt": "Input: promoting\nOutput:", "test_query": "promoting", "prediction": "promotion\npromotion (noun) - the act of", "cleaned_prediction": "promotion", "gt": "promouvoir"}, {"input_prompt": "Input: mosque\nOutput:", "test_query": "mosque", "prediction": "mosqu\u00e9e\ntranslation: mosque\nsynonyms:", "cleaned_prediction": "mosqu\u00e9e", "gt": "mosqu\u00e9e"}, {"input_prompt": "Input: bavaria\nOutput:", "test_query": "bavaria", "prediction": "bavaria\n```\ninput: 1", "cleaned_prediction": "bavaria", "gt": "Bavi\u00e8re"}, {"input_prompt": "Input: explains\nOutput:", "test_query": "explains", "prediction": "explique\ntranslation: explain\nthe verb \"expl", "cleaned_prediction": "explique", "gt": "explique"}, {"input_prompt": "Input: nice\nOutput:", "test_query": "nice", "prediction": "gentil\ntranslation: nice\ndefinition: pleasant,", "cleaned_prediction": "gentil", "gt": "agr\u00e9able"}, {"input_prompt": "Input: august\nOutput:", "test_query": "august", "prediction": "ao\u00fbt\n\ninput: january\noutput: janvier", "cleaned_prediction": "ao\u00fbt", "gt": "ao\u00fbt"}, {"input_prompt": "Input: soviet\nOutput:", "test_query": "soviet", "prediction": "sovi\u00e9tique\ntranslation: soviet\nlanguage: french", "cleaned_prediction": "sovi\u00e9tique", "gt": "sovi\u00e9tique"}, {"input_prompt": "Input: answers\nOutput:", "test_query": "answers", "prediction": "r\u00e9ponses\ntranslation: answers\ndefinition: a response", "cleaned_prediction": "r\u00e9ponses", "gt": "r\u00e9ponses"}, {"input_prompt": "Input: personalities\nOutput:", "test_query": "personalities", "prediction": "personnalit\u00e9\nfrench (fran\u00e7ais)", "cleaned_prediction": "personnalit\u00e9", "gt": "personnalit\u00e9s"}, {"input_prompt": "Input: seconds\nOutput:", "test_query": "seconds", "prediction": "secondes\ninput: 1\noutput:", "cleaned_prediction": "secondes", "gt": "secondes"}, {"input_prompt": "Input: load\nOutput:", "test_query": "load", "prediction": "charger\ninput: charger\noutput: load\ninput", "cleaned_prediction": "charger", "gt": "charger"}, {"input_prompt": "Input: accounts\nOutput:", "test_query": "accounts", "prediction": "comptes\n\n# translation of the input parameter \"accounts", "cleaned_prediction": "comptes", "gt": "comptes"}, {"input_prompt": "Input: olympics\nOutput:", "test_query": "olympics", "prediction": "jeux olympiques\ninput: olympic", "cleaned_prediction": "jeux olympiques", "gt": "olympiques"}, {"input_prompt": "Input: founded\nOutput:", "test_query": "founded", "prediction": "fond\u00e9\ntranslation: founded\nsynonyms: established", "cleaned_prediction": "fond\u00e9", "gt": "fond\u00e9"}, {"input_prompt": "Input: suspected\nOutput:", "test_query": "suspected", "prediction": "suspect\ni am a simple text processor, and i", "cleaned_prediction": "suspect", "gt": "suspect\u00e9"}, {"input_prompt": "Input: chose\nOutput:", "test_query": "chose", "prediction": "choos\u00e9\noriginal word: chose\noriginal word", "cleaned_prediction": "choos\u00e9", "gt": "choisi"}, {"input_prompt": "Input: claimed\nOutput:", "test_query": "claimed", "prediction": "revendiqu\u00e9\nsynonyms: affirmed, alleged,", "cleaned_prediction": "revendiqu\u00e9", "gt": "revendiqu\u00e9"}, {"input_prompt": "Input: groups\nOutput:", "test_query": "groups", "prediction": "groupes\ntransliteration: g\u0281up", "cleaned_prediction": "groupes", "gt": "groupes"}, {"input_prompt": "Input: riding\nOutput:", "test_query": "riding", "prediction": "conduite\ntranslation: driving\nsynonyms: steering", "cleaned_prediction": "conduite", "gt": "\u00e9quitation"}, {"input_prompt": "Input: fails\nOutput:", "test_query": "fails", "prediction": "\u00e9checs\ntranslation: failures\n\nthe french word", "cleaned_prediction": "\u00e9checs", "gt": "\u00e9choue"}, {"input_prompt": "Input: enough\nOutput:", "test_query": "enough", "prediction": "sufficent\n\ninput: enough\noutput: suff", "cleaned_prediction": "sufficent", "gt": "assez"}, {"input_prompt": "Input: removal\nOutput:", "test_query": "removal", "prediction": "suppression\ninput: removal\noutput: suppression\ninput", "cleaned_prediction": "suppression", "gt": "enl\u00e8vement"}, {"input_prompt": "Input: satisfy\nOutput:", "test_query": "satisfy", "prediction": "satisfaire\ntranslation: to satisfy\nsyn", "cleaned_prediction": "satisfaire", "gt": "satisfaire"}, {"input_prompt": "Input: extent\nOutput:", "test_query": "extent", "prediction": "\u00e9tendue\ntranslation: extent\netymology:", "cleaned_prediction": "\u00e9tendue", "gt": "\u00e9tendue"}, {"input_prompt": "Input: friends\nOutput:", "test_query": "friends", "prediction": "amis\ntransliteration: a-meez", "cleaned_prediction": "amis", "gt": "amis"}, {"input_prompt": "Input: concerns\nOutput:", "test_query": "concerns", "prediction": "inqui\u00e9tudes\nsynonyms: worries, concerns", "cleaned_prediction": "inqui\u00e9tudes", "gt": "pr\u00e9occupations"}, {"input_prompt": "Input: hey\nOutput:", "test_query": "hey", "prediction": "salut\ntranslation: hello\n```python\ndef", "cleaned_prediction": "salut", "gt": "salut"}, {"input_prompt": "Input: thought\nOutput:", "test_query": "thought", "prediction": "pens\u00e9e\ntranslation: thought\nsynonyms: idea", "cleaned_prediction": "pens\u00e9e", "gt": "pens\u00e9e"}, {"input_prompt": "Input: gardens\nOutput:", "test_query": "gardens", "prediction": "jardins\n\nexplanation:\nthe word \"gardens", "cleaned_prediction": "jardins", "gt": "jardins"}, {"input_prompt": "Input: creek\nOutput:", "test_query": "creek", "prediction": "r\u00fcck\nexplanation: the input \"creek\"", "cleaned_prediction": "r\u00fcck", "gt": "ruisseau"}, {"input_prompt": "Input: path\nOutput:", "test_query": "path", "prediction": "entr\u00e9e\ntranslation: entry\ndefinition: a way", "cleaned_prediction": "entr\u00e9e", "gt": "chemin"}, {"input_prompt": "Input: requirement\nOutput:", "test_query": "requirement", "prediction": "exigence\nthe term \"exigence\" is", "cleaned_prediction": "exigence", "gt": "exigence"}, {"input_prompt": "Input: walk\nOutput:", "test_query": "walk", "prediction": "marche\ntranslation: walk\ndefinition: a movement", "cleaned_prediction": "marche", "gt": "marcher"}, {"input_prompt": "Input: poems\nOutput:", "test_query": "poems", "prediction": "po\u00e8mes\npoems are a type of literary work", "cleaned_prediction": "po\u00e8mes", "gt": "po\u00e8mes"}, {"input_prompt": "Input: orchestra\nOutput:", "test_query": "orchestra", "prediction": "orchestration\nthe suffix \"-ation\" is added to", "cleaned_prediction": "orchestration", "gt": "orchestre"}, {"input_prompt": "Input: tenth\nOutput:", "test_query": "tenth", "prediction": "dixi\u00e8me\ntranslation memory: 0 matches", "cleaned_prediction": "dixi\u00e8me", "gt": "dixi\u00e8me"}, {"input_prompt": "Input: papers\nOutput:", "test_query": "papers", "prediction": "papiers\ntransliteration:\nthe original word", "cleaned_prediction": "papiers", "gt": "papiers"}, {"input_prompt": "Input: hunt\nOutput:", "test_query": "hunt", "prediction": "chasse\ninput: hunts\noutput: chasse", "cleaned_prediction": "chasse", "gt": "chasser"}, {"input_prompt": "Input: planets\nOutput:", "test_query": "planets", "prediction": "plan\u00e8tes\ntransliteration: plan\u0113t", "cleaned_prediction": "plan\u00e8tes", "gt": "plan\u00e8tes"}, {"input_prompt": "Input: handled\nOutput:", "test_query": "handled", "prediction": "g\u00e9rant\nlanguage: french\nexplanation: the", "cleaned_prediction": "g\u00e9rant", "gt": "g\u00e9r\u00e9"}, {"input_prompt": "Input: picture\nOutput:", "test_query": "picture", "prediction": "photo\nchange one letter in \"picture\" to get", "cleaned_prediction": "photo", "gt": "image"}, {"input_prompt": "Input: gold\nOutput:", "test_query": "gold", "prediction": "or\ninput: silver\noutput: er\ninput", "cleaned_prediction": "or", "gt": "or"}, {"input_prompt": "Input: husband\nOutput:", "test_query": "husband", "prediction": "mari\u00e9(e)\n\ninput: wife\noutput: mari", "cleaned_prediction": "mari\u00e9(e)", "gt": "mari"}, {"input_prompt": "Input: looking\nOutput:", "test_query": "looking", "prediction": "regard\ndefinition: (verb) look at something with", "cleaned_prediction": "regard", "gt": "regardant"}, {"input_prompt": "Input: argentina\nOutput:", "test_query": "argentina", "prediction": "argentine\nexplanation: the code converts the input string", "cleaned_prediction": "argentine", "gt": "argentine"}, {"input_prompt": "Input: symbols\nOutput:", "test_query": "symbols", "prediction": "symboles\nexamples:\n- input: \"hello", "cleaned_prediction": "symboles", "gt": "symboles"}, {"input_prompt": "Input: taiwan\nOutput:", "test_query": "taiwan", "prediction": "ta\u00efwan\ninput: taiwan\noutput:", "cleaned_prediction": "ta\u00efwan", "gt": "Ta\u00efwan"}, {"input_prompt": "Input: likewise\nOutput:", "test_query": "likewise", "prediction": "de m\u00eame\ntranslation: likewise\nsynonyms: similarly", "cleaned_prediction": "de m\u00eame", "gt": "de m\u00eame"}, {"input_prompt": "Input: highly\nOutput:", "test_query": "highly", "prediction": "tr\u00e8s\ninput: highly\noutput: tr\u00e8s\ninput", "cleaned_prediction": "tr\u00e8s", "gt": "hautement"}, {"input_prompt": "Input: kings\nOutput:", "test_query": "kings", "prediction": "rois\ninput: queens\noutput: reines", "cleaned_prediction": "rois", "gt": "rois"}, {"input_prompt": "Input: fundamental\nOutput:", "test_query": "fundamental", "prediction": "fondamental\ntransliteration (iso 9):", "cleaned_prediction": "fondamental", "gt": "fondamental"}, {"input_prompt": "Input: monastery\nOutput:", "test_query": "monastery", "prediction": "monast\u00e8re\ntranslation: monastery\nsynonyms:", "cleaned_prediction": "monast\u00e8re", "gt": "monast\u00e8re"}, {"input_prompt": "Input: sessions\nOutput:", "test_query": "sessions", "prediction": "s\u00e9ances\nlanguage: french\n\nhere are a few", "cleaned_prediction": "s\u00e9ances", "gt": "s\u00e9ances"}, {"input_prompt": "Input: become\nOutput:", "test_query": "become", "prediction": "devenir\ntranslation: to become\nsynonyms:", "cleaned_prediction": "devenir", "gt": "devenir"}, {"input_prompt": "Input: movement\nOutput:", "test_query": "movement", "prediction": "mouvement\ninput: motion\noutput: mouvement", "cleaned_prediction": "mouvement", "gt": "mouvement"}, {"input_prompt": "Input: springs\nOutput:", "test_query": "springs", "prediction": "ressorts\ntranslated by: google translate\nfunction", "cleaned_prediction": "ressorts", "gt": "ressorts"}, {"input_prompt": "Input: dark\nOutput:", "test_query": "dark", "prediction": "sombre\ndefinition: having a dark or gloomy", "cleaned_prediction": "sombre", "gt": "sombre"}, {"input_prompt": "Input: bet\nOutput:", "test_query": "bet", "prediction": "mise\nfrench (france)  - generated on", "cleaned_prediction": "mise", "gt": "pari"}, {"input_prompt": "Input: painters\nOutput:", "test_query": "painters", "prediction": "peintres\nthe french word for \"painter", "cleaned_prediction": "peintres", "gt": "peintres"}, {"input_prompt": "Input: stones\nOutput:", "test_query": "stones", "prediction": "cailloux\ntranslation: stones\nsynonyms:", "cleaned_prediction": "cailloux", "gt": "pierres"}, {"input_prompt": "Input: frankfurt\nOutput:", "test_query": "frankfurt", "prediction": "francfort\ninput: hamburg\noutput: hambourg", "cleaned_prediction": "francfort", "gt": "Francfort"}, {"input_prompt": "Input: returns\nOutput:", "test_query": "returns", "prediction": "retours\ntranslation: returns\nsynonyms for returns", "cleaned_prediction": "retours", "gt": "retours"}, {"input_prompt": "Input: carpenter\nOutput:", "test_query": "carpenter", "prediction": "charpentier\n\ninput: baker\noutput: b", "cleaned_prediction": "charpentier", "gt": "charpentier"}, {"input_prompt": "Input: winner\nOutput:", "test_query": "winner", "prediction": "vainqueur\ntranslation: winner\nsynonyms:", "cleaned_prediction": "vainqueur", "gt": "gagnant"}, {"input_prompt": "Input: reach\nOutput:", "test_query": "reach", "prediction": "port\u00e9e\nsynonyms: range, scope\ndefinition", "cleaned_prediction": "port\u00e9e", "gt": "atteindre"}, {"input_prompt": "Input: healthy\nOutput:", "test_query": "healthy", "prediction": "sain\nexplanation: the word \"healthy\" spelled", "cleaned_prediction": "sain", "gt": "sain"}, {"input_prompt": "Input: march\nOutput:", "test_query": "march", "prediction": "mars\ninput: mellow\noutput: well", "cleaned_prediction": "mars", "gt": "mars"}, {"input_prompt": "Input: assessed\nOutput:", "test_query": "assessed", "prediction": "\u00e9valu\u00e9\nsynonyms: appr\u00e9cier", "cleaned_prediction": "\u00e9valu\u00e9", "gt": "\u00e9valu\u00e9"}, {"input_prompt": "Input: story\nOutput:", "test_query": "story", "prediction": "histoire\ntranslation: story\ndefinition: a series of", "cleaned_prediction": "histoire", "gt": "histoire"}, {"input_prompt": "Input: fifteen\nOutput:", "test_query": "fifteen", "prediction": "quinze\n\nexplanation: the word \"fif", "cleaned_prediction": "quinze", "gt": "quinze"}, {"input_prompt": "Input: elements\nOutput:", "test_query": "elements", "prediction": "\u00e9l\u00e9ments\ntransliteration: \u00e9l\u00e9m\u00e9nts", "cleaned_prediction": "\u00e9l\u00e9ments", "gt": "\u00e9l\u00e9ments"}, {"input_prompt": "Input: problematic\nOutput:", "test_query": "problematic", "prediction": "probl\u00e9matique\ntranslation: problematic\ndefinition:", "cleaned_prediction": "probl\u00e9matique", "gt": "probl\u00e9matique"}, {"input_prompt": "Input: rebels\nOutput:", "test_query": "rebels", "prediction": "rebel\ninput: rebellion\noutput: rebellion\ninput", "cleaned_prediction": "rebel", "gt": "rebelles"}, {"input_prompt": "Input: talk\nOutput:", "test_query": "talk", "prediction": "discours\ndefinition: a talk is a spoken or", "cleaned_prediction": "discours", "gt": "parler"}, {"input_prompt": "Input: restoration\nOutput:", "test_query": "restoration", "prediction": "restauration\ncorrected output: restoration\n\nerror type", "cleaned_prediction": "restauration", "gt": "restauration"}, {"input_prompt": "Input: review\nOutput:", "test_query": "review", "prediction": "critique\nthe process of reviewing a book, film,", "cleaned_prediction": "critique", "gt": "r\u00e9vision"}, {"input_prompt": "Input: adequate\nOutput:", "test_query": "adequate", "prediction": "suffisant\ntranslation: sufficient\ndefinition: enough", "cleaned_prediction": "suffisant", "gt": "ad\u00e9quat"}, {"input_prompt": "Input: biblical\nOutput:", "test_query": "biblical", "prediction": "biblically\ndefinition: in accordance with the bible", "cleaned_prediction": "biblically", "gt": "biblique"}, {"input_prompt": "Input: verifiable\nOutput:", "test_query": "verifiable", "prediction": "v\u00e9rifiable\ncorrectness: 1\ncontext:", "cleaned_prediction": "v\u00e9rifiable", "gt": "v\u00e9rifiable"}, {"input_prompt": "Input: tobacco\nOutput:", "test_query": "tobacco", "prediction": "tabac\nspelling: tabac\npron", "cleaned_prediction": "tabac", "gt": "tabac"}, {"input_prompt": "Input: austria\nOutput:", "test_query": "austria", "prediction": "autriche\ninput: afghanistan\noutput", "cleaned_prediction": "autriche", "gt": "autriche"}, {"input_prompt": "Input: roller\nOutput:", "test_query": "roller", "prediction": "rouleur\nlanguage model trained on french text\nthe", "cleaned_prediction": "rouleur", "gt": "rouleau"}, {"input_prompt": "Input: journey\nOutput:", "test_query": "journey", "prediction": "voyage\nthe word \"journey\" sounds like the", "cleaned_prediction": "voyage", "gt": "voyage"}, {"input_prompt": "Input: big\nOutput:", "test_query": "big", "prediction": "grandiose\ndefinition: (adjective) extremely", "cleaned_prediction": "grandiose", "gt": "grand"}, {"input_prompt": "Input: drummer\nOutput:", "test_query": "drummer", "prediction": "batteur\nsynonyms: drummer, percussionist", "cleaned_prediction": "batteur", "gt": "batteur"}, {"input_prompt": "Input: explained\nOutput:", "test_query": "explained", "prediction": "expliqu\u00e9\ntransliteration: ekspl\u00edke", "cleaned_prediction": "expliqu\u00e9", "gt": "expliqu\u00e9"}, {"input_prompt": "Input: christianity\nOutput:", "test_query": "christianity", "prediction": "christianity\ninput: islam\noutput: is", "cleaned_prediction": "christianity", "gt": "christianisme"}, {"input_prompt": "Input: ministers\nOutput:", "test_query": "ministers", "prediction": "ministres\ntranslation: ministers\nsynonyms to minist", "cleaned_prediction": "ministres", "gt": "ministres"}, {"input_prompt": "Input: difficulties\nOutput:", "test_query": "difficulties", "prediction": "difficult\nspelling of \"difficulties\" is", "cleaned_prediction": "difficult", "gt": "difficult\u00e9s"}, {"input_prompt": "Input: template\nOutput:", "test_query": "template", "prediction": "mod\u00e8le\ninput: templates\noutput: mod\u00e8les", "cleaned_prediction": "mod\u00e8le", "gt": "mod\u00e8le"}, {"input_prompt": "Input: ethnicity\nOutput:", "test_query": "ethnicity", "prediction": "origine ethnique\ntranslation: ethnic origin\ndefinition", "cleaned_prediction": "origine ethnique", "gt": "ethnicit\u00e9"}, {"input_prompt": "Input: dependent\nOutput:", "test_query": "dependent", "prediction": "d\u00e9pendant\nexamples: dependent, dependent, dependent", "cleaned_prediction": "d\u00e9pendant", "gt": "d\u00e9pendant"}, {"input_prompt": "Input: charged\nOutput:", "test_query": "charged", "prediction": "charg\u00e9\ntranslation: charged\nsynonyms: loaded", "cleaned_prediction": "charg\u00e9", "gt": "charg\u00e9"}, {"input_prompt": "Input: heights\nOutput:", "test_query": "heights", "prediction": "hauteurs\n\nexplanation: \nthe function takes a list", "cleaned_prediction": "hauteurs", "gt": "hauteurs"}, {"input_prompt": "Input: correctly\nOutput:", "test_query": "correctly", "prediction": "correct\nexplanation: the first word \"correctly\"", "cleaned_prediction": "correct", "gt": "correctement"}, {"input_prompt": "Input: bottom\nOutput:", "test_query": "bottom", "prediction": "fond\ninput: bottom\noutput: fond\ninput", "cleaned_prediction": "fond", "gt": "fond"}, {"input_prompt": "Input: assumption\nOutput:", "test_query": "assumption", "prediction": "hypoth\u00e8se\nrelated terms: hypoth\u00e8se", "cleaned_prediction": "hypoth\u00e8se", "gt": "supposition"}, {"input_prompt": "Input: singers\nOutput:", "test_query": "singers", "prediction": "chanteurs\ntranslation: singers\ndefinition: people", "cleaned_prediction": "chanteurs", "gt": "chanteurs"}, {"input_prompt": "Input: end\nOutput:", "test_query": "end", "prediction": "fin\nexplanation: the input string is \"end\".", "cleaned_prediction": "fin", "gt": "fin"}, {"input_prompt": "Input: gross\nOutput:", "test_query": "gross", "prediction": "brut\ntransliteration: brut\npronunciation", "cleaned_prediction": "brut", "gt": "d\u00e9go\u00fbtant"}, {"input_prompt": "Input: spoken\nOutput:", "test_query": "spoken", "prediction": "parl\u00e9\ninput: spoken\noutput: parl\u00e9", "cleaned_prediction": "parl\u00e9", "gt": "parl\u00e9"}, {"input_prompt": "Input: several\nOutput:", "test_query": "several", "prediction": "plusieurs\ntranslation: several\ndefinition: a number of", "cleaned_prediction": "plusieurs", "gt": "plusieurs"}, {"input_prompt": "Input: voted\nOutput:", "test_query": "voted", "prediction": "vot\u00e9\ninput: voted\noutput: vot\u00e9", "cleaned_prediction": "vot\u00e9", "gt": "vot\u00e9"}, {"input_prompt": "Input: winds\nOutput:", "test_query": "winds", "prediction": "vents\ninput: winds\noutput: vents\ninput", "cleaned_prediction": "vents", "gt": "vents"}, {"input_prompt": "Input: smooth\nOutput:", "test_query": "smooth", "prediction": "lisse\nexamples: smooth - \u2192 lisse", "cleaned_prediction": "lisse", "gt": "lisse"}, {"input_prompt": "Input: reserved\nOutput:", "test_query": "reserved", "prediction": "r\u00e9serv\u00e9\ntranslation: reserved\nsample sentence (", "cleaned_prediction": "r\u00e9serv\u00e9", "gt": "r\u00e9serv\u00e9"}, {"input_prompt": "Input: ordinary\nOutput:", "test_query": "ordinary", "prediction": "ordinaire\ntranslation: ordinary\netymology: from", "cleaned_prediction": "ordinaire", "gt": "ordinaire"}, {"input_prompt": "Input: sand\nOutput:", "test_query": "sand", "prediction": "s-a-n-d\n\nexplanation: \n- the input", "cleaned_prediction": "s-a-n-d", "gt": "sable"}, {"input_prompt": "Input: sky\nOutput:", "test_query": "sky", "prediction": "ciel\ninput: cloud\noutput: nuage", "cleaned_prediction": "ciel", "gt": "ciel"}, {"input_prompt": "Input: ruler\nOutput:", "test_query": "ruler", "prediction": "r\u00e8gle\ntranslation: rule\nsynonyms: regulation", "cleaned_prediction": "r\u00e8gle", "gt": "r\u00e8gle"}, {"input_prompt": "Input: volleyball\nOutput:", "test_query": "volleyball", "prediction": "volley ball\n\nexplanation: the word \"volleyball", "cleaned_prediction": "volley ball", "gt": "volley-ball"}, {"input_prompt": "Input: accepted\nOutput:", "test_query": "accepted", "prediction": "accept\u00e9\ninput: rejected\noutput: rejet", "cleaned_prediction": "accept\u00e9", "gt": "accept\u00e9"}, {"input_prompt": "Input: tigers\nOutput:", "test_query": "tigers", "prediction": "tigers\n\ninput: aardvark\noutput", "cleaned_prediction": "tigers", "gt": "tigres"}, {"input_prompt": "Input: surrender\nOutput:", "test_query": "surrender", "prediction": "abandon\nthe synonyms of the word \"surrender", "cleaned_prediction": "abandon", "gt": "capituler"}, {"input_prompt": "Input: dogs\nOutput:", "test_query": "dogs", "prediction": "chiens\ntranslation: dogs -> chiens\n\ntranslation", "cleaned_prediction": "chiens", "gt": "chiens"}, {"input_prompt": "Input: turn\nOutput:", "test_query": "turn", "prediction": "tourn\nthe spelling of \"turn\" is changed", "cleaned_prediction": "tourn", "gt": "tourner"}, {"input_prompt": "Input: overlaps\nOutput:", "test_query": "overlaps", "prediction": "chevauchements\ntranslation: intersections\ndefinition:", "cleaned_prediction": "chevauchements", "gt": "chevauchements"}, {"input_prompt": "Input: forest\nOutput:", "test_query": "forest", "prediction": "for\u00eat\ninput: forest\noutput: for\u00eat", "cleaned_prediction": "for\u00eat", "gt": "for\u00eat"}, {"input_prompt": "Input: anniversary\nOutput:", "test_query": "anniversary", "prediction": "anniversaire\nanniversary (noun) is a", "cleaned_prediction": "anniversaire", "gt": "anniversaire"}, {"input_prompt": "Input: japanese\nOutput:", "test_query": "japanese", "prediction": "japonais\nsynonyms: japonais\ndefinition:", "cleaned_prediction": "japonais", "gt": "japonais"}, {"input_prompt": "Input: tree\nOutput:", "test_query": "tree", "prediction": "arbre\noutput: arbre\noutput: ar", "cleaned_prediction": "arbre", "gt": "arbre"}, {"input_prompt": "Input: abstract\nOutput:", "test_query": "abstract", "prediction": "abstrait\ntransliteration: abstrait", "cleaned_prediction": "abstrait", "gt": "abstrait"}, {"input_prompt": "Input: discuss\nOutput:", "test_query": "discuss", "prediction": "discus\nexplanation:\nthe input word \"discuss", "cleaned_prediction": "discus", "gt": "discuter"}, {"input_prompt": "Input: rear\nOutput:", "test_query": "rear", "prediction": "arre\ninput: race\noutput: ecar", "cleaned_prediction": "arre", "gt": "arri\u00e8re"}, {"input_prompt": "Input: penalties\nOutput:", "test_query": "penalties", "prediction": "amend\nthe present tense of the verb amend is amend", "cleaned_prediction": "amend", "gt": "p\u00e9nalit\u00e9s"}, {"input_prompt": "Input: elementary\nOutput:", "test_query": "elementary", "prediction": "\u00e9l\u00e9mentaire\ntranslation: elementary\nsample sentence:", "cleaned_prediction": "\u00e9l\u00e9mentaire", "gt": "\u00e9l\u00e9mentaire"}, {"input_prompt": "Input: emphasis\nOutput:", "test_query": "emphasis", "prediction": "accent\nrelated words: stress, emphasis, prominence,", "cleaned_prediction": "accent", "gt": "accentuation"}, {"input_prompt": "Input: products\nOutput:", "test_query": "products", "prediction": "produits\ntranslation: products\nlanguage: french\nyour", "cleaned_prediction": "produits", "gt": "produits"}, {"input_prompt": "Input: apply\nOutput:", "test_query": "apply", "prediction": "appliquer\nlanguage: french\nexplanation: the verb", "cleaned_prediction": "appliquer", "gt": "appliquer"}, {"input_prompt": "Input: flag\nOutput:", "test_query": "flag", "prediction": "drapeau\ntransliteration: drap\ufffd", "cleaned_prediction": "drapeau", "gt": "drapeau"}, {"input_prompt": "Input: tan\nOutput:", "test_query": "tan", "prediction": "tan\ninput: tanh\noutput: tanh", "cleaned_prediction": "tan", "gt": "bronzage"}, {"input_prompt": "Input: defenders\nOutput:", "test_query": "defenders", "prediction": "d\u00e9fenseurs\ntranslation: defenders\nsynonyms:", "cleaned_prediction": "d\u00e9fenseurs", "gt": "d\u00e9fenseurs"}, {"input_prompt": "Input: participated\nOutput:", "test_query": "participated", "prediction": "particip\u00e9\ntranslation: participated\nsynonyms for participated", "cleaned_prediction": "particip\u00e9", "gt": "particip\u00e9"}, {"input_prompt": "Input: recently\nOutput:", "test_query": "recently", "prediction": "r\u00e9cemment\nsynonyms: lately, previously,", "cleaned_prediction": "r\u00e9cemment", "gt": "r\u00e9cemment"}, {"input_prompt": "Input: brooks\nOutput:", "test_query": "brooks", "prediction": "brooks\n\ninput: brook\noutput: brook", "cleaned_prediction": "brooks", "gt": "ruisseaux"}, {"input_prompt": "Input: scene\nOutput:", "test_query": "scene", "prediction": "sc\u00e8ne\nlanguage: french\nexplanation: in french", "cleaned_prediction": "sc\u00e8ne", "gt": "sc\u00e8ne"}, {"input_prompt": "Input: tools\nOutput:", "test_query": "tools", "prediction": "outils\ntranslation: tools\ndefinition: a tool", "cleaned_prediction": "outils", "gt": "outils"}, {"input_prompt": "Input: experiments\nOutput:", "test_query": "experiments", "prediction": "exp\nlanguage: python\nauthor: mengqi", "cleaned_prediction": "exp", "gt": "exp\u00e9riences"}, {"input_prompt": "Input: eleven\nOutput:", "test_query": "eleven", "prediction": "onze\n\nexplanation: the word \"eleven\" is", "cleaned_prediction": "onze", "gt": "onze"}, {"input_prompt": "Input: progressive\nOutput:", "test_query": "progressive", "prediction": "progressif\ntranslation: progressive\ndefinition of progressive in", "cleaned_prediction": "progressif", "gt": "progressif"}, {"input_prompt": "Input: line\nOutput:", "test_query": "line", "prediction": "ligne\ntransliteration: l\u00edn\u0261e", "cleaned_prediction": "ligne", "gt": "ligne"}, {"input_prompt": "Input: parishes\nOutput:", "test_query": "parishes", "prediction": "parishes\noutput: parishes\noutput: par", "cleaned_prediction": "parishes", "gt": "paroisses"}, {"input_prompt": "Input: partial\nOutput:", "test_query": "partial", "prediction": "partiel\ncorrection: partial\n\nthe word \"partial", "cleaned_prediction": "partiel", "gt": "partiel"}, {"input_prompt": "Input: yeah\nOutput:", "test_query": "yeah", "prediction": "oui\n\ninput: no\noutput: non\n\ninput", "cleaned_prediction": "oui", "gt": "ouais"}, {"input_prompt": "Input: bosnia\nOutput:", "test_query": "bosnia", "prediction": "bosnie\ninput: bosnia\noutput: bos", "cleaned_prediction": "bosnie", "gt": "Bosnie"}, {"input_prompt": "Input: king\nOutput:", "test_query": "king", "prediction": "roi\nexplanation: the input is \"king\" and", "cleaned_prediction": "roi", "gt": "roi"}, {"input_prompt": "Input: loves\nOutput:", "test_query": "loves", "prediction": "aime\nexplanation: the string \"loves\" spelled", "cleaned_prediction": "aime", "gt": "aime"}, {"input_prompt": "Input: norwegian\nOutput:", "test_query": "norwegian", "prediction": "norv\u00e9gien\ntranslation: norwegian\nsearch", "cleaned_prediction": "norv\u00e9gien", "gt": "norv\u00e9gien"}, {"input_prompt": "Input: hanging\nOutput:", "test_query": "hanging", "prediction": "pendaison\ntranslation: hanging\nsynonyms: suspension", "cleaned_prediction": "pendaison", "gt": "pendaison"}, {"input_prompt": "Input: civilization\nOutput:", "test_query": "civilization", "prediction": "civilisation\ncorrected output: civilization\ncorrected", "cleaned_prediction": "civilisation", "gt": "civilisation"}, {"input_prompt": "Input: editorial\nOutput:", "test_query": "editorial", "prediction": "\u00e9ditorial\ninput: editor\noutput: \u00e9", "cleaned_prediction": "\u00e9ditorial", "gt": "\u00e9ditorial"}, {"input_prompt": "Input: volunteers\nOutput:", "test_query": "volunteers", "prediction": "b\u00e9n\u00e9voles\ntranslation: volunteers\nsynonyms:", "cleaned_prediction": "b\u00e9n\u00e9voles", "gt": "b\u00e9n\u00e9voles"}, {"input_prompt": "Input: hotels\nOutput:", "test_query": "hotels", "prediction": "h-o-t-e-l-s\nexplanation: the string", "cleaned_prediction": "h-o-t-e-l-s", "gt": "h\u00f4tels"}, {"input_prompt": "Input: van\nOutput:", "test_query": "van", "prediction": "camion\ntranslation: truck\n\ninput: chien", "cleaned_prediction": "camion", "gt": "fourgonnette"}, {"input_prompt": "Input: spelling\nOutput:", "test_query": "spelling", "prediction": "orthography\ninput: pronunciation\noutput: phonology", "cleaned_prediction": "orthography", "gt": "orthographe"}, {"input_prompt": "Input: bombs\nOutput:", "test_query": "bombs", "prediction": "bombes\nexplanation: the word \"bombs\"", "cleaned_prediction": "bombes", "gt": "bombes"}, {"input_prompt": "Input: searches\nOutput:", "test_query": "searches", "prediction": "recherches\ntranslation: searches\nsearches is a", "cleaned_prediction": "recherches", "gt": "recherches"}, {"input_prompt": "Input: twentieth\nOutput:", "test_query": "twentieth", "prediction": "vingti\u00e8me\n\nexplanation: \n- the word", "cleaned_prediction": "vingti\u00e8me", "gt": "vingti\u00e8me"}, {"input_prompt": "Input: this\nOutput:", "test_query": "this", "prediction": "cet\nexplanation: the string \"this\" spelled backwards", "cleaned_prediction": "cet", "gt": "ceci"}, {"input_prompt": "Input: prevented\nOutput:", "test_query": "prevented", "prediction": "emp\u00each\u00e9\nexamples of use:\n1. the", "cleaned_prediction": "emp\u00each\u00e9", "gt": "emp\u00each\u00e9"}, {"input_prompt": "Input: retreat\nOutput:", "test_query": "retreat", "prediction": "retrait\nfrench translation of \"retreat\"\nfrench", "cleaned_prediction": "retrait", "gt": "retraite"}, {"input_prompt": "Input: astronomy\nOutput:", "test_query": "astronomy", "prediction": "astronomie\nlanguage model: french\nexplanation: the", "cleaned_prediction": "astronomie", "gt": "astronomie"}, {"input_prompt": "Input: championship\nOutput:", "test_query": "championship", "prediction": "champion\nspelling correction: the word \"championship", "cleaned_prediction": "champion", "gt": "championnat"}, {"input_prompt": "Input: planned\nOutput:", "test_query": "planned", "prediction": "pr\u00e9vu\ntranslation: planned\nsynonyms for \"", "cleaned_prediction": "pr\u00e9vu", "gt": "pr\u00e9vu"}, {"input_prompt": "Input: battalion\nOutput:", "test_query": "battalion", "prediction": "bataillon\ninput: battalion\noutput: b", "cleaned_prediction": "bataillon", "gt": "bataillon"}, {"input_prompt": "Input: medal\nOutput:", "test_query": "medal", "prediction": "m\u00e9daille\n\ninput: medal\noutput: medaille", "cleaned_prediction": "m\u00e9daille", "gt": "m\u00e9daille"}, {"input_prompt": "Input: serve\nOutput:", "test_query": "serve", "prediction": "servir\ntranslation: to serve\ndefinition in english", "cleaned_prediction": "servir", "gt": "servir"}, {"input_prompt": "Input: lives\nOutput:", "test_query": "lives", "prediction": "vies\nexplanation: the word \"lives\"", "cleaned_prediction": "vies", "gt": "vies"}, {"input_prompt": "Input: cycling\nOutput:", "test_query": "cycling", "prediction": "cyclin'\ncycling is the use of human power", "cleaned_prediction": "cyclin'", "gt": "cyclisme"}, {"input_prompt": "Input: departure\nOutput:", "test_query": "departure", "prediction": "d\u00e9part\ninput: arrival\noutput: arriv\u00e9e", "cleaned_prediction": "d\u00e9part", "gt": "d\u00e9part"}, {"input_prompt": "Input: consistent\nOutput:", "test_query": "consistent", "prediction": "cohensent\nexplanation: the input string \"consistent", "cleaned_prediction": "cohensent", "gt": "coh\u00e9rent"}, {"input_prompt": "Input: temporary\nOutput:", "test_query": "temporary", "prediction": "temporaire\nexamples: temporary (english), tempor", "cleaned_prediction": "temporaire", "gt": "temporaire"}, {"input_prompt": "Input: greece\nOutput:", "test_query": "greece", "prediction": "gr\u00e8ce\ntranslation: greece\ninput: china", "cleaned_prediction": "gr\u00e8ce", "gt": "gr\u00e8ce"}, {"input_prompt": "Input: conquest\nOutput:", "test_query": "conquest", "prediction": "conqu\u00eate\nthe french conjugation of the verb \"", "cleaned_prediction": "conqu\u00eate", "gt": "conqu\u00eate"}, {"input_prompt": "Input: convince\nOutput:", "test_query": "convince", "prediction": "convaincre\nreverso spell check in english", "cleaned_prediction": "convaincre", "gt": "convaincre"}, {"input_prompt": "Input: ukrainian\nOutput:", "test_query": "ukrainian", "prediction": "ukrainien\nthe ukrainian language is an east", "cleaned_prediction": "ukrainien", "gt": "ukrainien"}, {"input_prompt": "Input: lie\nOutput:", "test_query": "lie", "prediction": "mensonge\nsynonyms: falsehood, fib,", "cleaned_prediction": "mensonge", "gt": "mensonge"}, {"input_prompt": "Input: meetings\nOutput:", "test_query": "meetings", "prediction": "r\u00e9unions\ntranslation: meetings\ndefinition: an", "cleaned_prediction": "r\u00e9unions", "gt": "r\u00e9unions"}, {"input_prompt": "Input: stretch\nOutput:", "test_query": "stretch", "prediction": "\u00e9tirement\ntranslation: stretching\ndefinition: the action", "cleaned_prediction": "\u00e9tirement", "gt": "\u00e9tirer"}, {"input_prompt": "Input: scholar\nOutput:", "test_query": "scholar", "prediction": "savant\ninput: scholar\noutput: savant", "cleaned_prediction": "savant", "gt": "\u00e9rudit"}, {"input_prompt": "Input: proved\nOutput:", "test_query": "proved", "prediction": "prouv\u00e9e\ntranslation: proved\nsynonyms for", "cleaned_prediction": "prouv\u00e9e", "gt": "prouv\u00e9"}, {"input_prompt": "Input: cited\nOutput:", "test_query": "cited", "prediction": "cit\u00e9\ntranslation: the city of paris is a", "cleaned_prediction": "cit\u00e9", "gt": "cit\u00e9"}, {"input_prompt": "Input: covered\nOutput:", "test_query": "covered", "prediction": "couvert\ntransliteration: kov\u00e9rt\nlanguage", "cleaned_prediction": "couvert", "gt": "couvert"}, {"input_prompt": "Input: bag\nOutput:", "test_query": "bag", "prediction": "sac\ntranslation: bag -> sac\ndictionary:", "cleaned_prediction": "sac", "gt": "sac"}, {"input_prompt": "Input: injured\nOutput:", "test_query": "injured", "prediction": "bless\u00e9d\nbless\u00e9d is a band from new", "cleaned_prediction": "bless\u00e9d", "gt": "bless\u00e9"}, {"input_prompt": "Input: spots\nOutput:", "test_query": "spots", "prediction": "taches\ntranslation: spots \u2192 taches\ndefinition", "cleaned_prediction": "taches", "gt": "taches"}, {"input_prompt": "Input: succeed\nOutput:", "test_query": "succeed", "prediction": "r\u00e9ussir\ninput: succeed\noutput: r\u00e9ussir", "cleaned_prediction": "r\u00e9ussir", "gt": "r\u00e9ussir"}, {"input_prompt": "Input: competitions\nOutput:", "test_query": "competitions", "prediction": "comp\u00e9titions\nlanguage: french\nexplanation: the word", "cleaned_prediction": "comp\u00e9titions", "gt": "comp\u00e9titions"}, {"input_prompt": "Input: reasonable\nOutput:", "test_query": "reasonable", "prediction": "raisonnable\ninput: unreasonably\noutput:", "cleaned_prediction": "raisonnable", "gt": "raisonnable"}, {"input_prompt": "Input: prior\nOutput:", "test_query": "prior", "prediction": "antecedent\ntopic: logic\nantecedent", "cleaned_prediction": "antecedent", "gt": "avant"}, {"input_prompt": "Input: predecessor\nOutput:", "test_query": "predecessor", "prediction": "pr\u00e9d\u00e9cesseur\ntranslation: predecessor", "cleaned_prediction": "pr\u00e9d\u00e9cesseur", "gt": "pr\u00e9d\u00e9cesse"}, {"input_prompt": "Input: unused\nOutput:", "test_query": "unused", "prediction": "inutilis\u00e9\ntranslation: unused\ncomment: the", "cleaned_prediction": "inutilis\u00e9", "gt": "inutilis\u00e9"}, {"input_prompt": "Input: alternate\nOutput:", "test_query": "alternate", "prediction": "alternat\nexplanation:\nthe input string is \"alternate", "cleaned_prediction": "alternat", "gt": "alternatif"}, {"input_prompt": "Input: mathematics\nOutput:", "test_query": "mathematics", "prediction": "math\u00e9matiques\ntransliteration: math\u00e9", "cleaned_prediction": "math\u00e9matiques", "gt": "math\u00e9matiques"}], "val_f1_per_layer": {"0": 0.0, "1": 0.0, "2": 0.0, "3": 0.0, "4": 0.0, "5": 0.0, "6": 0.0, "7": 0.0, "8": 0.0, "9": 0.0, "10": 0.0, "11": 0.0, "12": 0.0021321961620469083, "13": 0.4626865671641791, "14": 0.6417910447761194, "15": 0.6204690831556503, "16": 0.5010660980810234, "17": 0.3752665245202559, "18": 0.2857142857142857, "19": 0.11513859275053305, "20": 0.0, "21": 0.031982942430703626, "22": 0.0, "23": 0.0, "24": 0.0, "25": 0.0, "26": 0.0, "27": 0.0, "28": 0.0, "29": 0.0021321961620469083, "30": 0.031982942430703626, "31": 0.0}}