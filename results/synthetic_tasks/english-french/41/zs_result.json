{"score": {"exact_match": 0.0}, "result": [{"input_prompt": "Input: printing\nOutput:", "test_query": "printing", "prediction": "printing\n=====\n\ndef print_twice(str):", "cleaned_prediction": "printing", "gt": "impression"}, {"input_prompt": "Input: iceland\nOutput:", "test_query": "iceland", "prediction": "iceland is a nordic island country located in the north", "cleaned_prediction": "iceland is a nordic island country located in the north", "gt": "Islande"}, {"input_prompt": "Input: fault\nOutput:", "test_query": "fault", "prediction": "fault\ninput: faults\noutput: faults", "cleaned_prediction": "fault", "gt": "faute"}, {"input_prompt": "Input: arrest\nOutput:", "test_query": "arrest", "prediction": "arrest\ninput: arrest\noutput: arrest", "cleaned_prediction": "arrest", "gt": "arr\u00eater"}, {"input_prompt": "Input: reducing\nOutput:", "test_query": "reducing", "prediction": "reducing\ndefinition: (present participle of reduce", "cleaned_prediction": "reducing", "gt": "r\u00e9duisant"}, {"input_prompt": "Input: chart\nOutput:", "test_query": "chart", "prediction": "the charts are very useful for comparing the performance of", "cleaned_prediction": "the charts are very useful for comparing the performance of", "gt": "graphique"}, {"input_prompt": "Input: compromise\nOutput:", "test_query": "compromise", "prediction": "compromise\ncompromise - definition\na compromise is", "cleaned_prediction": "compromise", "gt": "compromis"}, {"input_prompt": "Input: compared\nOutput:", "test_query": "compared", "prediction": "compared\ntook: 0.000215999", "cleaned_prediction": "compared", "gt": "compar\u00e9"}, {"input_prompt": "Input: thousands\nOutput:", "test_query": "thousands", "prediction": "thousands\nexplanation: the input is already in the", "cleaned_prediction": "thousands", "gt": "milliers"}, {"input_prompt": "Input: prevent\nOutput:", "test_query": "prevent", "prediction": "prevent\ninput: prevent\noutput: prevent", "cleaned_prediction": "prevent", "gt": "pr\u00e9venir"}, {"input_prompt": "Input: foundation\nOutput:", "test_query": "foundation", "prediction": "foundation\nduration: 2:01\nuploader", "cleaned_prediction": "foundation", "gt": "fondation"}, {"input_prompt": "Input: tribes\nOutput:", "test_query": "tribes", "prediction": "tribes\noutput: tribes\noutput: tribes", "cleaned_prediction": "tribes", "gt": "tribus"}, {"input_prompt": "Input: vocals\nOutput:", "test_query": "vocals", "prediction": "music\nmusic generation using vocal input\nmusic generation", "cleaned_prediction": "music", "gt": "voix"}, {"input_prompt": "Input: intermediate\nOutput:", "test_query": "intermediate", "prediction": "intermediate\ntime complexity: o(n) where n", "cleaned_prediction": "intermediate", "gt": "interm\u00e9diaire"}, {"input_prompt": "Input: gallery\nOutput:", "test_query": "gallery", "prediction": "gallery\n---\n\n```python\ndef gallery(image_urls", "cleaned_prediction": "gallery", "gt": "galerie"}, {"input_prompt": "Input: especially\nOutput:", "test_query": "especially", "prediction": "especially\ndefinition: (adv.) in a special", "cleaned_prediction": "especially", "gt": "particuli\u00e8rement"}, {"input_prompt": "Input: arguing\nOutput:", "test_query": "arguing", "prediction": "disagreeing\nsynonyms: debating, disputing", "cleaned_prediction": "disagreeing", "gt": "se disputer"}, {"input_prompt": "Input: conservative\nOutput:", "test_query": "conservative", "prediction": "liberal\ninput: liberal\noutput: conservative", "cleaned_prediction": "liberal", "gt": "conservateur"}, {"input_prompt": "Input: processes\nOutput:", "test_query": "processes", "prediction": "processes\nmethods:\n| method name | return type", "cleaned_prediction": "processes", "gt": "processus"}, {"input_prompt": "Input: platform\nOutput:", "test_query": "platform", "prediction": "# -*- coding: utf-8 -*-\n\"\"\"", "cleaned_prediction": "# -*- coding: utf-8 -*-", "gt": "plateforme"}, {"input_prompt": "Input: scope\nOutput:", "test_query": "scope", "prediction": "scope\ntypes: object\ncategories: scope,", "cleaned_prediction": "scope", "gt": "port\u00e9e"}, {"input_prompt": "Input: contributors\nOutput:", "test_query": "contributors", "prediction": "contributors\ntasks:\ncreate contributors page\nadd contributors", "cleaned_prediction": "contributors", "gt": "contributeurs"}, {"input_prompt": "Input: colleges\nOutput:", "test_query": "colleges", "prediction": "colleges\ninput: universities\noutput: universities", "cleaned_prediction": "colleges", "gt": "universit\u00e9s"}, {"input_prompt": "Input: audiences\nOutput:", "test_query": "audiences", "prediction": "the audience\naudience: a group of people", "cleaned_prediction": "the audience", "gt": "publics"}, {"input_prompt": "Input: waiting\nOutput:", "test_query": "waiting", "prediction": "waiting\ninput: silent\noutput: silent", "cleaned_prediction": "waiting", "gt": "attente"}, {"input_prompt": "Input: bike\nOutput:", "test_query": "bike", "prediction": "a bike is a vehicle with two wheels attached", "cleaned_prediction": "a bike is a vehicle with two wheels attached", "gt": "v\u00e9lo"}, {"input_prompt": "Input: serbia\nOutput:", "test_query": "serbia", "prediction": "serbia\ninput: serbia\noutput: serbia", "cleaned_prediction": "serbia", "gt": "Serbie"}, {"input_prompt": "Input: unfortunately\nOutput:", "test_query": "unfortunately", "prediction": "unfortunately\ninput: this is a test\noutput", "cleaned_prediction": "unfortunately", "gt": "malheureusement"}, {"input_prompt": "Input: separation\nOutput:", "test_query": "separation", "prediction": "separation\ntopics: human-computer interface\nto", "cleaned_prediction": "separation", "gt": "s\u00e9paration"}, {"input_prompt": "Input: rain\nOutput:", "test_query": "rain", "prediction": "rain\ncapitalized: rain\n\ninput: snow", "cleaned_prediction": "rain", "gt": "pluie"}, {"input_prompt": "Input: gradually\nOutput:", "test_query": "gradually", "prediction": "gradually\ndefinition: in a gradual manner; in", "cleaned_prediction": "gradually", "gt": "progressivement"}, {"input_prompt": "Input: leo\nOutput:", "test_query": "leo", "prediction": "2\n\ninput: cat\noutput:", "cleaned_prediction": "2", "gt": "lion"}, {"input_prompt": "Input: birthday\nOutput:", "test_query": "birthday", "prediction": "\"happy birthday to you!\"\n\ninput: holiday", "cleaned_prediction": "\"happy birthday to you!\"", "gt": "anniversaire"}, {"input_prompt": "Input: listed\nOutput:", "test_query": "listed", "prediction": "listed\nerror: the input list is empty.", "cleaned_prediction": "listed", "gt": "\u00e9num\u00e9r\u00e9"}, {"input_prompt": "Input: separately\nOutput:", "test_query": "separately", "prediction": "separately\ndefinition: (adverb) in a", "cleaned_prediction": "separately", "gt": "s\u00e9par\u00e9ment"}, {"input_prompt": "Input: land\nOutput:", "test_query": "land", "prediction": "land\ninput: water\noutput: water", "cleaned_prediction": "land", "gt": "terre"}, {"input_prompt": "Input: particularly\nOutput:", "test_query": "particularly", "prediction": "particularly\ndefinition: (adverb) to a", "cleaned_prediction": "particularly", "gt": "particuli\u00e8rement"}, {"input_prompt": "Input: moses\nOutput:", "test_query": "moses", "prediction": "1\nexplanation: the first and only digit", "cleaned_prediction": "1", "gt": "Mo\u00efse"}, {"input_prompt": "Input: explorer\nOutput:", "test_query": "explorer", "prediction": "explorer is a term used to describe a person who", "cleaned_prediction": "explorer is a term used to describe a person who", "gt": "explorateur"}, {"input_prompt": "Input: animals\nOutput:", "test_query": "animals", "prediction": "1. lion\n2. elephant\n3", "cleaned_prediction": "1. lion", "gt": "animaux"}, {"input_prompt": "Input: legend\nOutput:", "test_query": "legend", "prediction": "a dictionary containing the legend elements\ndescription: extract", "cleaned_prediction": "a dictionary containing the legend elements", "gt": "l\u00e9gende"}, {"input_prompt": "Input: arms\nOutput:", "test_query": "arms", "prediction": "arms\ncorrected input: arms\noutput:", "cleaned_prediction": "arms", "gt": "bras"}, {"input_prompt": "Input: notably\nOutput:", "test_query": "notably", "prediction": "notably\na notable example of a species is the", "cleaned_prediction": "notably", "gt": "notamment"}, {"input_prompt": "Input: throne\nOutput:", "test_query": "throne", "prediction": "\"the throne is a symbol of power and authority", "cleaned_prediction": "\"the throne is a symbol of power and authority", "gt": "tr\u00f4ne"}, {"input_prompt": "Input: competitive\nOutput:", "test_query": "competitive", "prediction": "competitive\ninput: uncompetitive\noutput: un", "cleaned_prediction": "competitive", "gt": "comp\u00e9titif"}, {"input_prompt": "Input: quickly\nOutput:", "test_query": "quickly", "prediction": "quickly\ndefinition: with haste; in a short", "cleaned_prediction": "quickly", "gt": "rapidement"}, {"input_prompt": "Input: frank\nOutput:", "test_query": "frank", "prediction": "frank\n\ninput: anna\noutput: anna", "cleaned_prediction": "frank", "gt": "franc"}, {"input_prompt": "Input: burial\nOutput:", "test_query": "burial", "prediction": "the burial of a person is a ritual where a", "cleaned_prediction": "the burial of a person is a ritual where a", "gt": "enterrement"}, {"input_prompt": "Input: significantly\nOutput:", "test_query": "significantly", "prediction": "significantly\ndefinition: to a notable or marked degree", "cleaned_prediction": "significantly", "gt": "significativement"}, {"input_prompt": "Input: bound\nOutput:", "test_query": "bound", "prediction": "3\n\ninput: unbound\noutput:", "cleaned_prediction": "3", "gt": "li\u00e9"}, {"input_prompt": "Input: leaving\nOutput:", "test_query": "leaving", "prediction": "leaving\n================\n\n### leaving\n\nleaving is", "cleaned_prediction": "leaving", "gt": "partir"}, {"input_prompt": "Input: installed\nOutput:", "test_query": "installed", "prediction": "installed\n---\ninput: uninstalled\noutput:", "cleaned_prediction": "installed", "gt": "install\u00e9"}, {"input_prompt": "Input: changed\nOutput:", "test_query": "changed", "prediction": "changed\nrevision: 1.1\nauthor", "cleaned_prediction": "changed", "gt": "chang\u00e9"}, {"input_prompt": "Input: build\nOutput:", "test_query": "build", "prediction": "build\n---\n\n# build\n\nbuild is a simple", "cleaned_prediction": "build", "gt": "construire"}, {"input_prompt": "Input: geographic\nOutput:", "test_query": "geographic", "prediction": "geographic\nformat: text\naccess: open", "cleaned_prediction": "geographic", "gt": "g\u00e9ographique"}, {"input_prompt": "Input: queens\nOutput:", "test_query": "queens", "prediction": "[[1,3,8],[2,7", "cleaned_prediction": "[[1,3,8],[2,7", "gt": "reines"}, {"input_prompt": "Input: core\nOutput:", "test_query": "core", "prediction": "core\ntime complexity: o(1)\nspace", "cleaned_prediction": "core", "gt": "noyau"}, {"input_prompt": "Input: voices\nOutput:", "test_query": "voices", "prediction": "voices\nduration: 1:27:45", "cleaned_prediction": "voices", "gt": "voix"}, {"input_prompt": "Input: gas\nOutput:", "test_query": "gas", "prediction": "int\nconstraints: 1 <= gas <=", "cleaned_prediction": "int", "gt": "gaz"}, {"input_prompt": "Input: opposed\nOutput:", "test_query": "opposed", "prediction": "\"opposed\"\ninput: hello\noutput:", "cleaned_prediction": "\"opposed\"", "gt": "oppos\u00e9"}, {"input_prompt": "Input: award\nOutput:", "test_query": "award", "prediction": "award-winning\nchange one letter in the input to", "cleaned_prediction": "award-winning", "gt": "prix"}, {"input_prompt": "Input: freestyle\nOutput:", "test_query": "freestyle", "prediction": "freestyle\ninput: free\noutput: free", "cleaned_prediction": "freestyle", "gt": "style libre"}, {"input_prompt": "Input: baltic\nOutput:", "test_query": "baltic", "prediction": "5\n\nexplanation: the minimum number of operations", "cleaned_prediction": "5", "gt": "baltique"}, {"input_prompt": "Input: vary\nOutput:", "test_query": "vary", "prediction": "vary\ntarget: vary\n\n## step 1", "cleaned_prediction": "vary", "gt": "varier"}, {"input_prompt": "Input: road\nOutput:", "test_query": "road", "prediction": "road\nexplanation: the word \"road\" spelled", "cleaned_prediction": "road", "gt": "route"}, {"input_prompt": "Input: something\nOutput:", "test_query": "something", "prediction": "something\ni'm happy to help you with your", "cleaned_prediction": "something", "gt": "quelque chose"}, {"input_prompt": "Input: described\nOutput:", "test_query": "described", "prediction": "100\nexplanation: the input string \"des", "cleaned_prediction": "100", "gt": "d\u00e9crit"}, {"input_prompt": "Input: under\nOutput:", "test_query": "under", "prediction": "under\nexplanation: the word \"under\" is", "cleaned_prediction": "under", "gt": "sous"}, {"input_prompt": "Input: assets\nOutput:", "test_query": "assets", "prediction": "assets\nexercise:\nwrite a javascript function that takes", "cleaned_prediction": "assets", "gt": "actifs"}, {"input_prompt": "Input: struck\nOutput:", "test_query": "struck", "prediction": "struck\ninput: struck\noutput: struck", "cleaned_prediction": "struck", "gt": "frapp\u00e9"}, {"input_prompt": "Input: current\nOutput:", "test_query": "current", "prediction": "voltage\ngain: 1\ntype: voltage", "cleaned_prediction": "voltage", "gt": "actuel"}, {"input_prompt": "Input: cars\nOutput:", "test_query": "cars", "prediction": "{'a': 1, 'b':", "cleaned_prediction": "{'a': 1, 'b':", "gt": "voitures"}, {"input_prompt": "Input: graduated\nOutput:", "test_query": "graduated", "prediction": "\"you are a high school graduate. you have", "cleaned_prediction": "\"you are a high school graduate. you have", "gt": "dipl\u00f4m\u00e9"}, {"input_prompt": "Input: petersburg\nOutput:", "test_query": "petersburg", "prediction": "petersburg\n\nexplanation: the string \"p", "cleaned_prediction": "petersburg", "gt": "P\u00e9tersbourg"}, {"input_prompt": "Input: tue\nOutput:", "test_query": "tue", "prediction": "tuesday\nexplanation: we need to add the correct", "cleaned_prediction": "tuesday", "gt": "mardi"}, {"input_prompt": "Input: served\nOutput:", "test_query": "served", "prediction": "served\ndefinition: (verb) to provide food", "cleaned_prediction": "served", "gt": "servi"}, {"input_prompt": "Input: adding\nOutput:", "test_query": "adding", "prediction": "adding\nexplanation: adding is a verb that means", "cleaned_prediction": "adding", "gt": "ajoutant"}, {"input_prompt": "Input: weeks\nOutput:", "test_query": "weeks", "prediction": "the number of weeks\ninput: days\noutput", "cleaned_prediction": "the number of weeks", "gt": "semaines"}, {"input_prompt": "Input: stay\nOutput:", "test_query": "stay", "prediction": "stay\ninput: stays\noutput: stays", "cleaned_prediction": "stay", "gt": "rester"}, {"input_prompt": "Input: can\nOutput:", "test_query": "can", "prediction": "1\n\ninput: banana\noutput:", "cleaned_prediction": "1", "gt": "peut"}, {"input_prompt": "Input: wanted\nOutput:", "test_query": "wanted", "prediction": "1\nexplanation: the sum of the digits", "cleaned_prediction": "1", "gt": "voulu"}, {"input_prompt": "Input: how\nOutput:", "test_query": "how", "prediction": "how to\na guide to creating a memorable brand", "cleaned_prediction": "how to", "gt": "comment"}, {"input_prompt": "Input: reliable\nOutput:", "test_query": "reliable", "prediction": "reliable\ndate: 02/04/23", "cleaned_prediction": "reliable", "gt": "fiable"}, {"input_prompt": "Input: archaeological\nOutput:", "test_query": "archaeological", "prediction": "archaeological\ndefinition: of or relating to archaeology", "cleaned_prediction": "archaeological", "gt": "arch\u00e9ologique"}, {"input_prompt": "Input: leaders\nOutput:", "test_query": "leaders", "prediction": "leaders\nduration: 1h 35m", "cleaned_prediction": "leaders", "gt": "dirigeants"}, {"input_prompt": "Input: when\nOutput:", "test_query": "when", "prediction": "3\nexplanation: the time taken by the", "cleaned_prediction": "3", "gt": "quand"}, {"input_prompt": "Input: wings\nOutput:", "test_query": "wings", "prediction": "wings\ninput: wingspan\noutput: wings", "cleaned_prediction": "wings", "gt": "ailes"}, {"input_prompt": "Input: receiving\nOutput:", "test_query": "receiving", "prediction": "sending\njob title: receiving clerk\njob", "cleaned_prediction": "sending", "gt": "r\u00e9ception"}, {"input_prompt": "Input: clothes\nOutput:", "test_query": "clothes", "prediction": "\"what kind of clothes do you want to buy", "cleaned_prediction": "\"what kind of clothes do you want to buy", "gt": "v\u00eatements"}, {"input_prompt": "Input: clinical\nOutput:", "test_query": "clinical", "prediction": "clinical\noutput: clinical\noutput: clinical", "cleaned_prediction": "clinical", "gt": "clinique"}, {"input_prompt": "Input: prussia\nOutput:", "test_query": "prussia", "prediction": "\"prussia was a historical region in eastern europe", "cleaned_prediction": "\"prussia was a historical region in eastern europe", "gt": "Prusse"}, {"input_prompt": "Input: judicial\nOutput:", "test_query": "judicial", "prediction": "judicial\nresult: correct spelling\n\ninput: jud", "cleaned_prediction": "judicial", "gt": "judiciaire"}, {"input_prompt": "Input: ground\nOutput:", "test_query": "ground", "prediction": "ground\nadding a word to the end of the", "cleaned_prediction": "ground", "gt": "sol"}, {"input_prompt": "Input: grounds\nOutput:", "test_query": "grounds", "prediction": "grounds\nvalidation:\n1. it starts with a", "cleaned_prediction": "grounds", "gt": "terrains"}, {"input_prompt": "Input: useless\nOutput:", "test_query": "useless", "prediction": "0\n\ninput: 3\noutput:", "cleaned_prediction": "0", "gt": "inutile"}, {"input_prompt": "Input: touchdown\nOutput:", "test_query": "touchdown", "prediction": "touchdown\nthe word \"touchdown\" is spelled", "cleaned_prediction": "touchdown", "gt": "touch\u00e9"}, {"input_prompt": "Input: azerbaijan\nOutput:", "test_query": "azerbaijan", "prediction": "azerbaijan, officially the republic of azerbaijan", "cleaned_prediction": "azerbaijan, officially the republic of azerbaijan", "gt": "Azerba\u00efd"}, {"input_prompt": "Input: decide\nOutput:", "test_query": "decide", "prediction": "decide\n=======\n\ndecide on a course of", "cleaned_prediction": "decide", "gt": "d\u00e9cider"}, {"input_prompt": "Input: breast\nOutput:", "test_query": "breast", "prediction": "breast cancer\ninput: lung\noutput: lung", "cleaned_prediction": "breast cancer", "gt": "sein"}, {"input_prompt": "Input: week\nOutput:", "test_query": "week", "prediction": "week\n---\ninput: week1\noutput:", "cleaned_prediction": "week", "gt": "semaine"}, {"input_prompt": "Input: hidden\nOutput:", "test_query": "hidden", "prediction": "hidden\nfeedback: hidden\ndtype of tensor", "cleaned_prediction": "hidden", "gt": "cach\u00e9"}, {"input_prompt": "Input: ruled\nOutput:", "test_query": "ruled", "prediction": "ruled\nexplanation:\nthe input string \"ruled", "cleaned_prediction": "ruled", "gt": "r\u00e9gi"}, {"input_prompt": "Input: possibly\nOutput:", "test_query": "possibly", "prediction": "possibly\ninput: yes\noutput: no", "cleaned_prediction": "possibly", "gt": "peut-\u00eatre"}, {"input_prompt": "Input: sin\nOutput:", "test_query": "sin", "prediction": "0.8414709848078965", "cleaned_prediction": "0.8414709848078965", "gt": "p\u00e9ch\u00e9"}, {"input_prompt": "Input: artistic\nOutput:", "test_query": "artistic", "prediction": "i love art! i have a collection of paintings", "cleaned_prediction": "i love art! i have a collection of paintings", "gt": "artistique"}, {"input_prompt": "Input: truck\nOutput:", "test_query": "truck", "prediction": "truck\ncapitalization: title case\n\ninput:", "cleaned_prediction": "truck", "gt": "camion"}, {"input_prompt": "Input: collapsed\nOutput:", "test_query": "collapsed", "prediction": "collapsed\ndiscussion:\nthe input string is already collapsed", "cleaned_prediction": "collapsed", "gt": "effondr\u00e9"}, {"input_prompt": "Input: pretty\nOutput:", "test_query": "pretty", "prediction": "pretty\n\nexplanation: the input string \"pretty\"", "cleaned_prediction": "pretty", "gt": "joli"}, {"input_prompt": "Input: tour\nOutput:", "test_query": "tour", "prediction": "```\n[\n  {\"name\": \"paris", "cleaned_prediction": "```", "gt": "visite"}, {"input_prompt": "Input: tel\nOutput:", "test_query": "tel", "prediction": "+1-123-456-7890", "cleaned_prediction": "+1-123-456-7890", "gt": "t\u00e9l\u00e9phone"}, {"input_prompt": "Input: pattern\nOutput:", "test_query": "pattern", "prediction": "the list of all possible words that can be formed", "cleaned_prediction": "the list of all possible words that can be formed", "gt": "motif"}, {"input_prompt": "Input: rank\nOutput:", "test_query": "rank", "prediction": "rank\nconstraints: \n1 <= k <= n", "cleaned_prediction": "rank", "gt": "rang"}, {"input_prompt": "Input: torpedo\nOutput:", "test_query": "torpedo", "prediction": "\"torpedo\" is a type of underwater projectile", "cleaned_prediction": "\"torpedo\" is a type of underwater projectile", "gt": "torpille"}, {"input_prompt": "Input: undo\nOutput:", "test_query": "undo", "prediction": "the undo command will remove the last action from the", "cleaned_prediction": "the undo command will remove the last action from the", "gt": "annuler"}, {"input_prompt": "Input: limestone\nOutput:", "test_query": "limestone", "prediction": "limestone\nthe limestone that is quarried from the", "cleaned_prediction": "limestone", "gt": "calcaire"}, {"input_prompt": "Input: opportunities\nOutput:", "test_query": "opportunities", "prediction": "opportunities\nhow to say opportunities in spanish\ns", "cleaned_prediction": "opportunities", "gt": "opportunit\u00e9s"}, {"input_prompt": "Input: grass\nOutput:", "test_query": "grass", "prediction": "grass\n\ninput: grass\noutput: grass", "cleaned_prediction": "grass", "gt": "herbe"}, {"input_prompt": "Input: declined\nOutput:", "test_query": "declined", "prediction": "declined\n================\n### declined\n\n#### parameters", "cleaned_prediction": "declined", "gt": "refus\u00e9"}, {"input_prompt": "Input: statements\nOutput:", "test_query": "statements", "prediction": "statements\nnote: this problem is a variation of", "cleaned_prediction": "statements", "gt": "d\u00e9clarations"}, {"input_prompt": "Input: badge\nOutput:", "test_query": "badge", "prediction": "badge\nbadge is a small, usually metallic or", "cleaned_prediction": "badge", "gt": "insigne"}, {"input_prompt": "Input: aftermath\nOutput:", "test_query": "aftermath", "prediction": "aftermath\ndefinition: the consequences or effects of an", "cleaned_prediction": "aftermath", "gt": "cons\u00e9quences"}, {"input_prompt": "Input: offices\nOutput:", "test_query": "offices", "prediction": "offices\ninput: restaurant\noutput: restaurant", "cleaned_prediction": "offices", "gt": "bureaux"}, {"input_prompt": "Input: cold\nOutput:", "test_query": "cold", "prediction": "'it is very cold today.'\n```python", "cleaned_prediction": "'it is very cold today.'", "gt": "froid"}, {"input_prompt": "Input: funeral\nOutput:", "test_query": "funeral", "prediction": "\"what a sad day. a funeral is a", "cleaned_prediction": "\"what a sad day. a funeral is a", "gt": "fun\u00e9railles"}, {"input_prompt": "Input: weapons\nOutput:", "test_query": "weapons", "prediction": "*   if the input is a single weapon", "cleaned_prediction": "*   if the input is a single weapon", "gt": "armes"}, {"input_prompt": "Input: philippine\nOutput:", "test_query": "philippine", "prediction": "1. the philippines is a country located in", "cleaned_prediction": "1. the philippines is a country located in", "gt": "philippin"}, {"input_prompt": "Input: replacing\nOutput:", "test_query": "replacing", "prediction": "replacing\ndefinition: (verb) to put something", "cleaned_prediction": "replacing", "gt": "rempla\u00e7ant"}, {"input_prompt": "Input: categories\nOutput:", "test_query": "categories", "prediction": "categories with the number of items in each category", "cleaned_prediction": "categories with the number of items in each category", "gt": "cat\u00e9gories"}, {"input_prompt": "Input: improvements\nOutput:", "test_query": "improvements", "prediction": "improvements\nimprovements is a noun. it is", "cleaned_prediction": "improvements", "gt": "am\u00e9liorations"}, {"input_prompt": "Input: implementation\nOutput:", "test_query": "implementation", "prediction": "implementation\n```\ndef find_max_consecutive_", "cleaned_prediction": "implementation", "gt": "mise en \u0153uvre"}, {"input_prompt": "Input: fires\nOutput:", "test_query": "fires", "prediction": "fire\nthe word \"fires\" can be spelled", "cleaned_prediction": "fire", "gt": "incendies"}, {"input_prompt": "Input: edit\nOutput:", "test_query": "edit", "prediction": "edit\ninput: edti\noutput: edit", "cleaned_prediction": "edit", "gt": "modifier"}, {"input_prompt": "Input: sweet\nOutput:", "test_query": "sweet", "prediction": "sweet\nexplanation: the input string is already a", "cleaned_prediction": "sweet", "gt": "doux"}, {"input_prompt": "Input: defeated\nOutput:", "test_query": "defeated", "prediction": "defeated\ndefinition: conquered or beaten in", "cleaned_prediction": "defeated", "gt": "d\u00e9fait"}, {"input_prompt": "Input: handle\nOutput:", "test_query": "handle", "prediction": "a list of tuples, where each tuple contains the", "cleaned_prediction": "a list of tuples, where each tuple contains the", "gt": "poign\u00e9e"}, {"input_prompt": "Input: cable\nOutput:", "test_query": "cable", "prediction": "audio/video\noutput: usb-a\noutput:", "cleaned_prediction": "audio/video", "gt": "c\u00e2ble"}, {"input_prompt": "Input: paying\nOutput:", "test_query": "paying", "prediction": "paying\ndefinition: (present participle of pay", "cleaned_prediction": "paying", "gt": "payer"}, {"input_prompt": "Input: published\nOutput:", "test_query": "published", "prediction": "published\npublished (adjective)\n  1", "cleaned_prediction": "published", "gt": "publi\u00e9"}, {"input_prompt": "Input: for\nOutput:", "test_query": "for", "prediction": "for\ninput: char\noutput: char", "cleaned_prediction": "for", "gt": "pour"}, {"input_prompt": "Input: sustained\nOutput:", "test_query": "sustained", "prediction": "sustained\ninput: sustain\noutput: sustain", "cleaned_prediction": "sustained", "gt": "soutenu"}, {"input_prompt": "Input: upcoming\nOutput:", "test_query": "upcoming", "prediction": "upcoming\ndefinition: (adjective) coming or", "cleaned_prediction": "upcoming", "gt": "\u00e0 venir"}, {"input_prompt": "Input: mineral\nOutput:", "test_query": "mineral", "prediction": "mineral\ninput: mineral\noutput: mineral", "cleaned_prediction": "mineral", "gt": "min\u00e9ral"}, {"input_prompt": "Input: tourists\nOutput:", "test_query": "tourists", "prediction": "the tourists were given a special welcome by the", "cleaned_prediction": "the tourists were given a special welcome by the", "gt": "touristes"}, {"input_prompt": "Input: politicians\nOutput:", "test_query": "politicians", "prediction": "politicians\nthe word \"politicians\" is a", "cleaned_prediction": "politicians", "gt": "politiciens"}, {"input_prompt": "Input: attack\nOutput:", "test_query": "attack", "prediction": "attack\ncapitalized word.\ninput: hello world", "cleaned_prediction": "attack", "gt": "attaque"}, {"input_prompt": "Input: free\nOutput:", "test_query": "free", "prediction": "free\ninput: 1\noutput:", "cleaned_prediction": "free", "gt": "gratuit"}, {"input_prompt": "Input: trees\nOutput:", "test_query": "trees", "prediction": "the tree with the maximum height\ndescription: this", "cleaned_prediction": "the tree with the maximum height", "gt": "arbres"}, {"input_prompt": "Input: starts\nOutput:", "test_query": "starts", "prediction": "starts\nexplanation: the word \"starts\" spelled", "cleaned_prediction": "starts", "gt": "\u00e9toiles"}, {"input_prompt": "Input: students\nOutput:", "test_query": "students", "prediction": "1. students who are not in the same", "cleaned_prediction": "1. students who are not in the same", "gt": "\u00e9tudiants"}, {"input_prompt": "Input: buffalo\nOutput:", "test_query": "buffalo", "prediction": "buffalo\n\ninput: aardvark\noutput", "cleaned_prediction": "buffalo", "gt": "bison"}, {"input_prompt": "Input: geneva\nOutput:", "test_query": "geneva", "prediction": "geneva\ngeneva\ng e n", "cleaned_prediction": "geneva", "gt": "Gen\u00e8ve"}, {"input_prompt": "Input: ruins\nOutput:", "test_query": "ruins", "prediction": "the ruins of the ancient city are a popular tourist", "cleaned_prediction": "the ruins of the ancient city are a popular tourist", "gt": "ruines"}, {"input_prompt": "Input: rebuilt\nOutput:", "test_query": "rebuilt", "prediction": "rebuilt\nrevision: 1\nauthor: user", "cleaned_prediction": "rebuilt", "gt": "reconstruit"}, {"input_prompt": "Input: preserve\nOutput:", "test_query": "preserve", "prediction": "preserve\ndefinition: to keep or save from loss", "cleaned_prediction": "preserve", "gt": "pr\u00e9server"}, {"input_prompt": "Input: bed\nOutput:", "test_query": "bed", "prediction": "bed\nexplanation: the word \"bed\" spelled", "cleaned_prediction": "bed", "gt": "lit"}, {"input_prompt": "Input: button\nOutput:", "test_query": "button", "prediction": "button\n================\n\n<details>\n  <summary", "cleaned_prediction": "button", "gt": "bouton"}, {"input_prompt": "Input: beauty\nOutput:", "test_query": "beauty", "prediction": "beauty\nthe word \u201cbeauty\u201d is spelled", "cleaned_prediction": "beauty", "gt": "beaut\u00e9"}, {"input_prompt": "Input: states\nOutput:", "test_query": "states", "prediction": "[list of tuples] where each tuple contains the", "cleaned_prediction": "[list of tuples] where each tuple contains the", "gt": "\u00e9tats"}, {"input_prompt": "Input: nuclear\nOutput:", "test_query": "nuclear", "prediction": "nuclear\n------------------\ninput: nuclear\noutput:", "cleaned_prediction": "nuclear", "gt": "nucl\u00e9aire"}, {"input_prompt": "Input: coached\nOutput:", "test_query": "coached", "prediction": "coached\nthe word \"coached\" is", "cleaned_prediction": "coached", "gt": "entra\u00een\u00e9"}, {"input_prompt": "Input: prefer\nOutput:", "test_query": "prefer", "prediction": "prefer\ninput: prefer\noutput: prefer", "cleaned_prediction": "prefer", "gt": "pr\u00e9f\u00e9rer"}, {"input_prompt": "Input: organic\nOutput:", "test_query": "organic", "prediction": "100% organic cotton\nthe use of organic", "cleaned_prediction": "100% organic cotton", "gt": "biologique"}, {"input_prompt": "Input: begun\nOutput:", "test_query": "begun", "prediction": "begun\ndefinition: (verb) start or set", "cleaned_prediction": "begun", "gt": "commenc\u00e9"}, {"input_prompt": "Input: recognised\nOutput:", "test_query": "recognised", "prediction": "input: recognized\ncorrected: recognized\n\ninput", "cleaned_prediction": "input: recognized", "gt": "reconnu"}, {"input_prompt": "Input: stayed\nOutput:", "test_query": "stayed", "prediction": "stayed\ninput: i\noutput: i", "cleaned_prediction": "stayed", "gt": "rest\u00e9"}, {"input_prompt": "Input: mail\nOutput:", "test_query": "mail", "prediction": "\"the mail carrier brings the mail.\"\n\nexplanation:", "cleaned_prediction": "\"the mail carrier brings the mail.\"", "gt": "courrier"}, {"input_prompt": "Input: reasoning\nOutput:", "test_query": "reasoning", "prediction": "\"i'm not sure what you mean by '", "cleaned_prediction": "\"i'm not sure what you mean by '", "gt": "raisonnement"}, {"input_prompt": "Input: patrol\nOutput:", "test_query": "patrol", "prediction": "patrol\nautocorrect suggestions: patrol, patrol", "cleaned_prediction": "patrol", "gt": "patrouille"}, {"input_prompt": "Input: fluid\nOutput:", "test_query": "fluid", "prediction": "liquid\nchange: solid to liquid\nprocess:", "cleaned_prediction": "liquid", "gt": "liquide"}, {"input_prompt": "Input: oxygen\nOutput:", "test_query": "oxygen", "prediction": "oxygen\ninput: carbon dioxide\noutput: carbon", "cleaned_prediction": "oxygen", "gt": "oxyg\u00e8ne"}, {"input_prompt": "Input: corner\nOutput:", "test_query": "corner", "prediction": "\"corner\"\ninput: a\noutput: \"", "cleaned_prediction": "\"corner\"", "gt": "coin"}, {"input_prompt": "Input: referendum\nOutput:", "test_query": "referendum", "prediction": "referendum\nrelated terms: [plebiscite", "cleaned_prediction": "referendum", "gt": "r\u00e9f\u00e9rendum"}, {"input_prompt": "Input: wrestling\nOutput:", "test_query": "wrestling", "prediction": "a physically demanding performance of wrestling, often involving holds", "cleaned_prediction": "a physically demanding performance of wrestling, often involving holds", "gt": "lutte"}, {"input_prompt": "Input: roughly\nOutput:", "test_query": "roughly", "prediction": "roughly\ndefinition: in a vague or approximate manner", "cleaned_prediction": "roughly", "gt": "approximativement"}, {"input_prompt": "Input: academy\nOutput:", "test_query": "academy", "prediction": "\"academy\"\nexplanation: the string \"", "cleaned_prediction": "\"academy\"", "gt": "acad\u00e9mie"}, {"input_prompt": "Input: indoor\nOutput:", "test_query": "indoor", "prediction": "outdoor\ninput: outdoor\noutput: outdoor", "cleaned_prediction": "outdoor", "gt": "int\u00e9rieur"}, {"input_prompt": "Input: pearl\nOutput:", "test_query": "pearl", "prediction": "pearl\ninput: pearl\noutput: pearl", "cleaned_prediction": "pearl", "gt": "perle"}, {"input_prompt": "Input: draft\nOutput:", "test_query": "draft", "prediction": "draft\ndraft:\n  title: draft", "cleaned_prediction": "draft", "gt": "brouillon"}, {"input_prompt": "Input: honor\nOutput:", "test_query": "honor", "prediction": "honor\n---\ninput: honor\noutput: honor", "cleaned_prediction": "honor", "gt": "honneur"}, {"input_prompt": "Input: right\nOutput:", "test_query": "right", "prediction": "{'right': 1}\ninput: left", "cleaned_prediction": "{'right': 1}", "gt": "droit"}, {"input_prompt": "Input: privacy\nOutput:", "test_query": "privacy", "prediction": "privacy\n##### step 1: understand the concept", "cleaned_prediction": "privacy", "gt": "intimit\u00e9"}, {"input_prompt": "Input: tuesday\nOutput:", "test_query": "tuesday", "prediction": "tuesday\n\ninput: wednesday\noutput: wednesday", "cleaned_prediction": "tuesday", "gt": "mardi"}, {"input_prompt": "Input: egypt\nOutput:", "test_query": "egypt", "prediction": "egyptian\n\nexplanation: the word \"eg", "cleaned_prediction": "egyptian", "gt": "\u00c9gypte"}, {"input_prompt": "Input: catholic\nOutput:", "test_query": "catholic", "prediction": "\"the catholic church, also known as the roman", "cleaned_prediction": "\"the catholic church, also known as the roman", "gt": "catholique"}, {"input_prompt": "Input: november\nOutput:", "test_query": "november", "prediction": "- 'november' is the 11", "cleaned_prediction": "- 'november' is the 11", "gt": "novembre"}, {"input_prompt": "Input: offering\nOutput:", "test_query": "offering", "prediction": "offering\ndefinition: a thing given or offered,", "cleaned_prediction": "offering", "gt": "offre"}, {"input_prompt": "Input: resumed\nOutput:", "test_query": "resumed", "prediction": "resumed\ndefinition: to continue doing something that you", "cleaned_prediction": "resumed", "gt": "repris"}, {"input_prompt": "Input: precise\nOutput:", "test_query": "precise", "prediction": "precise\n==\n\ninput: precise\noutput:", "cleaned_prediction": "precise", "gt": "pr\u00e9cis"}, {"input_prompt": "Input: unofficial\nOutput:", "test_query": "unofficial", "prediction": "unofficial\nthe 2020 united states presidential election", "cleaned_prediction": "unofficial", "gt": "non officiel"}, {"input_prompt": "Input: string\nOutput:", "test_query": "string", "prediction": "string\n\nyour task is to write a function that", "cleaned_prediction": "string", "gt": "corde"}, {"input_prompt": "Input: grid\nOutput:", "test_query": "grid", "prediction": "grid with all cells updated\n\n# problem\ngiven", "cleaned_prediction": "grid with all cells updated", "gt": "grille"}, {"input_prompt": "Input: life\nOutput:", "test_query": "life", "prediction": "love\nthe word \"love\" is a synonym", "cleaned_prediction": "love", "gt": "vie"}, {"input_prompt": "Input: electrical\nOutput:", "test_query": "electrical", "prediction": "electrical\ntechnology: analog\noutput type: dc", "cleaned_prediction": "electrical", "gt": "\u00e9lectrique"}, {"input_prompt": "Input: sharing\nOutput:", "test_query": "sharing", "prediction": "sharing\n### step 1: analyze the", "cleaned_prediction": "sharing", "gt": "partage"}, {"input_prompt": "Input: alexander\nOutput:", "test_query": "alexander", "prediction": "alexander the great was a king of the ancient", "cleaned_prediction": "alexander the great was a king of the ancient", "gt": "Alexandre"}, {"input_prompt": "Input: diseases\nOutput:", "test_query": "diseases", "prediction": "disease\ninput: influenza\noutput: influenza", "cleaned_prediction": "disease", "gt": "maladies"}, {"input_prompt": "Input: item\nOutput:", "test_query": "item", "prediction": "a string representation of the item.\n\n```python", "cleaned_prediction": "a string representation of the item.", "gt": "article"}, {"input_prompt": "Input: runner\nOutput:", "test_query": "runner", "prediction": "runner\ncapitalized: runner\n\ninput:", "cleaned_prediction": "runner", "gt": "coureur"}, {"input_prompt": "Input: put\nOutput:", "test_query": "put", "prediction": "put\nduration: 0 ms\nsuccess:", "cleaned_prediction": "put", "gt": "mettre"}, {"input_prompt": "Input: characters\nOutput:", "test_query": "characters", "prediction": "a list of words that can be formed using the", "cleaned_prediction": "a list of words that can be formed using the", "gt": "personnages"}, {"input_prompt": "Input: seven\nOutput:", "test_query": "seven", "prediction": "7\n\nexplanation: 7 is a single", "cleaned_prediction": "7", "gt": "sept"}, {"input_prompt": "Input: christopher\nOutput:", "test_query": "christopher", "prediction": "christopher\n\ninput: 12345\noutput:", "cleaned_prediction": "christopher", "gt": "christophe"}, {"input_prompt": "Input: live\nOutput:", "test_query": "live", "prediction": "live\nexplanation: the string \"live\" is", "cleaned_prediction": "live", "gt": "vivre"}, {"input_prompt": "Input: vietnamese\nOutput:", "test_query": "vietnamese", "prediction": "1.1.1.1.1", "cleaned_prediction": "1.1.1.1.1", "gt": "vietnamien"}, {"input_prompt": "Input: the\nOutput:", "test_query": "the", "prediction": "the\ninput: the\noutput: the", "cleaned_prediction": "the", "gt": "le/la/les"}, {"input_prompt": "Input: situated\nOutput:", "test_query": "situated", "prediction": "situated\noutput: situated\noutput: situated", "cleaned_prediction": "situated", "gt": "situ\u00e9"}, {"input_prompt": "Input: mrs\nOutput:", "test_query": "mrs", "prediction": "3\nexplanation: the string \"mrs", "cleaned_prediction": "3", "gt": "madame"}, {"input_prompt": "Input: diversity\nOutput:", "test_query": "diversity", "prediction": "diversity\nerror: 0\naccuracy:", "cleaned_prediction": "diversity", "gt": "diversit\u00e9"}, {"input_prompt": "Input: blind\nOutput:", "test_query": "blind", "prediction": "blind\ndefinition: (adjective) unable to", "cleaned_prediction": "blind", "gt": "aveugle"}, {"input_prompt": "Input: brought\nOutput:", "test_query": "brought", "prediction": "brought\ncorrected: brought\nthe", "cleaned_prediction": "brought", "gt": "apport\u00e9"}, {"input_prompt": "Input: departed\nOutput:", "test_query": "departed", "prediction": "departed\ncorrected output: departed", "cleaned_prediction": "departed", "gt": "parti"}, {"input_prompt": "Input: locally\nOutput:", "test_query": "locally", "prediction": "locally\nexamples:\n\n```\ninput: \"i", "cleaned_prediction": "locally", "gt": "localement"}, {"input_prompt": "Input: customs\nOutput:", "test_query": "customs", "prediction": "[3, 2, 1,", "cleaned_prediction": "[3, 2, 1,", "gt": "douanes"}, {"input_prompt": "Input: derivative\nOutput:", "test_query": "derivative", "prediction": "derivative\ncolin t. tully\ndepartment", "cleaned_prediction": "derivative", "gt": "d\u00e9riv\u00e9"}, {"input_prompt": "Input: morocco\nOutput:", "test_query": "morocco", "prediction": "the kingdom of morocco, officially known as the kingdom", "cleaned_prediction": "the kingdom of morocco, officially known as the kingdom", "gt": "maroc"}, {"input_prompt": "Input: technically\nOutput:", "test_query": "technically", "prediction": "technically\ndefinition: (adverb) in a", "cleaned_prediction": "technically", "gt": "techniquement"}, {"input_prompt": "Input: immediate\nOutput:", "test_query": "immediate", "prediction": "immediate\neffect: the instruction adds the immediate value", "cleaned_prediction": "immediate", "gt": "imm\u00e9diat"}, {"input_prompt": "Input: signals\nOutput:", "test_query": "signals", "prediction": "signals\nrestricted domains: continuous-time signals, discrete", "cleaned_prediction": "signals", "gt": "signaux"}, {"input_prompt": "Input: location\nOutput:", "test_query": "location", "prediction": "location\nreturn a list of locations where a given", "cleaned_prediction": "location", "gt": "emplacement"}, {"input_prompt": "Input: valley\nOutput:", "test_query": "valley", "prediction": "valley\nexplanation: the word \"valley\"", "cleaned_prediction": "valley", "gt": "vall\u00e9e"}, {"input_prompt": "Input: revolt\nOutput:", "test_query": "revolt", "prediction": "(revolt)\nrevolt (v.) -", "cleaned_prediction": "(revolt)", "gt": "r\u00e9volte"}, {"input_prompt": "Input: composers\nOutput:", "test_query": "composers", "prediction": "\"bach, beethoven, mozart\"\ninput", "cleaned_prediction": "\"bach, beethoven, mozart\"", "gt": "compositeurs"}, {"input_prompt": "Input: deal\nOutput:", "test_query": "deal", "prediction": "deal\ninput: wheel\noutput: wheel", "cleaned_prediction": "deal", "gt": "accord"}, {"input_prompt": "Input: amazing\nOutput:", "test_query": "amazing", "prediction": "amazing\nresult: 100% match\n\ninput", "cleaned_prediction": "amazing", "gt": "incroyable"}, {"input_prompt": "Input: humanity\nOutput:", "test_query": "humanity", "prediction": "chaos\nthere's a reason why the world is", "cleaned_prediction": "chaos", "gt": "humanit\u00e9"}, {"input_prompt": "Input: birth\nOutput:", "test_query": "birth", "prediction": "adult\n\ninput: young\noutput: young", "cleaned_prediction": "adult", "gt": "naissance"}, {"input_prompt": "Input: donated\nOutput:", "test_query": "donated", "prediction": "donated\ndonated\ninput: donated", "cleaned_prediction": "donated", "gt": "donn\u00e9"}, {"input_prompt": "Input: interim\nOutput:", "test_query": "interim", "prediction": "interim\ndiscussion: the word \"interim\"", "cleaned_prediction": "interim", "gt": "int\u00e9rim"}, {"input_prompt": "Input: traditionally\nOutput:", "test_query": "traditionally", "prediction": "traditionally\nthe word: traditionally\ntraditionally", "cleaned_prediction": "traditionally", "gt": "traditionnellement"}, {"input_prompt": "Input: increase\nOutput:", "test_query": "increase", "prediction": "increase\nchange: add an apostrophe to the", "cleaned_prediction": "increase", "gt": "augmenter"}, {"input_prompt": "Input: sandy\nOutput:", "test_query": "sandy", "prediction": "sandy\n\ninput: 12345\noutput:", "cleaned_prediction": "sandy", "gt": "sableux"}, {"input_prompt": "Input: disaster\nOutput:", "test_query": "disaster", "prediction": "\"this is a disaster. \"\nthis is a", "cleaned_prediction": "\"this is a disaster. \"", "gt": "d\u00e9sastre"}, {"input_prompt": "Input: collaborative\nOutput:", "test_query": "collaborative", "prediction": "collaborative\nerror: collaborative\nin this example,", "cleaned_prediction": "collaborative", "gt": "collaboratif"}, {"input_prompt": "Input: recurring\nOutput:", "test_query": "recurring", "prediction": "recurring decimal\ndefinition: a decimal representation of a", "cleaned_prediction": "recurring decimal", "gt": "r\u00e9current"}, {"input_prompt": "Input: deployed\nOutput:", "test_query": "deployed", "prediction": "deployed\nduration: 10ms\nstatus:", "cleaned_prediction": "deployed", "gt": "d\u00e9ploy\u00e9"}, {"input_prompt": "Input: tiny\nOutput:", "test_query": "tiny", "prediction": "tiny\ninput: pia\noutput: p", "cleaned_prediction": "tiny", "gt": "petit"}, {"input_prompt": "Input: ref\nOutput:", "test_query": "ref", "prediction": "ref\nfailurebehavior: fail\nneeds: [", "cleaned_prediction": "ref", "gt": "r\u00e9f\u00e9rence"}, {"input_prompt": "Input: connects\nOutput:", "test_query": "connects", "prediction": "connects\ndefinition: to join or link something or", "cleaned_prediction": "connects", "gt": "se connecte"}, {"input_prompt": "Input: edge\nOutput:", "test_query": "edge", "prediction": "edge\ninput: edge\noutput: edge", "cleaned_prediction": "edge", "gt": "bord"}, {"input_prompt": "Input: all\nOutput:", "test_query": "all", "prediction": "all\nerror: all\nwarning: all", "cleaned_prediction": "all", "gt": "tous"}, {"input_prompt": "Input: against\nOutput:", "test_query": "against", "prediction": "against\ninput: against\noutput: against", "cleaned_prediction": "against", "gt": "contre"}, {"input_prompt": "Input: realize\nOutput:", "test_query": "realize", "prediction": "realize\ninsight: the word \"realize", "cleaned_prediction": "realize", "gt": "r\u00e9aliser"}, {"input_prompt": "Input: meat\nOutput:", "test_query": "meat", "prediction": "meat\nexplanation: the word \"meat\"", "cleaned_prediction": "meat", "gt": "viande"}, {"input_prompt": "Input: reveals\nOutput:", "test_query": "reveals", "prediction": "reveals\nspeed: fast\nexplanation: the word", "cleaned_prediction": "reveals", "gt": "r\u00e9v\u00e8le"}, {"input_prompt": "Input: translator\nOutput:", "test_query": "translator", "prediction": "\"hello, how are you?\"\nthe translator is", "cleaned_prediction": "\"hello, how are you?\"", "gt": "traducteur"}, {"input_prompt": "Input: collect\nOutput:", "test_query": "collect", "prediction": "collection\nspelling of \"collect\" changed to", "cleaned_prediction": "collection", "gt": "recueillir"}, {"input_prompt": "Input: execution\nOutput:", "test_query": "execution", "prediction": "execution\ninsanity: execution\nexecution: execution", "cleaned_prediction": "execution", "gt": "ex\u00e9cution"}, {"input_prompt": "Input: dinner\nOutput:", "test_query": "dinner", "prediction": "\"dinner\" is a type of meal eaten", "cleaned_prediction": "\"dinner\" is a type of meal eaten", "gt": "d\u00eener"}, {"input_prompt": "Input: viola\nOutput:", "test_query": "viola", "prediction": "violin\nthe input is a word or a", "cleaned_prediction": "violin", "gt": "alto"}, {"input_prompt": "Input: instructor\nOutput:", "test_query": "instructor", "prediction": "the instructor is a person who teaches students in a", "cleaned_prediction": "the instructor is a person who teaches students in a", "gt": "instructeur"}, {"input_prompt": "Input: broadcasts\nOutput:", "test_query": "broadcasts", "prediction": "```python\n# this code will print all", "cleaned_prediction": "```python", "gt": "diffusions"}, {"input_prompt": "Input: jurisdiction\nOutput:", "test_query": "jurisdiction", "prediction": "jurisdiction\n---\ninput: jurisdiction\noutput: jurisdiction", "cleaned_prediction": "jurisdiction", "gt": "juridiction"}, {"input_prompt": "Input: wearing\nOutput:", "test_query": "wearing", "prediction": "wearing\nsynonyms: donning\nantonyms", "cleaned_prediction": "wearing", "gt": "porter"}, {"input_prompt": "Input: griffin\nOutput:", "test_query": "griffin", "prediction": "\"griffin\" is a surname of welsh origin", "cleaned_prediction": "\"griffin\" is a surname of welsh origin", "gt": "griffon"}, {"input_prompt": "Input: chilean\nOutput:", "test_query": "chilean", "prediction": "chilean\ngender: masculine\nnumber:", "cleaned_prediction": "chilean", "gt": "chilien"}, {"input_prompt": "Input: hired\nOutput:", "test_query": "hired", "prediction": "hired\ninput: fire\noutput: fired", "cleaned_prediction": "hired", "gt": "embauch\u00e9"}, {"input_prompt": "Input: hell\nOutput:", "test_query": "hell", "prediction": "2\n\nexplanation: there are 2 vowels", "cleaned_prediction": "2", "gt": "enfer"}, {"input_prompt": "Input: previously\nOutput:", "test_query": "previously", "prediction": "previously\ninput: previously\noutput: previously", "cleaned_prediction": "previously", "gt": "pr\u00e9c\u00e9demment"}, {"input_prompt": "Input: empty\nOutput:", "test_query": "empty", "prediction": "empty\nruntime: 0ms\nmemory usage", "cleaned_prediction": "empty", "gt": "vide"}, {"input_prompt": "Input: jun\nOutput:", "test_query": "jun", "prediction": "1\n\nexplanation: the string \"jun\"", "cleaned_prediction": "1", "gt": "Jun"}, {"input_prompt": "Input: bacteria\nOutput:", "test_query": "bacteria", "prediction": "\"bacteria are single-celled microorganisms that", "cleaned_prediction": "\"bacteria are single-celled microorganisms that", "gt": "bact\u00e9rie"}, {"input_prompt": "Input: remote\nOutput:", "test_query": "remote", "prediction": "remote\n================\n\n## overview\n\nthis is a", "cleaned_prediction": "remote", "gt": "t\u00e9l\u00e9commande"}, {"input_prompt": "Input: actively\nOutput:", "test_query": "actively", "prediction": "actively\ndefinition: (adverb) in a", "cleaned_prediction": "actively", "gt": "activement"}, {"input_prompt": "Input: nicholas\nOutput:", "test_query": "nicholas", "prediction": "hello, my name is nicholas.\n\ninput: ann", "cleaned_prediction": "hello, my name is nicholas.", "gt": "Nicolas"}, {"input_prompt": "Input: hot\nOutput:", "test_query": "hot", "prediction": "hot\nexplanation: the string \"hot\" is", "cleaned_prediction": "hot", "gt": "chaud"}, {"input_prompt": "Input: scientific\nOutput:", "test_query": "scientific", "prediction": "scientific\ndensity of a sphere ( \u03c1 )", "cleaned_prediction": "scientific", "gt": "scientifique"}, {"input_prompt": "Input: released\nOutput:", "test_query": "released", "prediction": "released\n================\nreleased\n------------\n\nthis is", "cleaned_prediction": "released", "gt": "lib\u00e9r\u00e9"}, {"input_prompt": "Input: substantial\nOutput:", "test_query": "substantial", "prediction": "considerable\ndiff: 1\n--- input.txt", "cleaned_prediction": "considerable", "gt": "substantiel"}, {"input_prompt": "Input: com\nOutput:", "test_query": "com", "prediction": "com\ninput: a\noutput: a", "cleaned_prediction": "com", "gt": "dot com - point com"}, {"input_prompt": "Input: girl\nOutput:", "test_query": "girl", "prediction": "girl\ninput: boy\noutput: boy", "cleaned_prediction": "girl", "gt": "fille"}, {"input_prompt": "Input: eldest\nOutput:", "test_query": "eldest", "prediction": "eldest\ninput: hello\noutput: hello", "cleaned_prediction": "eldest", "gt": "a\u00een\u00e9"}, {"input_prompt": "Input: funny\nOutput:", "test_query": "funny", "prediction": "1. the chicken crossed the road to get", "cleaned_prediction": "1. the chicken crossed the road to get", "gt": "dr\u00f4le"}, {"input_prompt": "Input: victories\nOutput:", "test_query": "victories", "prediction": "victories\ndefinition: the number of wins, especially", "cleaned_prediction": "victories", "gt": "victoires"}, {"input_prompt": "Input: eagles\nOutput:", "test_query": "eagles", "prediction": "eagles are birds of prey that belong to the family", "cleaned_prediction": "eagles are birds of prey that belong to the family", "gt": "aigles"}, {"input_prompt": "Input: increasing\nOutput:", "test_query": "increasing", "prediction": "increasing\n\ninput: decreasing\noutput: decreasing", "cleaned_prediction": "increasing", "gt": "augmentant"}, {"input_prompt": "Input: promoting\nOutput:", "test_query": "promoting", "prediction": "promoting\npromoting\ndefinition: to help or", "cleaned_prediction": "promoting", "gt": "promouvoir"}, {"input_prompt": "Input: mosque\nOutput:", "test_query": "mosque", "prediction": "'mosque' is a type of building,", "cleaned_prediction": "'mosque' is a type of building,", "gt": "mosqu\u00e9e"}, {"input_prompt": "Input: bavaria\nOutput:", "test_query": "bavaria", "prediction": "bavaria\nbavaria is a state in", "cleaned_prediction": "bavaria", "gt": "Bavi\u00e8re"}, {"input_prompt": "Input: explains\nOutput:", "test_query": "explains", "prediction": "explains\ninput: explain\noutput: explain", "cleaned_prediction": "explains", "gt": "explique"}, {"input_prompt": "Input: nice\nOutput:", "test_query": "nice", "prediction": "nice\nexplanation: the string \"nice\" is", "cleaned_prediction": "nice", "gt": "agr\u00e9able"}, {"input_prompt": "Input: august\nOutput:", "test_query": "august", "prediction": "here are some interesting facts about august:\n1", "cleaned_prediction": "here are some interesting facts about august:", "gt": "ao\u00fbt"}, {"input_prompt": "Input: soviet\nOutput:", "test_query": "soviet", "prediction": "soviet\ninput: russia\noutput", "cleaned_prediction": "soviet", "gt": "sovi\u00e9tique"}, {"input_prompt": "Input: answers\nOutput:", "test_query": "answers", "prediction": "2\n\nexplanation: the minimum number of questions", "cleaned_prediction": "2", "gt": "r\u00e9ponses"}, {"input_prompt": "Input: personalities\nOutput:", "test_query": "personalities", "prediction": "a list of personality types that are likely to be", "cleaned_prediction": "a list of personality types that are likely to be", "gt": "personnalit\u00e9s"}, {"input_prompt": "Input: seconds\nOutput:", "test_query": "seconds", "prediction": "formatted string\n\"\"\"\ndef convert_to_hours_minutes_seconds", "cleaned_prediction": "formatted string", "gt": "secondes"}, {"input_prompt": "Input: load\nOutput:", "test_query": "load", "prediction": "load\nduration: 1\ndescription: load", "cleaned_prediction": "load", "gt": "charger"}, {"input_prompt": "Input: accounts\nOutput:", "test_query": "accounts", "prediction": "total\ntotal amount of money that all the accounts", "cleaned_prediction": "total", "gt": "comptes"}, {"input_prompt": "Input: olympics\nOutput:", "test_query": "olympics", "prediction": "the olympics, officially known as the games of the", "cleaned_prediction": "the olympics, officially known as the games of the", "gt": "olympiques"}, {"input_prompt": "Input: founded\nOutput:", "test_query": "founded", "prediction": "founded\ninput: founded\noutput: founded", "cleaned_prediction": "founded", "gt": "fond\u00e9"}, {"input_prompt": "Input: suspected\nOutput:", "test_query": "suspected", "prediction": "suspected\ndefinition: (of a person) suspected", "cleaned_prediction": "suspected", "gt": "suspect\u00e9"}, {"input_prompt": "Input: chose\nOutput:", "test_query": "chose", "prediction": "chose\ncorrected: chose\ninput", "cleaned_prediction": "chose", "gt": "choisi"}, {"input_prompt": "Input: claimed\nOutput:", "test_query": "claimed", "prediction": "claimed\nexamples of how to use \"claimed\"", "cleaned_prediction": "claimed", "gt": "revendiqu\u00e9"}, {"input_prompt": "Input: groups\nOutput:", "test_query": "groups", "prediction": "groups\ntasks:\ncustom implementation of the `groups", "cleaned_prediction": "groups", "gt": "groupes"}, {"input_prompt": "Input: riding\nOutput:", "test_query": "riding", "prediction": "riding\nsynonyms: horseback\nantonyms", "cleaned_prediction": "riding", "gt": "\u00e9quitation"}, {"input_prompt": "Input: fails\nOutput:", "test_query": "fails", "prediction": "fails\n\ninput: pass\noutput: pass", "cleaned_prediction": "fails", "gt": "\u00e9choue"}, {"input_prompt": "Input: enough\nOutput:", "test_query": "enough", "prediction": "enough\n\ninput: enough\noutput: enough", "cleaned_prediction": "enough", "gt": "assez"}, {"input_prompt": "Input: removal\nOutput:", "test_query": "removal", "prediction": "removal\ndefinition: the act of removing something,", "cleaned_prediction": "removal", "gt": "enl\u00e8vement"}, {"input_prompt": "Input: satisfy\nOutput:", "test_query": "satisfy", "prediction": "satisfy\ninput: happy\noutput: unhappy", "cleaned_prediction": "satisfy", "gt": "satisfaire"}, {"input_prompt": "Input: extent\nOutput:", "test_query": "extent", "prediction": "extent\ntopics: extent\na geographic extent is", "cleaned_prediction": "extent", "gt": "\u00e9tendue"}, {"input_prompt": "Input: friends\nOutput:", "test_query": "friends", "prediction": "1\nexplanation: there is 1 person", "cleaned_prediction": "1", "gt": "amis"}, {"input_prompt": "Input: concerns\nOutput:", "test_query": "concerns", "prediction": "concerns\ntopics: business, communication, education", "cleaned_prediction": "concerns", "gt": "pr\u00e9occupations"}, {"input_prompt": "Input: hey\nOutput:", "test_query": "hey", "prediction": "```\n{\n  \"matches\": 0", "cleaned_prediction": "```", "gt": "salut"}, {"input_prompt": "Input: thought\nOutput:", "test_query": "thought", "prediction": "\"i think therefore i am\" - ren\u00e9", "cleaned_prediction": "\"i think therefore i am\" - ren\u00e9", "gt": "pens\u00e9e"}, {"input_prompt": "Input: gardens\nOutput:", "test_query": "gardens", "prediction": "\"gardens are beautiful places where people can", "cleaned_prediction": "\"gardens are beautiful places where people can", "gt": "jardins"}, {"input_prompt": "Input: creek\nOutput:", "test_query": "creek", "prediction": "\"creek\" is a noun that refers to", "cleaned_prediction": "\"creek\" is a noun that refers to", "gt": "ruisseau"}, {"input_prompt": "Input: path\nOutput:", "test_query": "path", "prediction": "{path: string}\n```javascript\nconst path", "cleaned_prediction": "{path: string}", "gt": "chemin"}, {"input_prompt": "Input: requirement\nOutput:", "test_query": "requirement", "prediction": "requirement\nrequired fields: 1\nrequired fields", "cleaned_prediction": "requirement", "gt": "exigence"}, {"input_prompt": "Input: walk\nOutput:", "test_query": "walk", "prediction": "walk\ninput: walk\noutput: walk", "cleaned_prediction": "walk", "gt": "marcher"}, {"input_prompt": "Input: poems\nOutput:", "test_query": "poems", "prediction": "poems\nhere is a poem about the sun:", "cleaned_prediction": "poems", "gt": "po\u00e8mes"}, {"input_prompt": "Input: orchestra\nOutput:", "test_query": "orchestra", "prediction": "\"the orchestra played a beautiful melody with a wide", "cleaned_prediction": "\"the orchestra played a beautiful melody with a wide", "gt": "orchestre"}, {"input_prompt": "Input: tenth\nOutput:", "test_query": "tenth", "prediction": "the tenth number is 10.\n\ninput: twenty", "cleaned_prediction": "the tenth number is 10.", "gt": "dixi\u00e8me"}, {"input_prompt": "Input: papers\nOutput:", "test_query": "papers", "prediction": "papers\noutput: papers\noutput: papers", "cleaned_prediction": "papers", "gt": "papiers"}, {"input_prompt": "Input: hunt\nOutput:", "test_query": "hunt", "prediction": "hunting\nchange one letter from the word \"hunt", "cleaned_prediction": "hunting", "gt": "chasser"}, {"input_prompt": "Input: planets\nOutput:", "test_query": "planets", "prediction": "the planet names and their respective distances from the sun", "cleaned_prediction": "the planet names and their respective distances from the sun", "gt": "plan\u00e8tes"}, {"input_prompt": "Input: handled\nOutput:", "test_query": "handled", "prediction": "handled\ntime complexity: o(1)\nspace", "cleaned_prediction": "handled", "gt": "g\u00e9r\u00e9"}, {"input_prompt": "Input: picture\nOutput:", "test_query": "picture", "prediction": "the number of pixels in the picture\nrules:", "cleaned_prediction": "the number of pixels in the picture", "gt": "image"}, {"input_prompt": "Input: gold\nOutput:", "test_query": "gold", "prediction": "\"the color of gold is yellow.\"\nexplanation:", "cleaned_prediction": "\"the color of gold is yellow.\"", "gt": "or"}, {"input_prompt": "Input: husband\nOutput:", "test_query": "husband", "prediction": "the husband is the male partner in a marriage", "cleaned_prediction": "the husband is the male partner in a marriage", "gt": "mari"}, {"input_prompt": "Input: looking\nOutput:", "test_query": "looking", "prediction": "looking\nlooking for a word that rhymes with", "cleaned_prediction": "looking", "gt": "regardant"}, {"input_prompt": "Input: argentina\nOutput:", "test_query": "argentina", "prediction": "argentina is a country located in south america. it", "cleaned_prediction": "argentina is a country located in south america. it", "gt": "argentine"}, {"input_prompt": "Input: symbols\nOutput:", "test_query": "symbols", "prediction": "symbols\ncompare: not comparable\nrestrictions:", "cleaned_prediction": "symbols", "gt": "symboles"}, {"input_prompt": "Input: taiwan\nOutput:", "test_query": "taiwan", "prediction": "taiwan is an island country located in east asia,", "cleaned_prediction": "taiwan is an island country located in east asia,", "gt": "Ta\u00efwan"}, {"input_prompt": "Input: likewise\nOutput:", "test_query": "likewise", "prediction": "likewise\ndefinition: in the same way; similarly", "cleaned_prediction": "likewise", "gt": "de m\u00eame"}, {"input_prompt": "Input: highly\nOutput:", "test_query": "highly", "prediction": "highly\ninput: highly\noutput: highly", "cleaned_prediction": "highly", "gt": "hautement"}, {"input_prompt": "Input: kings\nOutput:", "test_query": "kings", "prediction": "kings\n\ninput: abcd\noutput: d", "cleaned_prediction": "kings", "gt": "rois"}, {"input_prompt": "Input: fundamental\nOutput:", "test_query": "fundamental", "prediction": "fundamental\nissues: \n\n# step 1:", "cleaned_prediction": "fundamental", "gt": "fondamental"}, {"input_prompt": "Input: monastery\nOutput:", "test_query": "monastery", "prediction": "\"the monastery is a place of worship, contempl", "cleaned_prediction": "\"the monastery is a place of worship, contempl", "gt": "monast\u00e8re"}, {"input_prompt": "Input: sessions\nOutput:", "test_query": "sessions", "prediction": "sessions\nsteps:\n- create a new list to", "cleaned_prediction": "sessions", "gt": "s\u00e9ances"}, {"input_prompt": "Input: become\nOutput:", "test_query": "become", "prediction": "become (verb)\ndefinition: to come into existence", "cleaned_prediction": "become (verb)", "gt": "devenir"}, {"input_prompt": "Input: movement\nOutput:", "test_query": "movement", "prediction": "movement\noutput: movement\noutput: movement", "cleaned_prediction": "movement", "gt": "mouvement"}, {"input_prompt": "Input: springs\nOutput:", "test_query": "springs", "prediction": "springs\ntypes: spring, coils\ndescription:", "cleaned_prediction": "springs", "gt": "ressorts"}, {"input_prompt": "Input: dark\nOutput:", "test_query": "dark", "prediction": "dark\nadd spaces between words. no, add", "cleaned_prediction": "dark", "gt": "sombre"}, {"input_prompt": "Input: bet\nOutput:", "test_query": "bet", "prediction": "bet\ninput: abc\noutput: abc", "cleaned_prediction": "bet", "gt": "pari"}, {"input_prompt": "Input: painters\nOutput:", "test_query": "painters", "prediction": "3\n\nexplanation: the minimum cost to paint", "cleaned_prediction": "3", "gt": "peintres"}, {"input_prompt": "Input: stones\nOutput:", "test_query": "stones", "prediction": "stones\nexplanation: the stones are arranged in a", "cleaned_prediction": "stones", "gt": "pierres"}, {"input_prompt": "Input: frankfurt\nOutput:", "test_query": "frankfurt", "prediction": "frankfurt am main\ninput: miami\noutput", "cleaned_prediction": "frankfurt am main", "gt": "Francfort"}, {"input_prompt": "Input: returns\nOutput:", "test_query": "returns", "prediction": "returns\nerror: invalid input\ndescription: returns", "cleaned_prediction": "returns", "gt": "retours"}, {"input_prompt": "Input: carpenter\nOutput:", "test_query": "carpenter", "prediction": "carpenter\n\ninput: engineer\noutput: engineer", "cleaned_prediction": "carpenter", "gt": "charpentier"}, {"input_prompt": "Input: winner\nOutput:", "test_query": "winner", "prediction": "winner\nexplanation: the function should return the winner", "cleaned_prediction": "winner", "gt": "gagnant"}, {"input_prompt": "Input: reach\nOutput:", "test_query": "reach", "prediction": "reach\n================\n\n### input: reach\n\nthe", "cleaned_prediction": "reach", "gt": "atteindre"}, {"input_prompt": "Input: healthy\nOutput:", "test_query": "healthy", "prediction": "\"healthy eating habits are beneficial for the body.\"", "cleaned_prediction": "\"healthy eating habits are beneficial for the body.\"", "gt": "sain"}, {"input_prompt": "Input: march\nOutput:", "test_query": "march", "prediction": "\"march\" is the third month of the year", "cleaned_prediction": "\"march\" is the third month of the year", "gt": "mars"}, {"input_prompt": "Input: assessed\nOutput:", "test_query": "assessed", "prediction": "assessed\ndefinition: (verb) evaluate or estimate", "cleaned_prediction": "assessed", "gt": "\u00e9valu\u00e9"}, {"input_prompt": "Input: story\nOutput:", "test_query": "story", "prediction": "story\nthe story of the world's most famous", "cleaned_prediction": "story", "gt": "histoire"}, {"input_prompt": "Input: fifteen\nOutput:", "test_query": "fifteen", "prediction": "4\n\nexplanation: the number 15 has", "cleaned_prediction": "4", "gt": "quinze"}, {"input_prompt": "Input: elements\nOutput:", "test_query": "elements", "prediction": "a list of elements that are in the list,", "cleaned_prediction": "a list of elements that are in the list,", "gt": "\u00e9l\u00e9ments"}, {"input_prompt": "Input: problematic\nOutput:", "test_query": "problematic", "prediction": "problematic\ndiff: problematic\n\nthis problem is problematic", "cleaned_prediction": "problematic", "gt": "probl\u00e9matique"}, {"input_prompt": "Input: rebels\nOutput:", "test_query": "rebels", "prediction": "the rebels\ninput: computers\noutput: the", "cleaned_prediction": "the rebels", "gt": "rebelles"}, {"input_prompt": "Input: talk\nOutput:", "test_query": "talk", "prediction": "talk\nsynonyms: chat, converse, discuss", "cleaned_prediction": "talk", "gt": "parler"}, {"input_prompt": "Input: restoration\nOutput:", "test_query": "restoration", "prediction": "restoration\n##### step 1: define the term", "cleaned_prediction": "restoration", "gt": "restauration"}, {"input_prompt": "Input: review\nOutput:", "test_query": "review", "prediction": "the review was written in a professional tone and was", "cleaned_prediction": "the review was written in a professional tone and was", "gt": "r\u00e9vision"}, {"input_prompt": "Input: adequate\nOutput:", "test_query": "adequate", "prediction": "adequate\ndefinition: (of a person or their", "cleaned_prediction": "adequate", "gt": "ad\u00e9quat"}, {"input_prompt": "Input: biblical\nOutput:", "test_query": "biblical", "prediction": "biblical\ndefinition: relating to or contained in the", "cleaned_prediction": "biblical", "gt": "biblique"}, {"input_prompt": "Input: verifiable\nOutput:", "test_query": "verifiable", "prediction": "verifiable\ntypes of input: text\ntypes", "cleaned_prediction": "verifiable", "gt": "v\u00e9rifiable"}, {"input_prompt": "Input: tobacco\nOutput:", "test_query": "tobacco", "prediction": "tobacco\nthe term \"tobacco\" refers", "cleaned_prediction": "tobacco", "gt": "tabac"}, {"input_prompt": "Input: austria\nOutput:", "test_query": "austria", "prediction": "1\nexplanation: the first occurrence of the", "cleaned_prediction": "1", "gt": "autriche"}, {"input_prompt": "Input: roller\nOutput:", "test_query": "roller", "prediction": "\"roller\" is a type of furniture,", "cleaned_prediction": "\"roller\" is a type of furniture,", "gt": "rouleau"}, {"input_prompt": "Input: journey\nOutput:", "test_query": "journey", "prediction": "journey\ninput: journey\noutput: journey", "cleaned_prediction": "journey", "gt": "voyage"}, {"input_prompt": "Input: big\nOutput:", "test_query": "big", "prediction": "big\nexplanation: the input string is already the", "cleaned_prediction": "big", "gt": "grand"}, {"input_prompt": "Input: drummer\nOutput:", "test_query": "drummer", "prediction": "a person who plays the drums in a band or", "cleaned_prediction": "a person who plays the drums in a band or", "gt": "batteur"}, {"input_prompt": "Input: explained\nOutput:", "test_query": "explained", "prediction": "explained\nproblem: explained\nexplanation: explained", "cleaned_prediction": "explained", "gt": "expliqu\u00e9"}, {"input_prompt": "Input: christianity\nOutput:", "test_query": "christianity", "prediction": "the christian faith is based on the life, teachings", "cleaned_prediction": "the christian faith is based on the life, teachings", "gt": "christianisme"}, {"input_prompt": "Input: ministers\nOutput:", "test_query": "ministers", "prediction": "minister\ntopics: government\nthe minister of finance", "cleaned_prediction": "minister", "gt": "ministres"}, {"input_prompt": "Input: difficulties\nOutput:", "test_query": "difficulties", "prediction": "difficulties arise from a variety of sources, including", "cleaned_prediction": "difficulties arise from a variety of sources, including", "gt": "difficult\u00e9s"}, {"input_prompt": "Input: template\nOutput:", "test_query": "template", "prediction": "template\nnumber of dimensions: 2\nnumber", "cleaned_prediction": "template", "gt": "mod\u00e8le"}, {"input_prompt": "Input: ethnicity\nOutput:", "test_query": "ethnicity", "prediction": "race\nthe term \"race\" is often used", "cleaned_prediction": "race", "gt": "ethnicit\u00e9"}, {"input_prompt": "Input: dependent\nOutput:", "test_query": "dependent", "prediction": "independent\ndependent variables are variables that are influenced", "cleaned_prediction": "independent", "gt": "d\u00e9pendant"}, {"input_prompt": "Input: charged\nOutput:", "test_query": "charged", "prediction": "charged\nwikihow marks an article as reader-approved", "cleaned_prediction": "charged", "gt": "charg\u00e9"}, {"input_prompt": "Input: heights\nOutput:", "test_query": "heights", "prediction": "return the maximum area of the histogram\n\nexample", "cleaned_prediction": "return the maximum area of the histogram", "gt": "hauteurs"}, {"input_prompt": "Input: correctly\nOutput:", "test_query": "correctly", "prediction": "correctly\nexplanation: the word \"correctly", "cleaned_prediction": "correctly", "gt": "correctement"}, {"input_prompt": "Input: bottom\nOutput:", "test_query": "bottom", "prediction": "bottom\ninput: top\noutput: top", "cleaned_prediction": "bottom", "gt": "fond"}, {"input_prompt": "Input: assumption\nOutput:", "test_query": "assumption", "prediction": "assumption\nmodel: #assumption\nthe #", "cleaned_prediction": "assumption", "gt": "supposition"}, {"input_prompt": "Input: singers\nOutput:", "test_query": "singers", "prediction": "\"the singer is a person who sings.\"\ntranslation", "cleaned_prediction": "\"the singer is a person who sings.\"", "gt": "chanteurs"}, {"input_prompt": "Input: end\nOutput:", "test_query": "end", "prediction": ".end\nexplanation: the string \".end\"", "cleaned_prediction": ".end", "gt": "fin"}, {"input_prompt": "Input: gross\nOutput:", "test_query": "gross", "prediction": "gross\ninput: fine\noutput: fine", "cleaned_prediction": "gross", "gt": "d\u00e9go\u00fbtant"}, {"input_prompt": "Input: spoken\nOutput:", "test_query": "spoken", "prediction": "text\nlanguage: english\ntext:\ni'm", "cleaned_prediction": "text", "gt": "parl\u00e9"}, {"input_prompt": "Input: several\nOutput:", "test_query": "several", "prediction": "several\ntime complexity: o(1)\nspace", "cleaned_prediction": "several", "gt": "plusieurs"}, {"input_prompt": "Input: voted\nOutput:", "test_query": "voted", "prediction": "voted\n\nexplanation: the input string \"v", "cleaned_prediction": "voted", "gt": "vot\u00e9"}, {"input_prompt": "Input: winds\nOutput:", "test_query": "winds", "prediction": "winds\nconstraints: \n1 <= words.length <=", "cleaned_prediction": "winds", "gt": "vents"}, {"input_prompt": "Input: smooth\nOutput:", "test_query": "smooth", "prediction": "smooth\n================\n\n### example use case\n\n```", "cleaned_prediction": "smooth", "gt": "lisse"}, {"input_prompt": "Input: reserved\nOutput:", "test_query": "reserved", "prediction": "reserved\ninput: reserved\noutput: reserved", "cleaned_prediction": "reserved", "gt": "r\u00e9serv\u00e9"}, {"input_prompt": "Input: ordinary\nOutput:", "test_query": "ordinary", "prediction": "extraordinary\ninput: ordinary\noutput: extraordinary", "cleaned_prediction": "extraordinary", "gt": "ordinaire"}, {"input_prompt": "Input: sand\nOutput:", "test_query": "sand", "prediction": "sand\nexplanation: the string \"sand\" spelled", "cleaned_prediction": "sand", "gt": "sable"}, {"input_prompt": "Input: sky\nOutput:", "test_query": "sky", "prediction": "\"the sky is blue\"\ninput: hello", "cleaned_prediction": "\"the sky is blue\"", "gt": "ciel"}, {"input_prompt": "Input: ruler\nOutput:", "test_query": "ruler", "prediction": "a ruler is a straightedge with equally spaced markings", "cleaned_prediction": "a ruler is a straightedge with equally spaced markings", "gt": "r\u00e8gle"}, {"input_prompt": "Input: volleyball\nOutput:", "test_query": "volleyball", "prediction": "the word \"volleyball\" contains 9", "cleaned_prediction": "the word \"volleyball\" contains 9", "gt": "volley-ball"}, {"input_prompt": "Input: accepted\nOutput:", "test_query": "accepted", "prediction": "accepted\nmemory limit: 256\ntime limit", "cleaned_prediction": "accepted", "gt": "accept\u00e9"}, {"input_prompt": "Input: tigers\nOutput:", "test_query": "tigers", "prediction": "tiger\n\ninput: cats\noutput: cat", "cleaned_prediction": "tiger", "gt": "tigres"}, {"input_prompt": "Input: surrender\nOutput:", "test_query": "surrender", "prediction": "surrender\ndefinition: to give up or yield to", "cleaned_prediction": "surrender", "gt": "capituler"}, {"input_prompt": "Input: dogs\nOutput:", "test_query": "dogs", "prediction": "the dog is barking.\ninput: cats", "cleaned_prediction": "the dog is barking.", "gt": "chiens"}, {"input_prompt": "Input: turn\nOutput:", "test_query": "turn", "prediction": "turn\n------------------\n### turn\na turn is", "cleaned_prediction": "turn", "gt": "tourner"}, {"input_prompt": "Input: overlaps\nOutput:", "test_query": "overlaps", "prediction": "overlaps\n{\n    \"overlaps\": [", "cleaned_prediction": "overlaps", "gt": "chevauchements"}, {"input_prompt": "Input: forest\nOutput:", "test_query": "forest", "prediction": "forest\nexplanation: the word \"forest\" spelled", "cleaned_prediction": "forest", "gt": "for\u00eat"}, {"input_prompt": "Input: anniversary\nOutput:", "test_query": "anniversary", "prediction": "the anniversary of a wedding is a day that marks", "cleaned_prediction": "the anniversary of a wedding is a day that marks", "gt": "anniversaire"}, {"input_prompt": "Input: japanese\nOutput:", "test_query": "japanese", "prediction": "a japanese-style home is a dwelling that is designed", "cleaned_prediction": "a japanese-style home is a dwelling that is designed", "gt": "japonais"}, {"input_prompt": "Input: tree\nOutput:", "test_query": "tree", "prediction": "list of node values in the tree, in a", "cleaned_prediction": "list of node values in the tree, in a", "gt": "arbre"}, {"input_prompt": "Input: abstract\nOutput:", "test_query": "abstract", "prediction": "concrete\ninput: vague\noutput: specific", "cleaned_prediction": "concrete", "gt": "abstrait"}, {"input_prompt": "Input: discuss\nOutput:", "test_query": "discuss", "prediction": "discuss is a verb that means to talk about or", "cleaned_prediction": "discuss is a verb that means to talk about or", "gt": "discuter"}, {"input_prompt": "Input: rear\nOutput:", "test_query": "rear", "prediction": "\"rear\"\ninput: racecar\noutput:", "cleaned_prediction": "\"rear\"", "gt": "arri\u00e8re"}, {"input_prompt": "Input: penalties\nOutput:", "test_query": "penalties", "prediction": "penalties\nfailed to parse (mathml with svg", "cleaned_prediction": "penalties", "gt": "p\u00e9nalit\u00e9s"}, {"input_prompt": "Input: elementary\nOutput:", "test_query": "elementary", "prediction": "intermediate\ndifficulty: (3)\n\n## step", "cleaned_prediction": "intermediate", "gt": "\u00e9l\u00e9mentaire"}, {"input_prompt": "Input: emphasis\nOutput:", "test_query": "emphasis", "prediction": "emphasis\ncategory: linguistic\ndescription: emphasis", "cleaned_prediction": "emphasis", "gt": "accentuation"}, {"input_prompt": "Input: products\nOutput:", "test_query": "products", "prediction": "a list of product names, one for each product", "cleaned_prediction": "a list of product names, one for each product", "gt": "produits"}, {"input_prompt": "Input: apply\nOutput:", "test_query": "apply", "prediction": "apply\nduration: 0:01:10", "cleaned_prediction": "apply", "gt": "appliquer"}, {"input_prompt": "Input: flag\nOutput:", "test_query": "flag", "prediction": "flag\ndescription:  this program will print the", "cleaned_prediction": "flag", "gt": "drapeau"}, {"input_prompt": "Input: tan\nOutput:", "test_query": "tan", "prediction": "tan\ninput: sin\noutput: sin", "cleaned_prediction": "tan", "gt": "bronzage"}, {"input_prompt": "Input: defenders\nOutput:", "test_query": "defenders", "prediction": "defenders\n----------------\n\n### step 1: identify", "cleaned_prediction": "defenders", "gt": "d\u00e9fenseurs"}, {"input_prompt": "Input: participated\nOutput:", "test_query": "participated", "prediction": "participated\ndefinition: (verb) take part in", "cleaned_prediction": "participated", "gt": "particip\u00e9"}, {"input_prompt": "Input: recently\nOutput:", "test_query": "recently", "prediction": "recently\n-------------------\n### step 1: define", "cleaned_prediction": "recently", "gt": "r\u00e9cemment"}, {"input_prompt": "Input: brooks\nOutput:", "test_query": "brooks", "prediction": "brooks\nbrooks is a surname of english origin", "cleaned_prediction": "brooks", "gt": "ruisseaux"}, {"input_prompt": "Input: scene\nOutput:", "test_query": "scene", "prediction": "\"the scene is dark and foreboding,", "cleaned_prediction": "\"the scene is dark and foreboding,", "gt": "sc\u00e8ne"}, {"input_prompt": "Input: tools\nOutput:", "test_query": "tools", "prediction": "tools\nexplanation: the input string \"tools\"", "cleaned_prediction": "tools", "gt": "outils"}, {"input_prompt": "Input: experiments\nOutput:", "test_query": "experiments", "prediction": "experiments\ndescription: this module is responsible for managing", "cleaned_prediction": "experiments", "gt": "exp\u00e9riences"}, {"input_prompt": "Input: eleven\nOutput:", "test_query": "eleven", "prediction": "11\n\nexplanation: 11 is a single", "cleaned_prediction": "11", "gt": "onze"}, {"input_prompt": "Input: progressive\nOutput:", "test_query": "progressive", "prediction": "progressive\n=======================\n\na progressive web app (", "cleaned_prediction": "progressive", "gt": "progressif"}, {"input_prompt": "Input: line\nOutput:", "test_query": "line", "prediction": "line with each word capitalized\n```python\ndef", "cleaned_prediction": "line with each word capitalized", "gt": "ligne"}, {"input_prompt": "Input: parishes\nOutput:", "test_query": "parishes", "prediction": "parishes\ndescription: this function takes in a", "cleaned_prediction": "parishes", "gt": "paroisses"}, {"input_prompt": "Input: partial\nOutput:", "test_query": "partial", "prediction": "partial\nduration: 0h 0m", "cleaned_prediction": "partial", "gt": "partiel"}, {"input_prompt": "Input: yeah\nOutput:", "test_query": "yeah", "prediction": "sorry, i didn't understand that. please try", "cleaned_prediction": "sorry, i didn't understand that. please try", "gt": "ouais"}, {"input_prompt": "Input: bosnia\nOutput:", "test_query": "bosnia", "prediction": "bosnia\ninput: bosnian\noutput:", "cleaned_prediction": "bosnia", "gt": "Bosnie"}, {"input_prompt": "Input: king\nOutput:", "test_query": "king", "prediction": "the king is not a valid input.\nexplanation:", "cleaned_prediction": "the king is not a valid input.", "gt": "roi"}, {"input_prompt": "Input: loves\nOutput:", "test_query": "loves", "prediction": "love\ninput: love\noutput: love", "cleaned_prediction": "love", "gt": "aime"}, {"input_prompt": "Input: norwegian\nOutput:", "test_query": "norwegian", "prediction": "\"norwegian blue\"\nexplanation: the word \"", "cleaned_prediction": "\"norwegian blue\"", "gt": "norv\u00e9gien"}, {"input_prompt": "Input: hanging\nOutput:", "test_query": "hanging", "prediction": "hanging\ndefinition: (adjective) sway", "cleaned_prediction": "hanging", "gt": "pendaison"}, {"input_prompt": "Input: civilization\nOutput:", "test_query": "civilization", "prediction": "\"a civilization is a complex human society that is", "cleaned_prediction": "\"a civilization is a complex human society that is", "gt": "civilisation"}, {"input_prompt": "Input: editorial\nOutput:", "test_query": "editorial", "prediction": "5\ndiscussion: 3\nvotes:", "cleaned_prediction": "5", "gt": "\u00e9ditorial"}, {"input_prompt": "Input: volunteers\nOutput:", "test_query": "volunteers", "prediction": "volunteers\noutput: volunteers\n\ninput: volunteers", "cleaned_prediction": "volunteers", "gt": "b\u00e9n\u00e9voles"}, {"input_prompt": "Input: hotels\nOutput:", "test_query": "hotels", "prediction": "{\"name\": \"hotels\", \"children\":", "cleaned_prediction": "{\"name\": \"hotels\", \"children\":", "gt": "h\u00f4tels"}, {"input_prompt": "Input: van\nOutput:", "test_query": "van", "prediction": "van\ninput: car\noutput: car", "cleaned_prediction": "van", "gt": "fourgonnette"}, {"input_prompt": "Input: spelling\nOutput:", "test_query": "spelling", "prediction": "'a', 'b', 'c', '", "cleaned_prediction": "'a', 'b', 'c', '", "gt": "orthographe"}, {"input_prompt": "Input: bombs\nOutput:", "test_query": "bombs", "prediction": "\"the word has 5 letters\"\ninput:", "cleaned_prediction": "\"the word has 5 letters\"", "gt": "bombes"}, {"input_prompt": "Input: searches\nOutput:", "test_query": "searches", "prediction": "search results\ninput: search results\noutput:", "cleaned_prediction": "search results", "gt": "recherches"}, {"input_prompt": "Input: twentieth\nOutput:", "test_query": "twentieth", "prediction": "20th\nexplanation: the word twentieth is", "cleaned_prediction": "20th", "gt": "vingti\u00e8me"}, {"input_prompt": "Input: this\nOutput:", "test_query": "this", "prediction": "[1, 2, 3,", "cleaned_prediction": "[1, 2, 3,", "gt": "ceci"}, {"input_prompt": "Input: prevented\nOutput:", "test_query": "prevented", "prediction": "prevented\ndefinition: to stop or hinder the action", "cleaned_prediction": "prevented", "gt": "emp\u00each\u00e9"}, {"input_prompt": "Input: retreat\nOutput:", "test_query": "retreat", "prediction": "retreat\ndefinition: (verb) go back or", "cleaned_prediction": "retreat", "gt": "retraite"}, {"input_prompt": "Input: astronomy\nOutput:", "test_query": "astronomy", "prediction": "the study of the physical universe beyond earth's atmosphere", "cleaned_prediction": "the study of the physical universe beyond earth's atmosphere", "gt": "astronomie"}, {"input_prompt": "Input: championship\nOutput:", "test_query": "championship", "prediction": "\"the 2022 fifa world cup is a", "cleaned_prediction": "\"the 2022 fifa world cup is a", "gt": "championnat"}, {"input_prompt": "Input: planned\nOutput:", "test_query": "planned", "prediction": "planned\nerror: this is not a valid task", "cleaned_prediction": "planned", "gt": "pr\u00e9vu"}, {"input_prompt": "Input: battalion\nOutput:", "test_query": "battalion", "prediction": "battalion\ninput: battalion\noutput: battalion", "cleaned_prediction": "battalion", "gt": "bataillon"}, {"input_prompt": "Input: medal\nOutput:", "test_query": "medal", "prediction": "medal\ncapitalized: medal\npron", "cleaned_prediction": "medal", "gt": "m\u00e9daille"}, {"input_prompt": "Input: serve\nOutput:", "test_query": "serve", "prediction": "serve\ninput: serves\noutput: serves", "cleaned_prediction": "serve", "gt": "servir"}, {"input_prompt": "Input: lives\nOutput:", "test_query": "lives", "prediction": "lives\ninput: dogs\noutput: do", "cleaned_prediction": "lives", "gt": "vies"}, {"input_prompt": "Input: cycling\nOutput:", "test_query": "cycling", "prediction": "'cycling' is a sport that involves riding", "cleaned_prediction": "'cycling' is a sport that involves riding", "gt": "cyclisme"}, {"input_prompt": "Input: departure\nOutput:", "test_query": "departure", "prediction": "\u201cthe word you entered is a verb. it", "cleaned_prediction": "\u201cthe word you entered is a verb. it", "gt": "d\u00e9part"}, {"input_prompt": "Input: consistent\nOutput:", "test_query": "consistent", "prediction": "inconsistent\ninput: inconsistent\noutput: inconsistent", "cleaned_prediction": "inconsistent", "gt": "coh\u00e9rent"}, {"input_prompt": "Input: temporary\nOutput:", "test_query": "temporary", "prediction": "permanent\nprocess: creation\nduration: short", "cleaned_prediction": "permanent", "gt": "temporaire"}, {"input_prompt": "Input: greece\nOutput:", "test_query": "greece", "prediction": "the country of greece is a sovereign state located", "cleaned_prediction": "the country of greece is a sovereign state located", "gt": "gr\u00e8ce"}, {"input_prompt": "Input: conquest\nOutput:", "test_query": "conquest", "prediction": "conquest\ninput: conquer\noutput: conquer", "cleaned_prediction": "conquest", "gt": "conqu\u00eate"}, {"input_prompt": "Input: convince\nOutput:", "test_query": "convince", "prediction": "convince\ndefinition: to persuade someone to do something", "cleaned_prediction": "convince", "gt": "convaincre"}, {"input_prompt": "Input: ukrainian\nOutput:", "test_query": "ukrainian", "prediction": "\u0432 \u0443\u043a\u0440\u0430\u0457\u043d\u0456 \u0456\u0441\u043d\u0443\u0454 \u0431\u0430\u0433\u0430\u0442\u043e \u0432\u0438\u0434\u0456\u0432 \u0441\u043f\u043e\u0440\u0442\u0443", "cleaned_prediction": "\u0432 \u0443\u043a\u0440\u0430\u0457\u043d\u0456 \u0456\u0441\u043d\u0443\u0454 \u0431\u0430\u0433\u0430\u0442\u043e \u0432\u0438\u0434\u0456\u0432 \u0441\u043f\u043e\u0440\u0442\u0443", "gt": "ukrainien"}, {"input_prompt": "Input: lie\nOutput:", "test_query": "lie", "prediction": "lie\ninput: lied\noutput: lie", "cleaned_prediction": "lie", "gt": "mensonge"}, {"input_prompt": "Input: meetings\nOutput:", "test_query": "meetings", "prediction": "a string with the name of the most frequent meeting", "cleaned_prediction": "a string with the name of the most frequent meeting", "gt": "r\u00e9unions"}, {"input_prompt": "Input: stretch\nOutput:", "test_query": "stretch", "prediction": "stretch\ndescription: stretch is a word.", "cleaned_prediction": "stretch", "gt": "\u00e9tirer"}, {"input_prompt": "Input: scholar\nOutput:", "test_query": "scholar", "prediction": "a scholar is a person who seeks knowledge, especially", "cleaned_prediction": "a scholar is a person who seeks knowledge, especially", "gt": "\u00e9rudit"}, {"input_prompt": "Input: proved\nOutput:", "test_query": "proved", "prediction": "proved\nexplanation: the word is already a valid", "cleaned_prediction": "proved", "gt": "prouv\u00e9"}, {"input_prompt": "Input: cited\nOutput:", "test_query": "cited", "prediction": "cited\nsynonyms: alluded, hinted,", "cleaned_prediction": "cited", "gt": "cit\u00e9"}, {"input_prompt": "Input: covered\nOutput:", "test_query": "covered", "prediction": "covered\ninput: leet\noutput: le", "cleaned_prediction": "covered", "gt": "couvert"}, {"input_prompt": "Input: bag\nOutput:", "test_query": "bag", "prediction": "{\"bag\": \"bag\"}\nexplanation: the function", "cleaned_prediction": "{\"bag\": \"bag\"}", "gt": "sac"}, {"input_prompt": "Input: injured\nOutput:", "test_query": "injured", "prediction": "\"we're so sorry to hear that you're", "cleaned_prediction": "\"we're so sorry to hear that you're", "gt": "bless\u00e9"}, {"input_prompt": "Input: spots\nOutput:", "test_query": "spots", "prediction": "spots\ncapitalize the first letter of the", "cleaned_prediction": "spots", "gt": "taches"}, {"input_prompt": "Input: succeed\nOutput:", "test_query": "succeed", "prediction": "succeed\ninput: fail\noutput: fail", "cleaned_prediction": "succeed", "gt": "r\u00e9ussir"}, {"input_prompt": "Input: competitions\nOutput:", "test_query": "competitions", "prediction": "competitions\nexplanation: the function takes a list of", "cleaned_prediction": "competitions", "gt": "comp\u00e9titions"}, {"input_prompt": "Input: reasonable\nOutput:", "test_query": "reasonable", "prediction": "reasonable\ndefinition: (adjective) able to", "cleaned_prediction": "reasonable", "gt": "raisonnable"}, {"input_prompt": "Input: prior\nOutput:", "test_query": "prior", "prediction": "posterior\nmodel: logistic regression\ndata: diabetes", "cleaned_prediction": "posterior", "gt": "avant"}, {"input_prompt": "Input: predecessor\nOutput:", "test_query": "predecessor", "prediction": "successor\n\n## step 1: understanding the concept", "cleaned_prediction": "successor", "gt": "pr\u00e9d\u00e9cesse"}, {"input_prompt": "Input: unused\nOutput:", "test_query": "unused", "prediction": "unused\nerror: unused\nwarning: unused", "cleaned_prediction": "unused", "gt": "inutilis\u00e9"}, {"input_prompt": "Input: alternate\nOutput:", "test_query": "alternate", "prediction": "alternate\ninput: reverse\noutput: reverse", "cleaned_prediction": "alternate", "gt": "alternatif"}, {"input_prompt": "Input: mathematics\nOutput:", "test_query": "mathematics", "prediction": "mathematics\nour model's response is the same as", "cleaned_prediction": "mathematics", "gt": "math\u00e9matiques"}]}